function ox(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const i=Object.getOwnPropertyDescriptor(r,s);i&&Object.defineProperty(n,s,i.get?i:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Eh="156",lx=0,bd=1,ux=2,dm=1,cx=2,qr=3,Rs=0,$n=1,Pr=2,As=0,ta=1,wd=2,Ad=3,Sd=4,hx=5,ji=100,dx=101,fx=102,_d=103,Ed=104,px=200,mx=201,gx=202,yx=203,fm=204,pm=205,vx=206,xx=207,bx=208,wx=209,Ax=210,Sx=0,_x=1,Ex=2,Ec=3,Tx=4,Cx=5,Mx=6,Rx=7,mm=0,Ix=1,Nx=2,Ss=0,Px=1,Dx=2,Lx=3,kx=4,Fx=5,gm=300,la=301,ua=302,Tc=303,Cc=304,Jl=306,Mc=1e3,br=1001,Rc=1002,dn=1003,Td=1004,Mu=1005,On=1006,Ox=1007,uo=1008,_s=1009,Ux=1010,Bx=1011,Th=1012,ym=1013,xs=1014,Jr=1015,co=1016,vm=1017,xm=1018,ni=1020,$x=1021,wr=1023,zx=1024,Vx=1025,ri=1026,ca=1027,bm=1028,wm=1029,Gx=1030,Am=1031,Sm=1033,Ru=33776,Iu=33777,Nu=33778,Pu=33779,Cd=35840,Md=35841,Rd=35842,Id=35843,Wx=36196,Nd=37492,Pd=37496,Dd=37808,Ld=37809,kd=37810,Fd=37811,Od=37812,Ud=37813,Bd=37814,$d=37815,zd=37816,Vd=37817,Gd=37818,Wd=37819,Hd=37820,Xd=37821,Du=36492,qd=36494,jd=36495,Hx=36283,Kd=36284,Yd=36285,Qd=36286,_m=3e3,si=3001,Xx=3200,qx=3201,jx=0,Kx=1,ii="",zt="srgb",Ur="srgb-linear",eu="display-p3",Lu=7680,Yx=519,Qx=512,Zx=513,Jx=514,eb=515,tb=516,nb=517,rb=518,sb=519,Zd=35044,Jd="300 es",Ic=1035,es=2e3,Ml=2001;class ba{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const r=this._listeners;r[e]===void 0&&(r[e]=[]),r[e].indexOf(t)===-1&&r[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const r=this._listeners;return r[e]!==void 0&&r[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const i=s.indexOf(t);i!==-1&&s.splice(i,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const r=this._listeners[e.type];if(r!==void 0){e.target=this;const s=r.slice(0);for(let i=0,a=s.length;i<a;i++)s[i].call(this,e);e.target=null}}}const vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],ku=Math.PI/180,Nc=180/Math.PI;function Co(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,r=Math.random()*4294967295|0;return(vn[n&255]+vn[n>>8&255]+vn[n>>16&255]+vn[n>>24&255]+"-"+vn[e&255]+vn[e>>8&255]+"-"+vn[e>>16&15|64]+vn[e>>24&255]+"-"+vn[t&63|128]+vn[t>>8&255]+"-"+vn[t>>16&255]+vn[t>>24&255]+vn[r&255]+vn[r>>8&255]+vn[r>>16&255]+vn[r>>24&255]).toLowerCase()}function Un(n,e,t){return Math.max(e,Math.min(t,n))}function ib(n,e){return(n%e+e)%e}function Fu(n,e,t){return(1-t)*n+t*e}function ef(n){return(n&n-1)===0&&n!==0}function Pc(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function Ba(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function Ln(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class Dt{constructor(e=0,t=0){Dt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,s=e.elements;return this.x=s[0]*t+s[3]*r+s[6],this.y=s[1]*t+s[4]*r+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(Un(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),s=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*s+e.x,this.y=i*s+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,r,s,i,a,o,l,u){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,r,s,i,a,o,l,u)}set(e,t,r,s,i,a,o,l,u){const c=this.elements;return c[0]=e,c[1]=s,c[2]=o,c[3]=t,c[4]=i,c[5]=l,c[6]=r,c[7]=a,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[3],l=r[6],u=r[1],c=r[4],h=r[7],d=r[2],f=r[5],m=r[8],y=s[0],p=s[3],g=s[6],A=s[1],x=s[4],S=s[7],E=s[2],M=s[5],R=s[8];return i[0]=a*y+o*A+l*E,i[3]=a*p+o*x+l*M,i[6]=a*g+o*S+l*R,i[1]=u*y+c*A+h*E,i[4]=u*p+c*x+h*M,i[7]=u*g+c*S+h*R,i[2]=d*y+f*A+m*E,i[5]=d*p+f*x+m*M,i[8]=d*g+f*S+m*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8];return t*a*c-t*o*u-r*i*c+r*o*l+s*i*u-s*a*l}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=c*a-o*u,d=o*l-c*i,f=u*i-a*l,m=t*h+r*d+s*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/m;return e[0]=h*y,e[1]=(s*u-c*r)*y,e[2]=(o*r-s*a)*y,e[3]=d*y,e[4]=(c*t-s*l)*y,e[5]=(s*i-o*t)*y,e[6]=f*y,e[7]=(r*l-u*t)*y,e[8]=(a*t-r*i)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,s,i,a,o){const l=Math.cos(i),u=Math.sin(i);return this.set(r*l,r*u,-r*(l*a+u*o)+a+e,-s*u,s*l,-s*(-u*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Ou.makeScale(e,t)),this}rotate(e){return this.premultiply(Ou.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ou.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<9;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Ou=new pt;function Em(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function Rl(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function ab(){const n=Rl("canvas");return n.style.display="block",n}const tf={};function no(n){n in tf||(tf[n]=!0,console.warn(n))}function na(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Uu(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const ob=new pt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),lb=new pt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function ub(n){return n.convertSRGBToLinear().applyMatrix3(lb)}function cb(n){return n.applyMatrix3(ob).convertLinearToSRGB()}const hb={[Ur]:n=>n,[zt]:n=>n.convertSRGBToLinear(),[eu]:ub},db={[Ur]:n=>n,[zt]:n=>n.convertLinearToSRGB(),[eu]:cb},fr={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return Ur},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const r=hb[e],s=db[t];if(r===void 0||s===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return s(r(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}};let Ri;class Tm{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ri===void 0&&(Ri=Rl("canvas")),Ri.width=e.width,Ri.height=e.height;const r=Ri.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Ri}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Rl("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);const s=r.getImageData(0,0,e.width,e.height),i=s.data;for(let a=0;a<i.length;a++)i[a]=na(i[a]/255)*255;return r.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let r=0;r<t.length;r++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[r]=Math.floor(na(t[r]/255)*255):t[r]=na(t[r]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let fb=0;class Cm{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:fb++}),this.uuid=Co(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const r={uuid:this.uuid,url:""},s=this.data;if(s!==null){let i;if(Array.isArray(s)){i=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?i.push(Bu(s[a].image)):i.push(Bu(s[a]))}else i=Bu(s);r.url=i}return t||(e.images[this.uuid]=r),r}}function Bu(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Tm.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let pb=0;class mn extends ba{constructor(e=mn.DEFAULT_IMAGE,t=mn.DEFAULT_MAPPING,r=br,s=br,i=On,a=uo,o=wr,l=_s,u=mn.DEFAULT_ANISOTROPY,c=ii){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:pb++}),this.uuid=Co(),this.name="",this.source=new Cm(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=r,this.wrapT=s,this.magFilter=i,this.minFilter=a,this.anisotropy=u,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Dt(0,0),this.repeat=new Dt(1,1),this.center=new Dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof c=="string"?this.colorSpace=c:(no("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===si?zt:ii),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const r={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==gm)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Mc:e.x=e.x-Math.floor(e.x);break;case br:e.x=e.x<0?0:1;break;case Rc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Mc:e.y=e.y-Math.floor(e.y);break;case br:e.y=e.y<0?0:1;break;case Rc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return no("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===zt?si:_m}set encoding(e){no("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===si?zt:ii}}mn.DEFAULT_IMAGE=null;mn.DEFAULT_MAPPING=gm;mn.DEFAULT_ANISOTROPY=1;class pn{constructor(e=0,t=0,r=0,s=1){pn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,s){return this.x=e,this.y=t,this.z=r,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*s+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*s+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*s+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*s+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,s,i;const l=e.elements,u=l[0],c=l[4],h=l[8],d=l[1],f=l[5],m=l[9],y=l[2],p=l[6],g=l[10];if(Math.abs(c-d)<.01&&Math.abs(h-y)<.01&&Math.abs(m-p)<.01){if(Math.abs(c+d)<.1&&Math.abs(h+y)<.1&&Math.abs(m+p)<.1&&Math.abs(u+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(u+1)/2,S=(f+1)/2,E=(g+1)/2,M=(c+d)/4,R=(h+y)/4,O=(m+p)/4;return x>S&&x>E?x<.01?(r=0,s=.707106781,i=.707106781):(r=Math.sqrt(x),s=M/r,i=R/r):S>E?S<.01?(r=.707106781,s=0,i=.707106781):(s=Math.sqrt(S),r=M/s,i=O/s):E<.01?(r=.707106781,s=.707106781,i=0):(i=Math.sqrt(E),r=R/i,s=O/i),this.set(r,s,i,t),this}let A=Math.sqrt((p-m)*(p-m)+(h-y)*(h-y)+(d-c)*(d-c));return Math.abs(A)<.001&&(A=1),this.x=(p-m)/A,this.y=(h-y)/A,this.z=(d-c)/A,this.w=Math.acos((u+f+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class mb extends ba{constructor(e=1,t=1,r={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new pn(0,0,e,t),this.scissorTest=!1,this.viewport=new pn(0,0,e,t);const s={width:e,height:t,depth:1};r.encoding!==void 0&&(no("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),r.colorSpace=r.encoding===si?zt:ii),this.texture=new mn(s,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=r.generateMipmaps!==void 0?r.generateMipmaps:!1,this.texture.internalFormat=r.internalFormat!==void 0?r.internalFormat:null,this.texture.minFilter=r.minFilter!==void 0?r.minFilter:On,this.depthBuffer=r.depthBuffer!==void 0?r.depthBuffer:!0,this.stencilBuffer=r.stencilBuffer!==void 0?r.stencilBuffer:!1,this.depthTexture=r.depthTexture!==void 0?r.depthTexture:null,this.samples=r.samples!==void 0?r.samples:0}setSize(e,t,r=1){(this.width!==e||this.height!==t||this.depth!==r)&&(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Cm(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ui extends mb{constructor(e=1,t=1,r={}){super(e,t,r),this.isWebGLRenderTarget=!0}}class Mm extends mn{constructor(e=null,t=1,r=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=dn,this.minFilter=dn,this.wrapR=br,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class gb extends mn{constructor(e=null,t=1,r=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=dn,this.minFilter=dn,this.wrapR=br,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Mo{constructor(e=0,t=0,r=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=s}static slerpFlat(e,t,r,s,i,a,o){let l=r[s+0],u=r[s+1],c=r[s+2],h=r[s+3];const d=i[a+0],f=i[a+1],m=i[a+2],y=i[a+3];if(o===0){e[t+0]=l,e[t+1]=u,e[t+2]=c,e[t+3]=h;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=m,e[t+3]=y;return}if(h!==y||l!==d||u!==f||c!==m){let p=1-o;const g=l*d+u*f+c*m+h*y,A=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const E=Math.sqrt(x),M=Math.atan2(E,g*A);p=Math.sin(p*M)/E,o=Math.sin(o*M)/E}const S=o*A;if(l=l*p+d*S,u=u*p+f*S,c=c*p+m*S,h=h*p+y*S,p===1-o){const E=1/Math.sqrt(l*l+u*u+c*c+h*h);l*=E,u*=E,c*=E,h*=E}}e[t]=l,e[t+1]=u,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,r,s,i,a){const o=r[s],l=r[s+1],u=r[s+2],c=r[s+3],h=i[a],d=i[a+1],f=i[a+2],m=i[a+3];return e[t]=o*m+c*h+l*f-u*d,e[t+1]=l*m+c*d+u*h-o*f,e[t+2]=u*m+c*f+o*d-l*h,e[t+3]=c*m-o*h-l*d-u*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,s){return this._x=e,this._y=t,this._z=r,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const r=e._x,s=e._y,i=e._z,a=e._order,o=Math.cos,l=Math.sin,u=o(r/2),c=o(s/2),h=o(i/2),d=l(r/2),f=l(s/2),m=l(i/2);switch(a){case"XYZ":this._x=d*c*h+u*f*m,this._y=u*f*h-d*c*m,this._z=u*c*m+d*f*h,this._w=u*c*h-d*f*m;break;case"YXZ":this._x=d*c*h+u*f*m,this._y=u*f*h-d*c*m,this._z=u*c*m-d*f*h,this._w=u*c*h+d*f*m;break;case"ZXY":this._x=d*c*h-u*f*m,this._y=u*f*h+d*c*m,this._z=u*c*m+d*f*h,this._w=u*c*h-d*f*m;break;case"ZYX":this._x=d*c*h-u*f*m,this._y=u*f*h+d*c*m,this._z=u*c*m-d*f*h,this._w=u*c*h+d*f*m;break;case"YZX":this._x=d*c*h+u*f*m,this._y=u*f*h+d*c*m,this._z=u*c*m-d*f*h,this._w=u*c*h-d*f*m;break;case"XZY":this._x=d*c*h-u*f*m,this._y=u*f*h-d*c*m,this._z=u*c*m+d*f*h,this._w=u*c*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,s=Math.sin(r);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],s=t[4],i=t[8],a=t[1],o=t[5],l=t[9],u=t[2],c=t[6],h=t[10],d=r+o+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(c-l)*f,this._y=(i-u)*f,this._z=(a-s)*f}else if(r>o&&r>h){const f=2*Math.sqrt(1+r-o-h);this._w=(c-l)/f,this._x=.25*f,this._y=(s+a)/f,this._z=(i+u)/f}else if(o>h){const f=2*Math.sqrt(1+o-r-h);this._w=(i-u)/f,this._x=(s+a)/f,this._y=.25*f,this._z=(l+c)/f}else{const f=2*Math.sqrt(1+h-r-o);this._w=(a-s)/f,this._x=(i+u)/f,this._y=(l+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Un(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(r===0)return this;const s=Math.min(1,t/r);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,s=e._y,i=e._z,a=e._w,o=t._x,l=t._y,u=t._z,c=t._w;return this._x=r*c+a*o+s*u-i*l,this._y=s*c+a*l+i*o-r*u,this._z=i*c+a*u+r*l-s*o,this._w=a*c-r*o-s*l-i*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const r=this._x,s=this._y,i=this._z,a=this._w;let o=a*e._w+r*e._x+s*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=s,this._z=i,this;const l=1-o*o;if(l<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*r+t*this._x,this._y=f*s+t*this._y,this._z=f*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),c=Math.atan2(u,o),h=Math.sin((1-t)*c)/u,d=Math.sin(t*c)/u;return this._w=a*h+this._w*d,this._x=r*h+this._x*d,this._y=s*h+this._y*d,this._z=i*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){const e=Math.random(),t=Math.sqrt(1-e),r=Math.sqrt(e),s=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(s),r*Math.sin(i),r*Math.cos(i),t*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class re{constructor(e=0,t=0,r=0){re.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return r===void 0&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(nf.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(nf.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*s,this.y=i[1]*t+i[4]*r+i[7]*s,this.z=i[2]*t+i[5]*r+i[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*s+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*s+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*s+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*s+i[14])*a,this}applyQuaternion(e){const t=this.x,r=this.y,s=this.z,i=e.x,a=e.y,o=e.z,l=e.w,u=l*t+a*s-o*r,c=l*r+o*t-i*s,h=l*s+i*r-a*t,d=-i*t-a*r-o*s;return this.x=u*l+d*-i+c*-o-h*-a,this.y=c*l+d*-a+h*-i-u*-o,this.z=h*l+d*-o+u*-a-c*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*s,this.y=i[1]*t+i[5]*r+i[9]*s,this.z=i[2]*t+i[6]*r+i[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,s=e.y,i=e.z,a=t.x,o=t.y,l=t.z;return this.x=s*l-i*o,this.y=i*a-r*l,this.z=r*o-s*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return $u.copy(this).projectOnVector(e),this.sub($u)}reflect(e){return this.sub($u.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(Un(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,s=this.z-e.z;return t*t+r*r+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const s=Math.sin(t)*e;return this.x=s*Math.sin(r),this.y=Math.cos(t)*e,this.z=s*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const $u=new re,nf=new Mo;class Ro{constructor(e=new re(1/0,1/0,1/0),t=new re(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t+=3)this.expandByPoint(Vr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,r=e.count;t<r;t++)this.expandByPoint(Vr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=Vr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Ii.copy(e.boundingBox),Ii.applyMatrix4(e.matrixWorld),this.union(Ii);else{const s=e.geometry;if(s!==void 0)if(t&&s.attributes!==void 0&&s.attributes.position!==void 0){const i=s.attributes.position;for(let a=0,o=i.count;a<o;a++)Vr.fromBufferAttribute(i,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Vr)}else s.boundingBox===null&&s.computeBoundingBox(),Ii.copy(s.boundingBox),Ii.applyMatrix4(e.matrixWorld),this.union(Ii)}const r=e.children;for(let s=0,i=r.length;s<i;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Vr),Vr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter($a),Xo.subVectors(this.max,$a),Ni.subVectors(e.a,$a),Pi.subVectors(e.b,$a),Di.subVectors(e.c,$a),ds.subVectors(Pi,Ni),fs.subVectors(Di,Pi),Us.subVectors(Ni,Di);let t=[0,-ds.z,ds.y,0,-fs.z,fs.y,0,-Us.z,Us.y,ds.z,0,-ds.x,fs.z,0,-fs.x,Us.z,0,-Us.x,-ds.y,ds.x,0,-fs.y,fs.x,0,-Us.y,Us.x,0];return!zu(t,Ni,Pi,Di,Xo)||(t=[1,0,0,0,1,0,0,0,1],!zu(t,Ni,Pi,Di,Xo))?!1:(qo.crossVectors(ds,fs),t=[qo.x,qo.y,qo.z],zu(t,Ni,Pi,Di,Xo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Vr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Vr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(zr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),zr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),zr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),zr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),zr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),zr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),zr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),zr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(zr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const zr=[new re,new re,new re,new re,new re,new re,new re,new re],Vr=new re,Ii=new Ro,Ni=new re,Pi=new re,Di=new re,ds=new re,fs=new re,Us=new re,$a=new re,Xo=new re,qo=new re,Bs=new re;function zu(n,e,t,r,s){for(let i=0,a=n.length-3;i<=a;i+=3){Bs.fromArray(n,i);const o=s.x*Math.abs(Bs.x)+s.y*Math.abs(Bs.y)+s.z*Math.abs(Bs.z),l=e.dot(Bs),u=t.dot(Bs),c=r.dot(Bs);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>o)return!1}return!0}const yb=new Ro,za=new re,Vu=new re;class tu{constructor(e=new re,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;t!==void 0?r.copy(t):yb.setFromPoints(e).getCenter(r);let s=0;for(let i=0,a=e.length;i<a;i++)s=Math.max(s,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;za.subVectors(e,this.center);const t=za.lengthSq();if(t>this.radius*this.radius){const r=Math.sqrt(t),s=(r-this.radius)*.5;this.center.addScaledVector(za,s/r),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Vu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(za.copy(e.center).add(Vu)),this.expandByPoint(za.copy(e.center).sub(Vu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Gr=new re,Gu=new re,jo=new re,ps=new re,Wu=new re,Ko=new re,Hu=new re;class Rm{constructor(e=new re,t=new re(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Gr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Gr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Gr.copy(this.origin).addScaledVector(this.direction,t),Gr.distanceToSquared(e))}distanceSqToSegment(e,t,r,s){Gu.copy(e).add(t).multiplyScalar(.5),jo.copy(t).sub(e).normalize(),ps.copy(this.origin).sub(Gu);const i=e.distanceTo(t)*.5,a=-this.direction.dot(jo),o=ps.dot(this.direction),l=-ps.dot(jo),u=ps.lengthSq(),c=Math.abs(1-a*a);let h,d,f,m;if(c>0)if(h=a*l-o,d=a*o-l,m=i*c,h>=0)if(d>=-m)if(d<=m){const y=1/c;h*=y,d*=y,f=h*(h+a*d+2*o)+d*(a*h+d+2*l)+u}else d=i,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*l)+u;else d=-i,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*l)+u;else d<=-m?(h=Math.max(0,-(-a*i+o)),d=h>0?-i:Math.min(Math.max(-i,-l),i),f=-h*h+d*(d+2*l)+u):d<=m?(h=0,d=Math.min(Math.max(-i,-l),i),f=d*(d+2*l)+u):(h=Math.max(0,-(a*i+o)),d=h>0?i:Math.min(Math.max(-i,-l),i),f=-h*h+d*(d+2*l)+u);else d=a>0?-i:i,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*l)+u;return r&&r.copy(this.origin).addScaledVector(this.direction,h),s&&s.copy(Gu).addScaledVector(jo,d),f}intersectSphere(e,t){Gr.subVectors(e.center,this.origin);const r=Gr.dot(this.direction),s=Gr.dot(Gr)-r*r,i=e.radius*e.radius;if(s>i)return null;const a=Math.sqrt(i-s),o=r-a,l=r+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return r===null?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,s,i,a,o,l;const u=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,d=this.origin;return u>=0?(r=(e.min.x-d.x)*u,s=(e.max.x-d.x)*u):(r=(e.max.x-d.x)*u,s=(e.min.x-d.x)*u),c>=0?(i=(e.min.y-d.y)*c,a=(e.max.y-d.y)*c):(i=(e.max.y-d.y)*c,a=(e.min.y-d.y)*c),r>a||i>s||((i>r||isNaN(r))&&(r=i),(a<s||isNaN(s))&&(s=a),h>=0?(o=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(o=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),r>l||o>s)||((o>r||r!==r)&&(r=o),(l<s||s!==s)&&(s=l),s<0)?null:this.at(r>=0?r:s,t)}intersectsBox(e){return this.intersectBox(e,Gr)!==null}intersectTriangle(e,t,r,s,i){Wu.subVectors(t,e),Ko.subVectors(r,e),Hu.crossVectors(Wu,Ko);let a=this.direction.dot(Hu),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;ps.subVectors(this.origin,e);const l=o*this.direction.dot(Ko.crossVectors(ps,Ko));if(l<0)return null;const u=o*this.direction.dot(Wu.cross(ps));if(u<0||l+u>a)return null;const c=-o*ps.dot(Hu);return c<0?null:this.at(c/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ln{constructor(e,t,r,s,i,a,o,l,u,c,h,d,f,m,y,p){ln.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,r,s,i,a,o,l,u,c,h,d,f,m,y,p)}set(e,t,r,s,i,a,o,l,u,c,h,d,f,m,y,p){const g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=s,g[1]=i,g[5]=a,g[9]=o,g[13]=l,g[2]=u,g[6]=c,g[10]=h,g[14]=d,g[3]=f,g[7]=m,g[11]=y,g[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ln().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,s=1/Li.setFromMatrixColumn(e,0).length(),i=1/Li.setFromMatrixColumn(e,1).length(),a=1/Li.setFromMatrixColumn(e,2).length();return t[0]=r[0]*s,t[1]=r[1]*s,t[2]=r[2]*s,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,r=e.x,s=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),l=Math.cos(s),u=Math.sin(s),c=Math.cos(i),h=Math.sin(i);if(e.order==="XYZ"){const d=a*c,f=a*h,m=o*c,y=o*h;t[0]=l*c,t[4]=-l*h,t[8]=u,t[1]=f+m*u,t[5]=d-y*u,t[9]=-o*l,t[2]=y-d*u,t[6]=m+f*u,t[10]=a*l}else if(e.order==="YXZ"){const d=l*c,f=l*h,m=u*c,y=u*h;t[0]=d+y*o,t[4]=m*o-f,t[8]=a*u,t[1]=a*h,t[5]=a*c,t[9]=-o,t[2]=f*o-m,t[6]=y+d*o,t[10]=a*l}else if(e.order==="ZXY"){const d=l*c,f=l*h,m=u*c,y=u*h;t[0]=d-y*o,t[4]=-a*h,t[8]=m+f*o,t[1]=f+m*o,t[5]=a*c,t[9]=y-d*o,t[2]=-a*u,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const d=a*c,f=a*h,m=o*c,y=o*h;t[0]=l*c,t[4]=m*u-f,t[8]=d*u+y,t[1]=l*h,t[5]=y*u+d,t[9]=f*u-m,t[2]=-u,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const d=a*l,f=a*u,m=o*l,y=o*u;t[0]=l*c,t[4]=y-d*h,t[8]=m*h+f,t[1]=h,t[5]=a*c,t[9]=-o*c,t[2]=-u*c,t[6]=f*h+m,t[10]=d-y*h}else if(e.order==="XZY"){const d=a*l,f=a*u,m=o*l,y=o*u;t[0]=l*c,t[4]=-h,t[8]=u*c,t[1]=d*h+y,t[5]=a*c,t[9]=f*h-m,t[2]=m*h-f,t[6]=o*c,t[10]=y*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(vb,e,xb)}lookAt(e,t,r){const s=this.elements;return Xn.subVectors(e,t),Xn.lengthSq()===0&&(Xn.z=1),Xn.normalize(),ms.crossVectors(r,Xn),ms.lengthSq()===0&&(Math.abs(r.z)===1?Xn.x+=1e-4:Xn.z+=1e-4,Xn.normalize(),ms.crossVectors(r,Xn)),ms.normalize(),Yo.crossVectors(Xn,ms),s[0]=ms.x,s[4]=Yo.x,s[8]=Xn.x,s[1]=ms.y,s[5]=Yo.y,s[9]=Xn.y,s[2]=ms.z,s[6]=Yo.z,s[10]=Xn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[4],l=r[8],u=r[12],c=r[1],h=r[5],d=r[9],f=r[13],m=r[2],y=r[6],p=r[10],g=r[14],A=r[3],x=r[7],S=r[11],E=r[15],M=s[0],R=s[4],O=s[8],C=s[12],N=s[1],$=s[5],q=s[9],z=s[13],F=s[2],X=s[6],Q=s[10],Z=s[14],ie=s[3],de=s[7],ve=s[11],J=s[15];return i[0]=a*M+o*N+l*F+u*ie,i[4]=a*R+o*$+l*X+u*de,i[8]=a*O+o*q+l*Q+u*ve,i[12]=a*C+o*z+l*Z+u*J,i[1]=c*M+h*N+d*F+f*ie,i[5]=c*R+h*$+d*X+f*de,i[9]=c*O+h*q+d*Q+f*ve,i[13]=c*C+h*z+d*Z+f*J,i[2]=m*M+y*N+p*F+g*ie,i[6]=m*R+y*$+p*X+g*de,i[10]=m*O+y*q+p*Q+g*ve,i[14]=m*C+y*z+p*Z+g*J,i[3]=A*M+x*N+S*F+E*ie,i[7]=A*R+x*$+S*X+E*de,i[11]=A*O+x*q+S*Q+E*ve,i[15]=A*C+x*z+S*Z+E*J,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],s=e[8],i=e[12],a=e[1],o=e[5],l=e[9],u=e[13],c=e[2],h=e[6],d=e[10],f=e[14],m=e[3],y=e[7],p=e[11],g=e[15];return m*(+i*l*h-s*u*h-i*o*d+r*u*d+s*o*f-r*l*f)+y*(+t*l*f-t*u*d+i*a*d-s*a*f+s*u*c-i*l*c)+p*(+t*u*h-t*o*f-i*a*h+r*a*f+i*o*c-r*u*c)+g*(-s*o*c-t*l*h+t*o*d+s*a*h-r*a*d+r*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],m=e[12],y=e[13],p=e[14],g=e[15],A=h*p*u-y*d*u+y*l*f-o*p*f-h*l*g+o*d*g,x=m*d*u-c*p*u-m*l*f+a*p*f+c*l*g-a*d*g,S=c*y*u-m*h*u+m*o*f-a*y*f-c*o*g+a*h*g,E=m*h*l-c*y*l-m*o*d+a*y*d+c*o*p-a*h*p,M=t*A+r*x+s*S+i*E;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/M;return e[0]=A*R,e[1]=(y*d*i-h*p*i-y*s*f+r*p*f+h*s*g-r*d*g)*R,e[2]=(o*p*i-y*l*i+y*s*u-r*p*u-o*s*g+r*l*g)*R,e[3]=(h*l*i-o*d*i-h*s*u+r*d*u+o*s*f-r*l*f)*R,e[4]=x*R,e[5]=(c*p*i-m*d*i+m*s*f-t*p*f-c*s*g+t*d*g)*R,e[6]=(m*l*i-a*p*i-m*s*u+t*p*u+a*s*g-t*l*g)*R,e[7]=(a*d*i-c*l*i+c*s*u-t*d*u-a*s*f+t*l*f)*R,e[8]=S*R,e[9]=(m*h*i-c*y*i-m*r*f+t*y*f+c*r*g-t*h*g)*R,e[10]=(a*y*i-m*o*i+m*r*u-t*y*u-a*r*g+t*o*g)*R,e[11]=(c*o*i-a*h*i-c*r*u+t*h*u+a*r*f-t*o*f)*R,e[12]=E*R,e[13]=(c*y*s-m*h*s+m*r*d-t*y*d-c*r*p+t*h*p)*R,e[14]=(m*o*s-a*y*s-m*r*l+t*y*l+a*r*p-t*o*p)*R,e[15]=(a*h*s-c*o*s+c*r*l-t*h*l-a*r*d+t*o*d)*R,this}scale(e){const t=this.elements,r=e.x,s=e.y,i=e.z;return t[0]*=r,t[4]*=s,t[8]*=i,t[1]*=r,t[5]*=s,t[9]*=i,t[2]*=r,t[6]*=s,t[10]*=i,t[3]*=r,t[7]*=s,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,s))}makeTranslation(e,t,r){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),s=Math.sin(t),i=1-r,a=e.x,o=e.y,l=e.z,u=i*a,c=i*o;return this.set(u*a+r,u*o-s*l,u*l+s*o,0,u*o+s*l,c*o+r,c*l-s*a,0,u*l-s*o,c*l+s*a,i*l*l+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,s,i,a){return this.set(1,r,i,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,r){const s=this.elements,i=t._x,a=t._y,o=t._z,l=t._w,u=i+i,c=a+a,h=o+o,d=i*u,f=i*c,m=i*h,y=a*c,p=a*h,g=o*h,A=l*u,x=l*c,S=l*h,E=r.x,M=r.y,R=r.z;return s[0]=(1-(y+g))*E,s[1]=(f+S)*E,s[2]=(m-x)*E,s[3]=0,s[4]=(f-S)*M,s[5]=(1-(d+g))*M,s[6]=(p+A)*M,s[7]=0,s[8]=(m+x)*R,s[9]=(p-A)*R,s[10]=(1-(d+y))*R,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,r){const s=this.elements;let i=Li.set(s[0],s[1],s[2]).length();const a=Li.set(s[4],s[5],s[6]).length(),o=Li.set(s[8],s[9],s[10]).length();this.determinant()<0&&(i=-i),e.x=s[12],e.y=s[13],e.z=s[14],pr.copy(this);const u=1/i,c=1/a,h=1/o;return pr.elements[0]*=u,pr.elements[1]*=u,pr.elements[2]*=u,pr.elements[4]*=c,pr.elements[5]*=c,pr.elements[6]*=c,pr.elements[8]*=h,pr.elements[9]*=h,pr.elements[10]*=h,t.setFromRotationMatrix(pr),r.x=i,r.y=a,r.z=o,this}makePerspective(e,t,r,s,i,a,o=es){const l=this.elements,u=2*i/(t-e),c=2*i/(r-s),h=(t+e)/(t-e),d=(r+s)/(r-s);let f,m;if(o===es)f=-(a+i)/(a-i),m=-2*a*i/(a-i);else if(o===Ml)f=-a/(a-i),m=-a*i/(a-i);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=u,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=c,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,r,s,i,a,o=es){const l=this.elements,u=1/(t-e),c=1/(r-s),h=1/(a-i),d=(t+e)*u,f=(r+s)*c;let m,y;if(o===es)m=(a+i)*h,y=-2*h;else if(o===Ml)m=i*h,y=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*c,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=y,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<16;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const Li=new re,pr=new ln,vb=new re(0,0,0),xb=new re(1,1,1),ms=new re,Yo=new re,Xn=new re,rf=new ln,sf=new Mo;class nu{constructor(e=0,t=0,r=0,s=nu.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,s=this._order){return this._x=e,this._y=t,this._z=r,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){const s=e.elements,i=s[0],a=s[4],o=s[8],l=s[1],u=s[5],c=s[9],h=s[2],d=s[6],f=s[10];switch(t){case"XYZ":this._y=Math.asin(Un(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(d,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Un(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(Un(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-Un(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(Un(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-Un(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,r===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return rf.makeRotationFromQuaternion(e),this.setFromRotationMatrix(rf,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return sf.setFromEuler(this),this.setFromQuaternion(sf,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}nu.DEFAULT_ORDER="XYZ";class Im{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let bb=0;const af=new re,ki=new Mo,Wr=new ln,Qo=new re,Va=new re,wb=new re,Ab=new Mo,of=new re(1,0,0),lf=new re(0,1,0),uf=new re(0,0,1),Sb={type:"added"},_b={type:"removed"};class zn extends ba{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bb++}),this.uuid=Co(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=zn.DEFAULT_UP.clone();const e=new re,t=new nu,r=new Mo,s=new re(1,1,1);function i(){r.setFromEuler(t,!1)}function a(){t.setFromQuaternion(r,void 0,!1)}t._onChange(i),r._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new ln},normalMatrix:{value:new pt}}),this.matrix=new ln,this.matrixWorld=new ln,this.matrixAutoUpdate=zn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=zn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Im,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ki.setFromAxisAngle(e,t),this.quaternion.multiply(ki),this}rotateOnWorldAxis(e,t){return ki.setFromAxisAngle(e,t),this.quaternion.premultiply(ki),this}rotateX(e){return this.rotateOnAxis(of,e)}rotateY(e){return this.rotateOnAxis(lf,e)}rotateZ(e){return this.rotateOnAxis(uf,e)}translateOnAxis(e,t){return af.copy(e).applyQuaternion(this.quaternion),this.position.add(af.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(of,e)}translateY(e){return this.translateOnAxis(lf,e)}translateZ(e){return this.translateOnAxis(uf,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Wr.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?Qo.copy(e):Qo.set(e,t,r);const s=this.parent;this.updateWorldMatrix(!0,!1),Va.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wr.lookAt(Va,Qo,this.up):Wr.lookAt(Qo,Va,this.up),this.quaternion.setFromRotationMatrix(Wr),s&&(Wr.extractRotation(s.matrixWorld),ki.setFromRotationMatrix(Wr),this.quaternion.premultiply(ki.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Sb)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let r=0;r<arguments.length;r++)this.remove(arguments[r]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_b)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Wr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,s=this.children.length;r<s;r++){const a=this.children[r].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let r=[];this[e]===t&&r.push(this);for(let s=0,i=this.children.length;s<i;s++){const a=this.children[s].getObjectsByProperty(e,t);a.length>0&&(r=r.concat(a))}return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Va,e,wb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Va,Ab,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,s=t.length;r<s;r++){const i=t[r];(i.matrixWorldAutoUpdate===!0||e===!0)&&i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const r=this.parent;if(e===!0&&r!==null&&r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const s=this.children;for(let i=0,a=s.length;i<a;i++){const o=s[i];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function i(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=i(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let u=0,c=l.length;u<c;u++){const h=l[u];i(e.shapes,h)}else i(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(i(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,u=this.material.length;l<u;l++)o.push(i(e.materials,this.material[l]));s.material=o}else s.material=i(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];s.animations.push(i(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),u=a(e.textures),c=a(e.images),h=a(e.shapes),d=a(e.skeletons),f=a(e.animations),m=a(e.nodes);o.length>0&&(r.geometries=o),l.length>0&&(r.materials=l),u.length>0&&(r.textures=u),c.length>0&&(r.images=c),h.length>0&&(r.shapes=h),d.length>0&&(r.skeletons=d),f.length>0&&(r.animations=f),m.length>0&&(r.nodes=m)}return r.object=s,r;function a(o){const l=[];for(const u in o){const c=o[u];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let r=0;r<e.children.length;r++){const s=e.children[r];this.add(s.clone())}return this}}zn.DEFAULT_UP=new re(0,1,0);zn.DEFAULT_MATRIX_AUTO_UPDATE=!0;zn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const mr=new re,Hr=new re,Xu=new re,Xr=new re,Fi=new re,Oi=new re,cf=new re,qu=new re,ju=new re,Ku=new re;let Zo=!1;class vr{constructor(e=new re,t=new re,r=new re){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,s){s.subVectors(r,t),mr.subVectors(e,t),s.cross(mr);const i=s.lengthSq();return i>0?s.multiplyScalar(1/Math.sqrt(i)):s.set(0,0,0)}static getBarycoord(e,t,r,s,i){mr.subVectors(s,t),Hr.subVectors(r,t),Xu.subVectors(e,t);const a=mr.dot(mr),o=mr.dot(Hr),l=mr.dot(Xu),u=Hr.dot(Hr),c=Hr.dot(Xu),h=a*u-o*o;if(h===0)return i.set(-2,-1,-1);const d=1/h,f=(u*l-o*c)*d,m=(a*c-o*l)*d;return i.set(1-f-m,m,f)}static containsPoint(e,t,r,s){return this.getBarycoord(e,t,r,s,Xr),Xr.x>=0&&Xr.y>=0&&Xr.x+Xr.y<=1}static getUV(e,t,r,s,i,a,o,l){return Zo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Zo=!0),this.getInterpolation(e,t,r,s,i,a,o,l)}static getInterpolation(e,t,r,s,i,a,o,l){return this.getBarycoord(e,t,r,s,Xr),l.setScalar(0),l.addScaledVector(i,Xr.x),l.addScaledVector(a,Xr.y),l.addScaledVector(o,Xr.z),l}static isFrontFacing(e,t,r,s){return mr.subVectors(r,t),Hr.subVectors(e,t),mr.cross(Hr).dot(s)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,s){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,r,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return mr.subVectors(this.c,this.b),Hr.subVectors(this.a,this.b),mr.cross(Hr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return vr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return vr.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,s,i){return Zo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Zo=!0),vr.getInterpolation(e,this.a,this.b,this.c,t,r,s,i)}getInterpolation(e,t,r,s,i){return vr.getInterpolation(e,this.a,this.b,this.c,t,r,s,i)}containsPoint(e){return vr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return vr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,s=this.b,i=this.c;let a,o;Fi.subVectors(s,r),Oi.subVectors(i,r),qu.subVectors(e,r);const l=Fi.dot(qu),u=Oi.dot(qu);if(l<=0&&u<=0)return t.copy(r);ju.subVectors(e,s);const c=Fi.dot(ju),h=Oi.dot(ju);if(c>=0&&h<=c)return t.copy(s);const d=l*h-c*u;if(d<=0&&l>=0&&c<=0)return a=l/(l-c),t.copy(r).addScaledVector(Fi,a);Ku.subVectors(e,i);const f=Fi.dot(Ku),m=Oi.dot(Ku);if(m>=0&&f<=m)return t.copy(i);const y=f*u-l*m;if(y<=0&&u>=0&&m<=0)return o=u/(u-m),t.copy(r).addScaledVector(Oi,o);const p=c*m-f*h;if(p<=0&&h-c>=0&&f-m>=0)return cf.subVectors(i,s),o=(h-c)/(h-c+(f-m)),t.copy(s).addScaledVector(cf,o);const g=1/(p+y+d);return a=y*g,o=d*g,t.copy(r).addScaledVector(Fi,a).addScaledVector(Oi,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Eb=0;class Io extends ba{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Eb++}),this.uuid=Co(),this.name="",this.type="Material",this.blending=ta,this.side=Rs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=fm,this.blendDst=pm,this.blendEquation=ji,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ec,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Yx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Lu,this.stencilZFail=Lu,this.stencilZPass=Lu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const r=e[t];if(r===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(r):s&&s.isVector3&&r&&r.isVector3?s.copy(r):this[t]=r}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const r={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),this.roughness!==void 0&&(r.roughness=this.roughness),this.metalness!==void 0&&(r.metalness=this.metalness),this.sheen!==void 0&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(r.shininess=this.shininess),this.clearcoat!==void 0&&(r.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(r.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(r.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(r.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(r.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(r.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(r.combine=this.combine)),this.envMapIntensity!==void 0&&(r.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(r.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(r.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(r.size=this.size),this.shadowSide!==null&&(r.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==ta&&(r.blending=this.blending),this.side!==Rs&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),this.transparent===!0&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(r.rotation=this.rotation),this.polygonOffset===!0&&(r.polygonOffset=!0),this.polygonOffsetFactor!==0&&(r.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(r.linewidth=this.linewidth),this.dashSize!==void 0&&(r.dashSize=this.dashSize),this.gapSize!==void 0&&(r.gapSize=this.gapSize),this.scale!==void 0&&(r.scale=this.scale),this.dithering===!0&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),this.alphaHash===!0&&(r.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(r.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(r.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(r.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(r.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(r.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(r.flatShading=this.flatShading),this.visible===!1&&(r.visible=!1),this.toneMapped===!1&&(r.toneMapped=!1),this.fog===!1&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData);function s(i){const a=[];for(const o in i){const l=i[o];delete l.metadata,a.push(l)}return a}if(t){const i=s(e.textures),a=s(e.images);i.length>0&&(r.textures=i),a.length>0&&(r.images=a)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(t!==null){const s=t.length;r=new Array(s);for(let i=0;i!==s;++i)r[i]=t[i].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Nm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},gr={h:0,s:0,l:0},Jo={h:0,s:0,l:0};function Yu(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class Ct{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,r)}set(e,t,r){if(t===void 0&&r===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,r);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=zt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,fr.toWorkingColorSpace(this,t),this}setRGB(e,t,r,s=fr.workingColorSpace){return this.r=e,this.g=t,this.b=r,fr.toWorkingColorSpace(this,s),this}setHSL(e,t,r,s=fr.workingColorSpace){if(e=ib(e,1),t=Un(t,0,1),r=Un(r,0,1),t===0)this.r=this.g=this.b=r;else{const i=r<=.5?r*(1+t):r+t-r*t,a=2*r-i;this.r=Yu(a,i,e+1/3),this.g=Yu(a,i,e),this.b=Yu(a,i,e-1/3)}return fr.toWorkingColorSpace(this,s),this}setStyle(e,t=zt){function r(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=s[1],a=i.length;if(a===3)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(i,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=zt){const r=Nm[e.toLowerCase()];return r!==void 0?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=na(e.r),this.g=na(e.g),this.b=na(e.b),this}copyLinearToSRGB(e){return this.r=Uu(e.r),this.g=Uu(e.g),this.b=Uu(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=zt){return fr.fromWorkingColorSpace(xn.copy(this),e),Math.round(Un(xn.r*255,0,255))*65536+Math.round(Un(xn.g*255,0,255))*256+Math.round(Un(xn.b*255,0,255))}getHexString(e=zt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=fr.workingColorSpace){fr.fromWorkingColorSpace(xn.copy(this),t);const r=xn.r,s=xn.g,i=xn.b,a=Math.max(r,s,i),o=Math.min(r,s,i);let l,u;const c=(o+a)/2;if(o===a)l=0,u=0;else{const h=a-o;switch(u=c<=.5?h/(a+o):h/(2-a-o),a){case r:l=(s-i)/h+(s<i?6:0);break;case s:l=(i-r)/h+2;break;case i:l=(r-s)/h+4;break}l/=6}return e.h=l,e.s=u,e.l=c,e}getRGB(e,t=fr.workingColorSpace){return fr.fromWorkingColorSpace(xn.copy(this),t),e.r=xn.r,e.g=xn.g,e.b=xn.b,e}getStyle(e=zt){fr.fromWorkingColorSpace(xn.copy(this),e);const t=xn.r,r=xn.g,s=xn.b;return e!==zt?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(r*255)},${Math.round(s*255)})`}offsetHSL(e,t,r){return this.getHSL(gr),gr.h+=e,gr.s+=t,gr.l+=r,this.setHSL(gr.h,gr.s,gr.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(gr),e.getHSL(Jo);const r=Fu(gr.h,Jo.h,t),s=Fu(gr.s,Jo.s,t),i=Fu(gr.l,Jo.l,t);return this.setHSL(r,s,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,r=this.g,s=this.b,i=e.elements;return this.r=i[0]*t+i[3]*r+i[6]*s,this.g=i[1]*t+i[4]*r+i[7]*s,this.b=i[2]*t+i[5]*r+i[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const xn=new Ct;Ct.NAMES=Nm;class Pm extends Io{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ct(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=mm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const jt=new re,el=new Dt;class Lr{constructor(e,t,r=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=r,this.usage=Zd,this.updateRange={offset:0,count:-1},this.gpuType=Jr,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let s=0,i=this.itemSize;s<i;s++)this.array[e+s]=t.array[r+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,r=this.count;t<r;t++)el.fromBufferAttribute(this,t),el.applyMatrix3(e),this.setXY(t,el.x,el.y);else if(this.itemSize===3)for(let t=0,r=this.count;t<r;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix3(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix4(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)jt.fromBufferAttribute(this,t),jt.applyNormalMatrix(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)jt.fromBufferAttribute(this,t),jt.transformDirection(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let r=this.array[e*this.itemSize+t];return this.normalized&&(r=Ba(r,this.array)),r}setComponent(e,t,r){return this.normalized&&(r=Ln(r,this.array)),this.array[e*this.itemSize+t]=r,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ba(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ln(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ba(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ln(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ba(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ln(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ba(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ln(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=Ln(t,this.array),r=Ln(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,s){return e*=this.itemSize,this.normalized&&(t=Ln(t,this.array),r=Ln(r,this.array),s=Ln(s,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this}setXYZW(e,t,r,s,i){return e*=this.itemSize,this.normalized&&(t=Ln(t,this.array),r=Ln(r,this.array),s=Ln(s,this.array),i=Ln(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Zd&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Dm extends Lr{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Lm extends Lr{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Ar extends Lr{constructor(e,t,r){super(new Float32Array(e),t,r)}}let Tb=0;const Jn=new ln,Qu=new zn,Ui=new re,qn=new Ro,Ga=new Ro,an=new re;class os extends ba{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Tb++}),this.uuid=Co(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Em(e)?Lm:Dm)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(r!==void 0){const i=new pt().getNormalMatrix(e);r.applyNormalMatrix(i),r.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Jn.makeRotationFromQuaternion(e),this.applyMatrix4(Jn),this}rotateX(e){return Jn.makeRotationX(e),this.applyMatrix4(Jn),this}rotateY(e){return Jn.makeRotationY(e),this.applyMatrix4(Jn),this}rotateZ(e){return Jn.makeRotationZ(e),this.applyMatrix4(Jn),this}translate(e,t,r){return Jn.makeTranslation(e,t,r),this.applyMatrix4(Jn),this}scale(e,t,r){return Jn.makeScale(e,t,r),this.applyMatrix4(Jn),this}lookAt(e){return Qu.lookAt(e),Qu.updateMatrix(),this.applyMatrix4(Qu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ui).negate(),this.translate(Ui.x,Ui.y,Ui.z),this}setFromPoints(e){const t=[];for(let r=0,s=e.length;r<s;r++){const i=e[r];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ar(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ro);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new re(-1/0,-1/0,-1/0),new re(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const i=t[r];qn.setFromBufferAttribute(i),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,qn.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,qn.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(qn.min),this.boundingBox.expandByPoint(qn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new tu);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new re,1/0);return}if(e){const r=this.boundingSphere.center;if(qn.setFromBufferAttribute(e),t)for(let i=0,a=t.length;i<a;i++){const o=t[i];Ga.setFromBufferAttribute(o),this.morphTargetsRelative?(an.addVectors(qn.min,Ga.min),qn.expandByPoint(an),an.addVectors(qn.max,Ga.max),qn.expandByPoint(an)):(qn.expandByPoint(Ga.min),qn.expandByPoint(Ga.max))}qn.getCenter(r);let s=0;for(let i=0,a=e.count;i<a;i++)an.fromBufferAttribute(e,i),s=Math.max(s,r.distanceToSquared(an));if(t)for(let i=0,a=t.length;i<a;i++){const o=t[i],l=this.morphTargetsRelative;for(let u=0,c=o.count;u<c;u++)an.fromBufferAttribute(o,u),l&&(Ui.fromBufferAttribute(e,u),an.add(Ui)),s=Math.max(s,r.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const r=e.array,s=t.position.array,i=t.normal.array,a=t.uv.array,o=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Lr(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,u=[],c=[];for(let N=0;N<o;N++)u[N]=new re,c[N]=new re;const h=new re,d=new re,f=new re,m=new Dt,y=new Dt,p=new Dt,g=new re,A=new re;function x(N,$,q){h.fromArray(s,N*3),d.fromArray(s,$*3),f.fromArray(s,q*3),m.fromArray(a,N*2),y.fromArray(a,$*2),p.fromArray(a,q*2),d.sub(h),f.sub(h),y.sub(m),p.sub(m);const z=1/(y.x*p.y-p.x*y.y);isFinite(z)&&(g.copy(d).multiplyScalar(p.y).addScaledVector(f,-y.y).multiplyScalar(z),A.copy(f).multiplyScalar(y.x).addScaledVector(d,-p.x).multiplyScalar(z),u[N].add(g),u[$].add(g),u[q].add(g),c[N].add(A),c[$].add(A),c[q].add(A))}let S=this.groups;S.length===0&&(S=[{start:0,count:r.length}]);for(let N=0,$=S.length;N<$;++N){const q=S[N],z=q.start,F=q.count;for(let X=z,Q=z+F;X<Q;X+=3)x(r[X+0],r[X+1],r[X+2])}const E=new re,M=new re,R=new re,O=new re;function C(N){R.fromArray(i,N*3),O.copy(R);const $=u[N];E.copy($),E.sub(R.multiplyScalar(R.dot($))).normalize(),M.crossVectors(O,$);const z=M.dot(c[N])<0?-1:1;l[N*4]=E.x,l[N*4+1]=E.y,l[N*4+2]=E.z,l[N*4+3]=z}for(let N=0,$=S.length;N<$;++N){const q=S[N],z=q.start,F=q.count;for(let X=z,Q=z+F;X<Q;X+=3)C(r[X+0]),C(r[X+1]),C(r[X+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let r=this.getAttribute("normal");if(r===void 0)r=new Lr(new Float32Array(t.count*3),3),this.setAttribute("normal",r);else for(let d=0,f=r.count;d<f;d++)r.setXYZ(d,0,0,0);const s=new re,i=new re,a=new re,o=new re,l=new re,u=new re,c=new re,h=new re;if(e)for(let d=0,f=e.count;d<f;d+=3){const m=e.getX(d+0),y=e.getX(d+1),p=e.getX(d+2);s.fromBufferAttribute(t,m),i.fromBufferAttribute(t,y),a.fromBufferAttribute(t,p),c.subVectors(a,i),h.subVectors(s,i),c.cross(h),o.fromBufferAttribute(r,m),l.fromBufferAttribute(r,y),u.fromBufferAttribute(r,p),o.add(c),l.add(c),u.add(c),r.setXYZ(m,o.x,o.y,o.z),r.setXYZ(y,l.x,l.y,l.z),r.setXYZ(p,u.x,u.y,u.z)}else for(let d=0,f=t.count;d<f;d+=3)s.fromBufferAttribute(t,d+0),i.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),c.subVectors(a,i),h.subVectors(s,i),c.cross(h),r.setXYZ(d+0,c.x,c.y,c.z),r.setXYZ(d+1,c.x,c.y,c.z),r.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),r.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)an.fromBufferAttribute(e,t),an.normalize(),e.setXYZ(t,an.x,an.y,an.z)}toNonIndexed(){function e(o,l){const u=o.array,c=o.itemSize,h=o.normalized,d=new u.constructor(l.length*c);let f=0,m=0;for(let y=0,p=l.length;y<p;y++){o.isInterleavedBufferAttribute?f=l[y]*o.data.stride+o.offset:f=l[y]*c;for(let g=0;g<c;g++)d[m++]=u[f++]}return new Lr(d,c,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new os,r=this.index.array,s=this.attributes;for(const o in s){const l=s[o],u=e(l,r);t.setAttribute(o,u)}const i=this.morphAttributes;for(const o in i){const l=[],u=i[o];for(let c=0,h=u.length;c<h;c++){const d=u[c],f=e(d,r);l.push(f)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const u=a[o];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const l in r){const u=r[l];e.data.attributes[l]=u.toJSON(e.data)}const s={};let i=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],c=[];for(let h=0,d=u.length;h<d;h++){const f=u[h];c.push(f.toJSON(e.data))}c.length>0&&(s[l]=c,i=!0)}i&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;r!==null&&this.setIndex(r.clone(t));const s=e.attributes;for(const u in s){const c=s[u];this.setAttribute(u,c.clone(t))}const i=e.morphAttributes;for(const u in i){const c=[],h=i[u];for(let d=0,f=h.length;d<f;d++)c.push(h[d].clone(t));this.morphAttributes[u]=c}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,c=a.length;u<c;u++){const h=a[u];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const hf=new ln,$s=new Rm,tl=new tu,df=new re,Bi=new re,$i=new re,zi=new re,Zu=new re,nl=new re,rl=new Dt,sl=new Dt,il=new Dt,ff=new re,pf=new re,mf=new re,al=new re,ol=new re;class ts extends zn{constructor(e=new os,t=new Pm){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const s=t[r[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=s.length;i<a;i++){const o=s[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=i}}}}getVertexPosition(e,t){const r=this.geometry,s=r.attributes.position,i=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(i&&o){nl.set(0,0,0);for(let l=0,u=i.length;l<u;l++){const c=o[l],h=i[l];c!==0&&(Zu.fromBufferAttribute(h,e),a?nl.addScaledVector(Zu,c):nl.addScaledVector(Zu.sub(t),c))}t.add(nl)}return t}raycast(e,t){const r=this.geometry,s=this.material,i=this.matrixWorld;s!==void 0&&(r.boundingSphere===null&&r.computeBoundingSphere(),tl.copy(r.boundingSphere),tl.applyMatrix4(i),$s.copy(e.ray).recast(e.near),!(tl.containsPoint($s.origin)===!1&&($s.intersectSphere(tl,df)===null||$s.origin.distanceToSquared(df)>(e.far-e.near)**2))&&(hf.copy(i).invert(),$s.copy(e.ray).applyMatrix4(hf),!(r.boundingBox!==null&&$s.intersectsBox(r.boundingBox)===!1)&&this._computeIntersections(e,t,$s)))}_computeIntersections(e,t,r){let s;const i=this.geometry,a=this.material,o=i.index,l=i.attributes.position,u=i.attributes.uv,c=i.attributes.uv1,h=i.attributes.normal,d=i.groups,f=i.drawRange;if(o!==null)if(Array.isArray(a))for(let m=0,y=d.length;m<y;m++){const p=d[m],g=a[p.materialIndex],A=Math.max(p.start,f.start),x=Math.min(o.count,Math.min(p.start+p.count,f.start+f.count));for(let S=A,E=x;S<E;S+=3){const M=o.getX(S),R=o.getX(S+1),O=o.getX(S+2);s=ll(this,g,e,r,u,c,h,M,R,O),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),y=Math.min(o.count,f.start+f.count);for(let p=m,g=y;p<g;p+=3){const A=o.getX(p),x=o.getX(p+1),S=o.getX(p+2);s=ll(this,a,e,r,u,c,h,A,x,S),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}else if(l!==void 0)if(Array.isArray(a))for(let m=0,y=d.length;m<y;m++){const p=d[m],g=a[p.materialIndex],A=Math.max(p.start,f.start),x=Math.min(l.count,Math.min(p.start+p.count,f.start+f.count));for(let S=A,E=x;S<E;S+=3){const M=S,R=S+1,O=S+2;s=ll(this,g,e,r,u,c,h,M,R,O),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),y=Math.min(l.count,f.start+f.count);for(let p=m,g=y;p<g;p+=3){const A=p,x=p+1,S=p+2;s=ll(this,a,e,r,u,c,h,A,x,S),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}}}function Cb(n,e,t,r,s,i,a,o){let l;if(e.side===$n?l=r.intersectTriangle(a,i,s,!0,o):l=r.intersectTriangle(s,i,a,e.side===Rs,o),l===null)return null;ol.copy(o),ol.applyMatrix4(n.matrixWorld);const u=t.ray.origin.distanceTo(ol);return u<t.near||u>t.far?null:{distance:u,point:ol.clone(),object:n}}function ll(n,e,t,r,s,i,a,o,l,u){n.getVertexPosition(o,Bi),n.getVertexPosition(l,$i),n.getVertexPosition(u,zi);const c=Cb(n,e,t,r,Bi,$i,zi,al);if(c){s&&(rl.fromBufferAttribute(s,o),sl.fromBufferAttribute(s,l),il.fromBufferAttribute(s,u),c.uv=vr.getInterpolation(al,Bi,$i,zi,rl,sl,il,new Dt)),i&&(rl.fromBufferAttribute(i,o),sl.fromBufferAttribute(i,l),il.fromBufferAttribute(i,u),c.uv1=vr.getInterpolation(al,Bi,$i,zi,rl,sl,il,new Dt),c.uv2=c.uv1),a&&(ff.fromBufferAttribute(a,o),pf.fromBufferAttribute(a,l),mf.fromBufferAttribute(a,u),c.normal=vr.getInterpolation(al,Bi,$i,zi,ff,pf,mf,new re),c.normal.dot(r.direction)>0&&c.normal.multiplyScalar(-1));const h={a:o,b:l,c:u,normal:new re,materialIndex:0};vr.getNormal(Bi,$i,zi,h.normal),c.face=h}return c}class No extends os{constructor(e=1,t=1,r=1,s=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:s,heightSegments:i,depthSegments:a};const o=this;s=Math.floor(s),i=Math.floor(i),a=Math.floor(a);const l=[],u=[],c=[],h=[];let d=0,f=0;m("z","y","x",-1,-1,r,t,e,a,i,0),m("z","y","x",1,-1,r,t,-e,a,i,1),m("x","z","y",1,1,e,r,t,s,a,2),m("x","z","y",1,-1,e,r,-t,s,a,3),m("x","y","z",1,-1,e,t,r,s,i,4),m("x","y","z",-1,-1,e,t,-r,s,i,5),this.setIndex(l),this.setAttribute("position",new Ar(u,3)),this.setAttribute("normal",new Ar(c,3)),this.setAttribute("uv",new Ar(h,2));function m(y,p,g,A,x,S,E,M,R,O,C){const N=S/R,$=E/O,q=S/2,z=E/2,F=M/2,X=R+1,Q=O+1;let Z=0,ie=0;const de=new re;for(let ve=0;ve<Q;ve++){const J=ve*$-z;for(let fe=0;fe<X;fe++){const K=fe*N-q;de[y]=K*A,de[p]=J*x,de[g]=F,u.push(de.x,de.y,de.z),de[y]=0,de[p]=0,de[g]=M>0?1:-1,c.push(de.x,de.y,de.z),h.push(fe/R),h.push(1-ve/O),Z+=1}}for(let ve=0;ve<O;ve++)for(let J=0;J<R;J++){const fe=d+J+X*ve,K=d+J+X*(ve+1),xe=d+(J+1)+X*(ve+1),Me=d+(J+1)+X*ve;l.push(fe,K,Me),l.push(K,xe,Me),ie+=6}o.addGroup(f,ie,C),f+=ie,d+=Z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new No(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ha(n){const e={};for(const t in n){e[t]={};for(const r in n[t]){const s=n[t][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][r]=null):e[t][r]=s.clone():Array.isArray(s)?e[t][r]=s.slice():e[t][r]=s}}return e}function Tn(n){const e={};for(let t=0;t<n.length;t++){const r=ha(n[t]);for(const s in r)e[s]=r[s]}return e}function Mb(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function km(n){return n.getRenderTarget()===null?n.outputColorSpace:Ur}const Rb={clone:ha,merge:Tn};var Ib=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Nb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Is extends Io{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ib,this.fragmentShader=Nb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ha(e.uniforms),this.uniformsGroups=Mb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?t.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[s]={type:"m4",value:a.toArray()}:t.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const r={};for(const s in this.extensions)this.extensions[s]===!0&&(r[s]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class Fm extends zn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ln,this.projectionMatrix=new ln,this.projectionMatrixInverse=new ln,this.coordinateSystem=es}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class rr extends Fm{constructor(e=50,t=1,r=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Nc*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ku*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Nc*2*Math.atan(Math.tan(ku*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,s,i,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ku*.5*this.fov)/this.zoom,r=2*t,s=this.aspect*r,i=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,u=a.fullHeight;i+=a.offsetX*s/l,t-=a.offsetY*r/u,s*=a.width/l,r*=a.height/u}const o=this.filmOffset;o!==0&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+s,t,t-r,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Vi=-90,Gi=1;class Pb extends zn{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r,this.coordinateSystem=null;const s=new rr(Vi,Gi,e,t);s.layers=this.layers,this.add(s);const i=new rr(Vi,Gi,e,t);i.layers=this.layers,this.add(i);const a=new rr(Vi,Gi,e,t);a.layers=this.layers,this.add(a);const o=new rr(Vi,Gi,e,t);o.layers=this.layers,this.add(o);const l=new rr(Vi,Gi,e,t);l.layers=this.layers,this.add(l);const u=new rr(Vi,Gi,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[r,s,i,a,o,l]=t;for(const u of t)this.remove(u);if(e===es)r.up.set(0,1,0),r.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Ml)r.up.set(0,-1,0),r.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const r=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,i,a,o,l,u]=this.children,c=e.getRenderTarget(),h=e.xr.enabled;e.xr.enabled=!1;const d=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,s),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,l),r.texture.generateMipmaps=d,e.setRenderTarget(r,5),e.render(t,u),e.setRenderTarget(c),e.xr.enabled=h,r.texture.needsPMREMUpdate=!0}}class Om extends mn{constructor(e,t,r,s,i,a,o,l,u,c){e=e!==void 0?e:[],t=t!==void 0?t:la,super(e,t,r,s,i,a,o,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Db extends ui{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const r={width:e,height:e,depth:1},s=[r,r,r,r,r,r];t.encoding!==void 0&&(no("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===si?zt:ii),this.texture=new Om(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:On}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new No(5,5,5),i=new Is({name:"CubemapFromEquirect",uniforms:ha(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:$n,blending:As});i.uniforms.tEquirect.value=t;const a=new ts(s,i),o=t.minFilter;return t.minFilter===uo&&(t.minFilter=On),new Pb(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,s){const i=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,r,s);e.setRenderTarget(i)}}const Ju=new re,Lb=new re,kb=new pt;class Gs{constructor(e=new re(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,s){return this.normal.set(e,t,r),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const s=Ju.subVectors(r,t).cross(Lb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const r=e.delta(Ju),s=this.normal.dot(r);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/s;return i<0||i>1?null:t.copy(e.start).addScaledVector(r,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||kb.getNormalMatrix(e),s=this.coplanarPoint(Ju).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-s.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const zs=new tu,ul=new re;class Um{constructor(e=new Gs,t=new Gs,r=new Gs,s=new Gs,i=new Gs,a=new Gs){this.planes=[e,t,r,s,i,a]}set(e,t,r,s,i,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(s),o[4].copy(i),o[5].copy(a),this}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e,t=es){const r=this.planes,s=e.elements,i=s[0],a=s[1],o=s[2],l=s[3],u=s[4],c=s[5],h=s[6],d=s[7],f=s[8],m=s[9],y=s[10],p=s[11],g=s[12],A=s[13],x=s[14],S=s[15];if(r[0].setComponents(l-i,d-u,p-f,S-g).normalize(),r[1].setComponents(l+i,d+u,p+f,S+g).normalize(),r[2].setComponents(l+a,d+c,p+m,S+A).normalize(),r[3].setComponents(l-a,d-c,p-m,S-A).normalize(),r[4].setComponents(l-o,d-h,p-y,S-x).normalize(),t===es)r[5].setComponents(l+o,d+h,p+y,S+x).normalize();else if(t===Ml)r[5].setComponents(o,h,y,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),zs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),zs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(zs)}intersectsSprite(e){return zs.center.set(0,0,0),zs.radius=.7071067811865476,zs.applyMatrix4(e.matrixWorld),this.intersectsSphere(zs)}intersectsSphere(e){const t=this.planes,r=e.center,s=-e.radius;for(let i=0;i<6;i++)if(t[i].distanceToPoint(r)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const s=t[r];if(ul.x=s.normal.x>0?e.max.x:e.min.x,ul.y=s.normal.y>0?e.max.y:e.min.y,ul.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(ul)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Bm(){let n=null,e=!1,t=null,r=null;function s(i,a){t(i,a),r=n.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(r=n.requestAnimationFrame(s),e=!0)},stop:function(){n.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(i){t=i},setContext:function(i){n=i}}}function Fb(n,e){const t=e.isWebGL2,r=new WeakMap;function s(u,c){const h=u.array,d=u.usage,f=n.createBuffer();n.bindBuffer(c,f),n.bufferData(c,h,d),u.onUploadCallback();let m;if(h instanceof Float32Array)m=n.FLOAT;else if(h instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)m=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=n.UNSIGNED_SHORT;else if(h instanceof Int16Array)m=n.SHORT;else if(h instanceof Uint32Array)m=n.UNSIGNED_INT;else if(h instanceof Int32Array)m=n.INT;else if(h instanceof Int8Array)m=n.BYTE;else if(h instanceof Uint8Array)m=n.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)m=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:u.version}}function i(u,c,h){const d=c.array,f=c.updateRange;n.bindBuffer(h,u),f.count===-1?n.bufferSubData(h,0,d):(t?n.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):n.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1),c.onUploadCallback()}function a(u){return u.isInterleavedBufferAttribute&&(u=u.data),r.get(u)}function o(u){u.isInterleavedBufferAttribute&&(u=u.data);const c=r.get(u);c&&(n.deleteBuffer(c.buffer),r.delete(u))}function l(u,c){if(u.isGLBufferAttribute){const d=r.get(u);(!d||d.version<u.version)&&r.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const h=r.get(u);h===void 0?r.set(u,s(u,c)):h.version<u.version&&(i(h.buffer,u,c),h.version=u.version)}return{get:a,remove:o,update:l}}class ru extends os{constructor(e=1,t=1,r=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:s};const i=e/2,a=t/2,o=Math.floor(r),l=Math.floor(s),u=o+1,c=l+1,h=e/o,d=t/l,f=[],m=[],y=[],p=[];for(let g=0;g<c;g++){const A=g*d-a;for(let x=0;x<u;x++){const S=x*h-i;m.push(S,-A,0),y.push(0,0,1),p.push(x/o),p.push(1-g/l)}}for(let g=0;g<l;g++)for(let A=0;A<o;A++){const x=A+u*g,S=A+u*(g+1),E=A+1+u*(g+1),M=A+1+u*g;f.push(x,S,M),f.push(S,E,M)}this.setIndex(f),this.setAttribute("position",new Ar(m,3)),this.setAttribute("normal",new Ar(y,3)),this.setAttribute("uv",new Ar(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ru(e.width,e.height,e.widthSegments,e.heightSegments)}}var Ob=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Ub=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Bb=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,$b=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zb=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Vb=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Gb=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Wb=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Hb=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Xb=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,qb=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,jb=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Kb=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Yb=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Qb=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Zb=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Jb=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ew=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,tw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,rw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,sw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,iw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,aw=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ow=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,uw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,cw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hw="gl_FragColor = linearToOutputTexel( gl_FragColor );",dw=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,fw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,vw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,xw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,bw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ww=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Aw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Sw=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,_w=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Ew=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Tw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Cw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Mw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Rw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Iw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Nw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Pw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Dw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,Lw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kw=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Fw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Ow=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Uw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Bw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,$w=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,zw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Vw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Gw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ww=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Hw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Xw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,qw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,jw=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Kw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Yw=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Qw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Zw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,Jw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,e2=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,t2=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,n2=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,r2=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,s2=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,i2=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,a2=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,o2=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,l2=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,u2=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,c2=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,h2=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,d2=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,f2=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,p2=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,m2=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,g2=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,y2=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,v2=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,x2=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,b2=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,w2=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,A2=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,S2=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_2=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,E2=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,T2=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,C2=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,M2=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,R2=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,I2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,N2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,P2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,D2=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const L2=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,k2=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,F2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,O2=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,U2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,B2=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$2=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,z2=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,V2=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,G2=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,W2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,H2=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,X2=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,q2=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,j2=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,K2=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Y2=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Q2=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Z2=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,J2=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eA=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,tA=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,nA=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rA=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sA=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,iA=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aA=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lA=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cA=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hA=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,dA=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ht={alphahash_fragment:Ob,alphahash_pars_fragment:Ub,alphamap_fragment:Bb,alphamap_pars_fragment:$b,alphatest_fragment:zb,alphatest_pars_fragment:Vb,aomap_fragment:Gb,aomap_pars_fragment:Wb,begin_vertex:Hb,beginnormal_vertex:Xb,bsdfs:qb,iridescence_fragment:jb,bumpmap_pars_fragment:Kb,clipping_planes_fragment:Yb,clipping_planes_pars_fragment:Qb,clipping_planes_pars_vertex:Zb,clipping_planes_vertex:Jb,color_fragment:ew,color_pars_fragment:tw,color_pars_vertex:nw,color_vertex:rw,common:sw,cube_uv_reflection_fragment:iw,defaultnormal_vertex:aw,displacementmap_pars_vertex:ow,displacementmap_vertex:lw,emissivemap_fragment:uw,emissivemap_pars_fragment:cw,colorspace_fragment:hw,colorspace_pars_fragment:dw,envmap_fragment:fw,envmap_common_pars_fragment:pw,envmap_pars_fragment:mw,envmap_pars_vertex:gw,envmap_physical_pars_fragment:Mw,envmap_vertex:yw,fog_vertex:vw,fog_pars_vertex:xw,fog_fragment:bw,fog_pars_fragment:ww,gradientmap_pars_fragment:Aw,lightmap_fragment:Sw,lightmap_pars_fragment:_w,lights_lambert_fragment:Ew,lights_lambert_pars_fragment:Tw,lights_pars_begin:Cw,lights_toon_fragment:Rw,lights_toon_pars_fragment:Iw,lights_phong_fragment:Nw,lights_phong_pars_fragment:Pw,lights_physical_fragment:Dw,lights_physical_pars_fragment:Lw,lights_fragment_begin:kw,lights_fragment_maps:Fw,lights_fragment_end:Ow,logdepthbuf_fragment:Uw,logdepthbuf_pars_fragment:Bw,logdepthbuf_pars_vertex:$w,logdepthbuf_vertex:zw,map_fragment:Vw,map_pars_fragment:Gw,map_particle_fragment:Ww,map_particle_pars_fragment:Hw,metalnessmap_fragment:Xw,metalnessmap_pars_fragment:qw,morphcolor_vertex:jw,morphnormal_vertex:Kw,morphtarget_pars_vertex:Yw,morphtarget_vertex:Qw,normal_fragment_begin:Zw,normal_fragment_maps:Jw,normal_pars_fragment:e2,normal_pars_vertex:t2,normal_vertex:n2,normalmap_pars_fragment:r2,clearcoat_normal_fragment_begin:s2,clearcoat_normal_fragment_maps:i2,clearcoat_pars_fragment:a2,iridescence_pars_fragment:o2,opaque_fragment:l2,packing:u2,premultiplied_alpha_fragment:c2,project_vertex:h2,dithering_fragment:d2,dithering_pars_fragment:f2,roughnessmap_fragment:p2,roughnessmap_pars_fragment:m2,shadowmap_pars_fragment:g2,shadowmap_pars_vertex:y2,shadowmap_vertex:v2,shadowmask_pars_fragment:x2,skinbase_vertex:b2,skinning_pars_vertex:w2,skinning_vertex:A2,skinnormal_vertex:S2,specularmap_fragment:_2,specularmap_pars_fragment:E2,tonemapping_fragment:T2,tonemapping_pars_fragment:C2,transmission_fragment:M2,transmission_pars_fragment:R2,uv_pars_fragment:I2,uv_pars_vertex:N2,uv_vertex:P2,worldpos_vertex:D2,background_vert:L2,background_frag:k2,backgroundCube_vert:F2,backgroundCube_frag:O2,cube_vert:U2,cube_frag:B2,depth_vert:$2,depth_frag:z2,distanceRGBA_vert:V2,distanceRGBA_frag:G2,equirect_vert:W2,equirect_frag:H2,linedashed_vert:X2,linedashed_frag:q2,meshbasic_vert:j2,meshbasic_frag:K2,meshlambert_vert:Y2,meshlambert_frag:Q2,meshmatcap_vert:Z2,meshmatcap_frag:J2,meshnormal_vert:eA,meshnormal_frag:tA,meshphong_vert:nA,meshphong_frag:rA,meshphysical_vert:sA,meshphysical_frag:iA,meshtoon_vert:aA,meshtoon_frag:oA,points_vert:lA,points_frag:uA,shadow_vert:cA,shadow_frag:hA,sprite_vert:dA,sprite_frag:fA},Ne={common:{diffuse:{value:new Ct(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new Dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ct(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ct(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new Ct(16777215)},opacity:{value:1},center:{value:new Dt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},Ir={basic:{uniforms:Tn([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:Tn([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Ct(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:Tn([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Ct(0)},specular:{value:new Ct(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:Tn([Ne.common,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.roughnessmap,Ne.metalnessmap,Ne.fog,Ne.lights,{emissive:{value:new Ct(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:Tn([Ne.common,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.gradientmap,Ne.fog,Ne.lights,{emissive:{value:new Ct(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:Tn([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:Tn([Ne.points,Ne.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:Tn([Ne.common,Ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:Tn([Ne.common,Ne.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:Tn([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:Tn([Ne.sprite,Ne.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ht.backgroundCube_vert,fragmentShader:ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:Tn([Ne.common,Ne.displacementmap,{referencePosition:{value:new re},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:Tn([Ne.lights,Ne.fog,{color:{value:new Ct(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};Ir.physical={uniforms:Tn([Ir.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new Dt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new Ct(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new Dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new Ct(0)},specularColor:{value:new Ct(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new Dt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};const cl={r:0,b:0,g:0};function pA(n,e,t,r,s,i,a){const o=new Ct(0);let l=i===!0?0:1,u,c,h=null,d=0,f=null;function m(p,g){let A=!1,x=g.isScene===!0?g.background:null;x&&x.isTexture&&(x=(g.backgroundBlurriness>0?t:e).get(x)),x===null?y(o,l):x&&x.isColor&&(y(x,1),A=!0);const S=n.xr.getEnvironmentBlendMode();S==="additive"?r.buffers.color.setClear(0,0,0,1,a):S==="alpha-blend"&&r.buffers.color.setClear(0,0,0,0,a),(n.autoClear||A)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),x&&(x.isCubeTexture||x.mapping===Jl)?(c===void 0&&(c=new ts(new No(1,1,1),new Is({name:"BackgroundCubeMaterial",uniforms:ha(Ir.backgroundCube.uniforms),vertexShader:Ir.backgroundCube.vertexShader,fragmentShader:Ir.backgroundCube.fragmentShader,side:$n,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(E,M,R){this.matrixWorld.copyPosition(R.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=x,c.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=x.colorSpace!==zt,(h!==x||d!==x.version||f!==n.toneMapping)&&(c.material.needsUpdate=!0,h=x,d=x.version,f=n.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null)):x&&x.isTexture&&(u===void 0&&(u=new ts(new ru(2,2),new Is({name:"BackgroundMaterial",uniforms:ha(Ir.background.uniforms),vertexShader:Ir.background.vertexShader,fragmentShader:Ir.background.fragmentShader,side:Rs,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=x,u.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,u.material.toneMapped=x.colorSpace!==zt,x.matrixAutoUpdate===!0&&x.updateMatrix(),u.material.uniforms.uvTransform.value.copy(x.matrix),(h!==x||d!==x.version||f!==n.toneMapping)&&(u.material.needsUpdate=!0,h=x,d=x.version,f=n.toneMapping),u.layers.enableAll(),p.unshift(u,u.geometry,u.material,0,0,null))}function y(p,g){p.getRGB(cl,km(n)),r.buffers.color.setClear(cl.r,cl.g,cl.b,g,a)}return{getClearColor:function(){return o},setClearColor:function(p,g=1){o.set(p),l=g,y(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(p){l=p,y(o,l)},render:m}}function mA(n,e,t,r){const s=n.getParameter(n.MAX_VERTEX_ATTRIBS),i=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||i!==null,o={},l=p(null);let u=l,c=!1;function h(F,X,Q,Z,ie){let de=!1;if(a){const ve=y(Z,Q,X);u!==ve&&(u=ve,f(u.object)),de=g(F,Z,Q,ie),de&&A(F,Z,Q,ie)}else{const ve=X.wireframe===!0;(u.geometry!==Z.id||u.program!==Q.id||u.wireframe!==ve)&&(u.geometry=Z.id,u.program=Q.id,u.wireframe=ve,de=!0)}ie!==null&&t.update(ie,n.ELEMENT_ARRAY_BUFFER),(de||c)&&(c=!1,O(F,X,Q,Z),ie!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(ie).buffer))}function d(){return r.isWebGL2?n.createVertexArray():i.createVertexArrayOES()}function f(F){return r.isWebGL2?n.bindVertexArray(F):i.bindVertexArrayOES(F)}function m(F){return r.isWebGL2?n.deleteVertexArray(F):i.deleteVertexArrayOES(F)}function y(F,X,Q){const Z=Q.wireframe===!0;let ie=o[F.id];ie===void 0&&(ie={},o[F.id]=ie);let de=ie[X.id];de===void 0&&(de={},ie[X.id]=de);let ve=de[Z];return ve===void 0&&(ve=p(d()),de[Z]=ve),ve}function p(F){const X=[],Q=[],Z=[];for(let ie=0;ie<s;ie++)X[ie]=0,Q[ie]=0,Z[ie]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:X,enabledAttributes:Q,attributeDivisors:Z,object:F,attributes:{},index:null}}function g(F,X,Q,Z){const ie=u.attributes,de=X.attributes;let ve=0;const J=Q.getAttributes();for(const fe in J)if(J[fe].location>=0){const xe=ie[fe];let Me=de[fe];if(Me===void 0&&(fe==="instanceMatrix"&&F.instanceMatrix&&(Me=F.instanceMatrix),fe==="instanceColor"&&F.instanceColor&&(Me=F.instanceColor)),xe===void 0||xe.attribute!==Me||Me&&xe.data!==Me.data)return!0;ve++}return u.attributesNum!==ve||u.index!==Z}function A(F,X,Q,Z){const ie={},de=X.attributes;let ve=0;const J=Q.getAttributes();for(const fe in J)if(J[fe].location>=0){let xe=de[fe];xe===void 0&&(fe==="instanceMatrix"&&F.instanceMatrix&&(xe=F.instanceMatrix),fe==="instanceColor"&&F.instanceColor&&(xe=F.instanceColor));const Me={};Me.attribute=xe,xe&&xe.data&&(Me.data=xe.data),ie[fe]=Me,ve++}u.attributes=ie,u.attributesNum=ve,u.index=Z}function x(){const F=u.newAttributes;for(let X=0,Q=F.length;X<Q;X++)F[X]=0}function S(F){E(F,0)}function E(F,X){const Q=u.newAttributes,Z=u.enabledAttributes,ie=u.attributeDivisors;Q[F]=1,Z[F]===0&&(n.enableVertexAttribArray(F),Z[F]=1),ie[F]!==X&&((r.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](F,X),ie[F]=X)}function M(){const F=u.newAttributes,X=u.enabledAttributes;for(let Q=0,Z=X.length;Q<Z;Q++)X[Q]!==F[Q]&&(n.disableVertexAttribArray(Q),X[Q]=0)}function R(F,X,Q,Z,ie,de,ve){ve===!0?n.vertexAttribIPointer(F,X,Q,ie,de):n.vertexAttribPointer(F,X,Q,Z,ie,de)}function O(F,X,Q,Z){if(r.isWebGL2===!1&&(F.isInstancedMesh||Z.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const ie=Z.attributes,de=Q.getAttributes(),ve=X.defaultAttributeValues;for(const J in de){const fe=de[J];if(fe.location>=0){let K=ie[J];if(K===void 0&&(J==="instanceMatrix"&&F.instanceMatrix&&(K=F.instanceMatrix),J==="instanceColor"&&F.instanceColor&&(K=F.instanceColor)),K!==void 0){const xe=K.normalized,Me=K.itemSize,De=t.get(K);if(De===void 0)continue;const Ve=De.buffer,Be=De.type,mt=De.bytesPerElement,Kt=r.isWebGL2===!0&&(Be===n.INT||Be===n.UNSIGNED_INT||K.gpuType===ym);if(K.isInterleavedBufferAttribute){const it=K.data,te=it.stride,Yt=K.offset;if(it.isInstancedInterleavedBuffer){for(let Ye=0;Ye<fe.locationSize;Ye++)E(fe.location+Ye,it.meshPerAttribute);F.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=it.meshPerAttribute*it.count)}else for(let Ye=0;Ye<fe.locationSize;Ye++)S(fe.location+Ye);n.bindBuffer(n.ARRAY_BUFFER,Ve);for(let Ye=0;Ye<fe.locationSize;Ye++)R(fe.location+Ye,Me/fe.locationSize,Be,xe,te*mt,(Yt+Me/fe.locationSize*Ye)*mt,Kt)}else{if(K.isInstancedBufferAttribute){for(let it=0;it<fe.locationSize;it++)E(fe.location+it,K.meshPerAttribute);F.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=K.meshPerAttribute*K.count)}else for(let it=0;it<fe.locationSize;it++)S(fe.location+it);n.bindBuffer(n.ARRAY_BUFFER,Ve);for(let it=0;it<fe.locationSize;it++)R(fe.location+it,Me/fe.locationSize,Be,xe,Me*mt,Me/fe.locationSize*it*mt,Kt)}}else if(ve!==void 0){const xe=ve[J];if(xe!==void 0)switch(xe.length){case 2:n.vertexAttrib2fv(fe.location,xe);break;case 3:n.vertexAttrib3fv(fe.location,xe);break;case 4:n.vertexAttrib4fv(fe.location,xe);break;default:n.vertexAttrib1fv(fe.location,xe)}}}}M()}function C(){q();for(const F in o){const X=o[F];for(const Q in X){const Z=X[Q];for(const ie in Z)m(Z[ie].object),delete Z[ie];delete X[Q]}delete o[F]}}function N(F){if(o[F.id]===void 0)return;const X=o[F.id];for(const Q in X){const Z=X[Q];for(const ie in Z)m(Z[ie].object),delete Z[ie];delete X[Q]}delete o[F.id]}function $(F){for(const X in o){const Q=o[X];if(Q[F.id]===void 0)continue;const Z=Q[F.id];for(const ie in Z)m(Z[ie].object),delete Z[ie];delete Q[F.id]}}function q(){z(),c=!0,u!==l&&(u=l,f(u.object))}function z(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:q,resetDefaultState:z,dispose:C,releaseStatesOfGeometry:N,releaseStatesOfProgram:$,initAttributes:x,enableAttribute:S,disableUnusedAttributes:M}}function gA(n,e,t,r){const s=r.isWebGL2;let i;function a(u){i=u}function o(u,c){n.drawArrays(i,u,c),t.update(c,i,1)}function l(u,c,h){if(h===0)return;let d,f;if(s)d=n,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](i,u,c,h),t.update(c,i,h)}this.setMode=a,this.render=o,this.renderInstances=l}function yA(n,e,t){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const R=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function i(R){if(R==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";R="mediump"}return R==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=i(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=a||e.has("WEBGL_draw_buffers"),c=t.logarithmicDepthBuffer===!0,h=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),d=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),f=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),y=n.getParameter(n.MAX_VERTEX_ATTRIBS),p=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),g=n.getParameter(n.MAX_VARYING_VECTORS),A=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),x=d>0,S=a||e.has("OES_texture_float"),E=x&&S,M=a?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:s,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:m,maxAttributes:y,maxVertexUniforms:p,maxVaryings:g,maxFragmentUniforms:A,vertexTextures:x,floatFragmentTextures:S,floatVertexTextures:E,maxSamples:M}}function vA(n){const e=this;let t=null,r=0,s=!1,i=!1;const a=new Gs,o=new pt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||r!==0||s;return s=d,r=h.length,f},this.beginShadows=function(){i=!0,c(null)},this.endShadows=function(){i=!1},this.setGlobalState=function(h,d){t=c(h,d,0)},this.setState=function(h,d,f){const m=h.clippingPlanes,y=h.clipIntersection,p=h.clipShadows,g=n.get(h);if(!s||m===null||m.length===0||i&&!p)i?c(null):u();else{const A=i?0:r,x=A*4;let S=g.clippingState||null;l.value=S,S=c(m,d,x,f);for(let E=0;E!==x;++E)S[E]=t[E];g.clippingState=S,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=A}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(h,d,f,m){const y=h!==null?h.length:0;let p=null;if(y!==0){if(p=l.value,m!==!0||p===null){const g=f+y*4,A=d.matrixWorldInverse;o.getNormalMatrix(A),(p===null||p.length<g)&&(p=new Float32Array(g));for(let x=0,S=f;x!==y;++x,S+=4)a.copy(h[x]).applyMatrix4(A,o),a.normal.toArray(p,S),p[S+3]=a.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,p}}function xA(n){let e=new WeakMap;function t(a,o){return o===Tc?a.mapping=la:o===Cc&&(a.mapping=ua),a}function r(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Tc||o===Cc)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const u=new Db(l.height/2);return u.fromEquirectangularTexture(n,a),e.set(a,u),a.addEventListener("dispose",s),t(u.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function i(){e=new WeakMap}return{get:r,dispose:i}}class bA extends Fm{constructor(e=-1,t=1,r=1,s=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=s,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,r,s,i,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let i=r-e,a=r+e,o=s+t,l=s-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=u*this.view.offsetX,a=i+u*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ji=4,gf=[.125,.215,.35,.446,.526,.582],js=20,ec=new bA,yf=new Ct;let tc=null;const Ws=(1+Math.sqrt(5))/2,Wi=1/Ws,vf=[new re(1,1,1),new re(-1,1,1),new re(1,1,-1),new re(-1,1,-1),new re(0,Ws,Wi),new re(0,Ws,-Wi),new re(Wi,0,Ws),new re(-Wi,0,Ws),new re(Ws,Wi,0),new re(-Ws,Wi,0)];class xf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,s=100){tc=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,s,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Af(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=wf(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(tc),e.scissorTest=!1,hl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===la||e.mapping===ua?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),tc=this._renderer.getRenderTarget();const r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:On,minFilter:On,generateMipmaps:!1,type:co,format:wr,colorSpace:Ur,depthBuffer:!1},s=bf(e,t,r);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=bf(e,t,r);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=wA(i)),this._blurMaterial=AA(i,e,t)}return s}_compileMaterial(e){const t=new ts(this._lodPlanes[0],e);this._renderer.compile(t,ec)}_sceneToCubeUV(e,t,r,s){const o=new rr(90,1,t,r),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],c=this._renderer,h=c.autoClear,d=c.toneMapping;c.getClearColor(yf),c.toneMapping=Ss,c.autoClear=!1;const f=new Pm({name:"PMREM.Background",side:$n,depthWrite:!1,depthTest:!1}),m=new ts(new No,f);let y=!1;const p=e.background;p?p.isColor&&(f.color.copy(p),e.background=null,y=!0):(f.color.copy(yf),y=!0);for(let g=0;g<6;g++){const A=g%3;A===0?(o.up.set(0,l[g],0),o.lookAt(u[g],0,0)):A===1?(o.up.set(0,0,l[g]),o.lookAt(0,u[g],0)):(o.up.set(0,l[g],0),o.lookAt(0,0,u[g]));const x=this._cubeSize;hl(s,A*x,g>2?x:0,x,x),c.setRenderTarget(s),y&&c.render(m,o),c.render(e,o)}m.geometry.dispose(),m.material.dispose(),c.toneMapping=d,c.autoClear=h,e.background=p}_textureToCubeUV(e,t){const r=this._renderer,s=e.mapping===la||e.mapping===ua;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Af()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=wf());const i=s?this._cubemapMaterial:this._equirectMaterial,a=new ts(this._lodPlanes[0],i),o=i.uniforms;o.envMap.value=e;const l=this._cubeSize;hl(t,0,0,3*l,2*l),r.setRenderTarget(t),r.render(a,ec)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const i=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=vf[(s-1)%vf.length];this._blur(e,s-1,s,i,a)}t.autoClear=r}_blur(e,t,r,s,i){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,s,"latitudinal",i),this._halfBlur(a,e,r,r,s,"longitudinal",i)}_halfBlur(e,t,r,s,i,a,o){const l=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,h=new ts(this._lodPlanes[s],u),d=u.uniforms,f=this._sizeLods[r]-1,m=isFinite(i)?Math.PI/(2*f):2*Math.PI/(2*js-1),y=i/m,p=isFinite(i)?1+Math.floor(c*y):js;p>js&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${js}`);const g=[];let A=0;for(let R=0;R<js;++R){const O=R/y,C=Math.exp(-O*O/2);g.push(C),R===0?A+=C:R<p&&(A+=2*C)}for(let R=0;R<g.length;R++)g[R]=g[R]/A;d.envMap.value=e.texture,d.samples.value=p,d.weights.value=g,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-r;const S=this._sizeLods[s],E=3*S*(s>x-Ji?s-x+Ji:0),M=4*(this._cubeSize-S);hl(t,E,M,3*S,2*S),l.setRenderTarget(t),l.render(h,ec)}}function wA(n){const e=[],t=[],r=[];let s=n;const i=n-Ji+1+gf.length;for(let a=0;a<i;a++){const o=Math.pow(2,s);t.push(o);let l=1/o;a>n-Ji?l=gf[a-n+Ji-1]:a===0&&(l=0),r.push(l);const u=1/(o-2),c=-u,h=1+u,d=[c,c,h,c,h,h,c,c,h,h,c,h],f=6,m=6,y=3,p=2,g=1,A=new Float32Array(y*m*f),x=new Float32Array(p*m*f),S=new Float32Array(g*m*f);for(let M=0;M<f;M++){const R=M%3*2/3-1,O=M>2?0:-1,C=[R,O,0,R+2/3,O,0,R+2/3,O+1,0,R,O,0,R+2/3,O+1,0,R,O+1,0];A.set(C,y*m*M),x.set(d,p*m*M);const N=[M,M,M,M,M,M];S.set(N,g*m*M)}const E=new os;E.setAttribute("position",new Lr(A,y)),E.setAttribute("uv",new Lr(x,p)),E.setAttribute("faceIndex",new Lr(S,g)),e.push(E),s>Ji&&s--}return{lodPlanes:e,sizeLods:t,sigmas:r}}function bf(n,e,t){const r=new ui(n,e,t);return r.texture.mapping=Jl,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function hl(n,e,t,r,s){n.viewport.set(e,t,r,s),n.scissor.set(e,t,r,s)}function AA(n,e,t){const r=new Float32Array(js),s=new re(0,1,0);return new Is({name:"SphericalGaussianBlur",defines:{n:js,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Ch(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:As,depthTest:!1,depthWrite:!1})}function wf(){return new Is({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ch(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:As,depthTest:!1,depthWrite:!1})}function Af(){return new Is({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ch(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:As,depthTest:!1,depthWrite:!1})}function Ch(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function SA(n){let e=new WeakMap,t=null;function r(o){if(o&&o.isTexture){const l=o.mapping,u=l===Tc||l===Cc,c=l===la||l===ua;if(u||c)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new xf(n)),h=u?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(u&&h&&h.height>0||c&&h&&s(h)){t===null&&(t=new xf(n));const d=u?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,d),o.addEventListener("dispose",i),d.texture}else return null}}}return o}function s(o){let l=0;const u=6;for(let c=0;c<u;c++)o[c]!==void 0&&l++;return l===u}function i(o){const l=o.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:r,dispose:a}}function _A(n){const e={};function t(r){if(e[r]!==void 0)return e[r];let s;switch(r){case"WEBGL_depth_texture":s=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=n.getExtension(r)}return e[r]=s,s}return{has:function(r){return t(r)!==null},init:function(r){r.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(r){const s=t(r);return s===null&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),s}}}function EA(n,e,t,r){const s={},i=new WeakMap;function a(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const m in d.attributes)e.remove(d.attributes[m]);for(const m in d.morphAttributes){const y=d.morphAttributes[m];for(let p=0,g=y.length;p<g;p++)e.remove(y[p])}d.removeEventListener("dispose",a),delete s[d.id];const f=i.get(d);f&&(e.remove(f),i.delete(d)),r.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(h,d){return s[d.id]===!0||(d.addEventListener("dispose",a),s[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const m in d)e.update(d[m],n.ARRAY_BUFFER);const f=h.morphAttributes;for(const m in f){const y=f[m];for(let p=0,g=y.length;p<g;p++)e.update(y[p],n.ARRAY_BUFFER)}}function u(h){const d=[],f=h.index,m=h.attributes.position;let y=0;if(f!==null){const A=f.array;y=f.version;for(let x=0,S=A.length;x<S;x+=3){const E=A[x+0],M=A[x+1],R=A[x+2];d.push(E,M,M,R,R,E)}}else if(m!==void 0){const A=m.array;y=m.version;for(let x=0,S=A.length/3-1;x<S;x+=3){const E=x+0,M=x+1,R=x+2;d.push(E,M,M,R,R,E)}}else return;const p=new(Em(d)?Lm:Dm)(d,1);p.version=y;const g=i.get(h);g&&e.remove(g),i.set(h,p)}function c(h){const d=i.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&u(h)}else u(h);return i.get(h)}return{get:o,update:l,getWireframeAttribute:c}}function TA(n,e,t,r){const s=r.isWebGL2;let i;function a(d){i=d}let o,l;function u(d){o=d.type,l=d.bytesPerElement}function c(d,f){n.drawElements(i,f,o,d*l),t.update(f,i,1)}function h(d,f,m){if(m===0)return;let y,p;if(s)y=n,p="drawElementsInstanced";else if(y=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[p](i,f,o,d*l,m),t.update(f,i,m)}this.setMode=a,this.setIndex=u,this.render=c,this.renderInstances=h}function CA(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function r(i,a,o){switch(t.calls++,a){case n.TRIANGLES:t.triangles+=o*(i/3);break;case n.LINES:t.lines+=o*(i/2);break;case n.LINE_STRIP:t.lines+=o*(i-1);break;case n.LINE_LOOP:t.lines+=o*i;break;case n.POINTS:t.points+=o*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:r}}function MA(n,e){return n[0]-e[0]}function RA(n,e){return Math.abs(e[1])-Math.abs(n[1])}function IA(n,e,t){const r={},s=new Float32Array(8),i=new WeakMap,a=new pn,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(u,c,h){const d=u.morphTargetInfluences;if(e.isWebGL2===!0){const f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=f!==void 0?f.length:0;let y=i.get(c);if(y===void 0||y.count!==m){let F=function(){q.dispose(),i.delete(c),c.removeEventListener("dispose",F)};y!==void 0&&y.texture.dispose();const A=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,E=c.morphAttributes.position||[],M=c.morphAttributes.normal||[],R=c.morphAttributes.color||[];let O=0;A===!0&&(O=1),x===!0&&(O=2),S===!0&&(O=3);let C=c.attributes.position.count*O,N=1;C>e.maxTextureSize&&(N=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const $=new Float32Array(C*N*4*m),q=new Mm($,C,N,m);q.type=Jr,q.needsUpdate=!0;const z=O*4;for(let X=0;X<m;X++){const Q=E[X],Z=M[X],ie=R[X],de=C*N*4*X;for(let ve=0;ve<Q.count;ve++){const J=ve*z;A===!0&&(a.fromBufferAttribute(Q,ve),$[de+J+0]=a.x,$[de+J+1]=a.y,$[de+J+2]=a.z,$[de+J+3]=0),x===!0&&(a.fromBufferAttribute(Z,ve),$[de+J+4]=a.x,$[de+J+5]=a.y,$[de+J+6]=a.z,$[de+J+7]=0),S===!0&&(a.fromBufferAttribute(ie,ve),$[de+J+8]=a.x,$[de+J+9]=a.y,$[de+J+10]=a.z,$[de+J+11]=ie.itemSize===4?a.w:1)}}y={count:m,texture:q,size:new Dt(C,N)},i.set(c,y),c.addEventListener("dispose",F)}let p=0;for(let A=0;A<d.length;A++)p+=d[A];const g=c.morphTargetsRelative?1:1-p;h.getUniforms().setValue(n,"morphTargetBaseInfluence",g),h.getUniforms().setValue(n,"morphTargetInfluences",d),h.getUniforms().setValue(n,"morphTargetsTexture",y.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",y.size)}else{const f=d===void 0?0:d.length;let m=r[c.id];if(m===void 0||m.length!==f){m=[];for(let x=0;x<f;x++)m[x]=[x,0];r[c.id]=m}for(let x=0;x<f;x++){const S=m[x];S[0]=x,S[1]=d[x]}m.sort(RA);for(let x=0;x<8;x++)x<f&&m[x][1]?(o[x][0]=m[x][0],o[x][1]=m[x][1]):(o[x][0]=Number.MAX_SAFE_INTEGER,o[x][1]=0);o.sort(MA);const y=c.morphAttributes.position,p=c.morphAttributes.normal;let g=0;for(let x=0;x<8;x++){const S=o[x],E=S[0],M=S[1];E!==Number.MAX_SAFE_INTEGER&&M?(y&&c.getAttribute("morphTarget"+x)!==y[E]&&c.setAttribute("morphTarget"+x,y[E]),p&&c.getAttribute("morphNormal"+x)!==p[E]&&c.setAttribute("morphNormal"+x,p[E]),s[x]=M,g+=M):(y&&c.hasAttribute("morphTarget"+x)===!0&&c.deleteAttribute("morphTarget"+x),p&&c.hasAttribute("morphNormal"+x)===!0&&c.deleteAttribute("morphNormal"+x),s[x]=0)}const A=c.morphTargetsRelative?1:1-g;h.getUniforms().setValue(n,"morphTargetBaseInfluence",A),h.getUniforms().setValue(n,"morphTargetInfluences",s)}}return{update:l}}function NA(n,e,t,r){let s=new WeakMap;function i(l){const u=r.render.frame,c=l.geometry,h=e.get(l,c);if(s.get(h)!==u&&(e.update(h),s.set(h,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),s.get(l)!==u&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),s.set(l,u))),l.isSkinnedMesh){const d=l.skeleton;s.get(d)!==u&&(d.update(),s.set(d,u))}return h}function a(){s=new WeakMap}function o(l){const u=l.target;u.removeEventListener("dispose",o),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:i,dispose:a}}const $m=new mn,zm=new Mm,Vm=new gb,Gm=new Om,Sf=[],_f=[],Ef=new Float32Array(16),Tf=new Float32Array(9),Cf=new Float32Array(4);function wa(n,e,t){const r=n[0];if(r<=0||r>0)return n;const s=e*t;let i=Sf[s];if(i===void 0&&(i=new Float32Array(s),Sf[s]=i),e!==0){r.toArray(i,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(i,o)}return i}function nn(n,e){if(n.length!==e.length)return!1;for(let t=0,r=n.length;t<r;t++)if(n[t]!==e[t])return!1;return!0}function rn(n,e){for(let t=0,r=e.length;t<r;t++)n[t]=e[t]}function su(n,e){let t=_f[e];t===void 0&&(t=new Int32Array(e),_f[e]=t);for(let r=0;r!==e;++r)t[r]=n.allocateTextureUnit();return t}function PA(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function DA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;n.uniform2fv(this.addr,e),rn(t,e)}}function LA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(nn(t,e))return;n.uniform3fv(this.addr,e),rn(t,e)}}function kA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;n.uniform4fv(this.addr,e),rn(t,e)}}function FA(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(nn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,r))return;Cf.set(r),n.uniformMatrix2fv(this.addr,!1,Cf),rn(t,r)}}function OA(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(nn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,r))return;Tf.set(r),n.uniformMatrix3fv(this.addr,!1,Tf),rn(t,r)}}function UA(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(nn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,r))return;Ef.set(r),n.uniformMatrix4fv(this.addr,!1,Ef),rn(t,r)}}function BA(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function $A(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;n.uniform2iv(this.addr,e),rn(t,e)}}function zA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(nn(t,e))return;n.uniform3iv(this.addr,e),rn(t,e)}}function VA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;n.uniform4iv(this.addr,e),rn(t,e)}}function GA(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function WA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;n.uniform2uiv(this.addr,e),rn(t,e)}}function HA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(nn(t,e))return;n.uniform3uiv(this.addr,e),rn(t,e)}}function XA(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;n.uniform4uiv(this.addr,e),rn(t,e)}}function qA(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2D(e||$m,s)}function jA(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture3D(e||Vm,s)}function KA(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTextureCube(e||Gm,s)}function YA(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2DArray(e||zm,s)}function QA(n){switch(n){case 5126:return PA;case 35664:return DA;case 35665:return LA;case 35666:return kA;case 35674:return FA;case 35675:return OA;case 35676:return UA;case 5124:case 35670:return BA;case 35667:case 35671:return $A;case 35668:case 35672:return zA;case 35669:case 35673:return VA;case 5125:return GA;case 36294:return WA;case 36295:return HA;case 36296:return XA;case 35678:case 36198:case 36298:case 36306:case 35682:return qA;case 35679:case 36299:case 36307:return jA;case 35680:case 36300:case 36308:case 36293:return KA;case 36289:case 36303:case 36311:case 36292:return YA}}function ZA(n,e){n.uniform1fv(this.addr,e)}function JA(n,e){const t=wa(e,this.size,2);n.uniform2fv(this.addr,t)}function eS(n,e){const t=wa(e,this.size,3);n.uniform3fv(this.addr,t)}function tS(n,e){const t=wa(e,this.size,4);n.uniform4fv(this.addr,t)}function nS(n,e){const t=wa(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function rS(n,e){const t=wa(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function sS(n,e){const t=wa(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function iS(n,e){n.uniform1iv(this.addr,e)}function aS(n,e){n.uniform2iv(this.addr,e)}function oS(n,e){n.uniform3iv(this.addr,e)}function lS(n,e){n.uniform4iv(this.addr,e)}function uS(n,e){n.uniform1uiv(this.addr,e)}function cS(n,e){n.uniform2uiv(this.addr,e)}function hS(n,e){n.uniform3uiv(this.addr,e)}function dS(n,e){n.uniform4uiv(this.addr,e)}function fS(n,e,t){const r=this.cache,s=e.length,i=su(t,s);nn(r,i)||(n.uniform1iv(this.addr,i),rn(r,i));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||$m,i[a])}function pS(n,e,t){const r=this.cache,s=e.length,i=su(t,s);nn(r,i)||(n.uniform1iv(this.addr,i),rn(r,i));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||Vm,i[a])}function mS(n,e,t){const r=this.cache,s=e.length,i=su(t,s);nn(r,i)||(n.uniform1iv(this.addr,i),rn(r,i));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||Gm,i[a])}function gS(n,e,t){const r=this.cache,s=e.length,i=su(t,s);nn(r,i)||(n.uniform1iv(this.addr,i),rn(r,i));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||zm,i[a])}function yS(n){switch(n){case 5126:return ZA;case 35664:return JA;case 35665:return eS;case 35666:return tS;case 35674:return nS;case 35675:return rS;case 35676:return sS;case 5124:case 35670:return iS;case 35667:case 35671:return aS;case 35668:case 35672:return oS;case 35669:case 35673:return lS;case 5125:return uS;case 36294:return cS;case 36295:return hS;case 36296:return dS;case 35678:case 36198:case 36298:case 36306:case 35682:return fS;case 35679:case 36299:case 36307:return pS;case 35680:case 36300:case 36308:case 36293:return mS;case 36289:case 36303:case 36311:case 36292:return gS}}class vS{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=QA(t.type)}}class xS{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=yS(t.type)}}class bS{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){const s=this.seq;for(let i=0,a=s.length;i!==a;++i){const o=s[i];o.setValue(e,t[o.id],r)}}}const nc=/(\w+)(\])?(\[|\.)?/g;function Mf(n,e){n.seq.push(e),n.map[e.id]=e}function wS(n,e,t){const r=n.name,s=r.length;for(nc.lastIndex=0;;){const i=nc.exec(r),a=nc.lastIndex;let o=i[1];const l=i[2]==="]",u=i[3];if(l&&(o=o|0),u===void 0||u==="["&&a+2===s){Mf(t,u===void 0?new vS(o,n,e):new xS(o,n,e));break}else{let h=t.map[o];h===void 0&&(h=new bS(o),Mf(t,h)),t=h}}}class bl{constructor(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<r;++s){const i=e.getActiveUniform(t,s),a=e.getUniformLocation(t,i.name);wS(i,a,this)}}setValue(e,t,r,s){const i=this.map[t];i!==void 0&&i.setValue(e,r,s)}setOptional(e,t,r){const s=t[r];s!==void 0&&this.setValue(e,r,s)}static upload(e,t,r,s){for(let i=0,a=t.length;i!==a;++i){const o=t[i],l=r[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,s)}}static seqWithValue(e,t){const r=[];for(let s=0,i=e.length;s!==i;++s){const a=e[s];a.id in t&&r.push(a)}return r}}function Rf(n,e,t){const r=n.createShader(e);return n.shaderSource(r,t),n.compileShader(r),r}let AS=0;function SS(n,e){const t=n.split(`
`),r=[],s=Math.max(e-6,0),i=Math.min(e+6,t.length);for(let a=s;a<i;a++){const o=a+1;r.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return r.join(`
`)}function _S(n){switch(n){case Ur:return["Linear","( value )"];case zt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),["Linear","( value )"]}}function If(n,e,t){const r=n.getShaderParameter(e,n.COMPILE_STATUS),s=n.getShaderInfoLog(e).trim();if(r&&s==="")return"";const i=/ERROR: 0:(\d+)/.exec(s);if(i){const a=parseInt(i[1]);return t.toUpperCase()+`

`+s+`

`+SS(n.getShaderSource(e),a)}else return s}function ES(n,e){const t=_S(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function TS(n,e){let t;switch(e){case Px:t="Linear";break;case Dx:t="Reinhard";break;case Lx:t="OptimizedCineon";break;case kx:t="ACESFilmic";break;case Fx:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function CS(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qa).join(`
`)}function MS(n){const e=[];for(const t in n){const r=n[t];r!==!1&&e.push("#define "+t+" "+r)}return e.join(`
`)}function RS(n,e){const t={},r=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let s=0;s<r;s++){const i=n.getActiveAttrib(e,s),a=i.name;let o=1;i.type===n.FLOAT_MAT2&&(o=2),i.type===n.FLOAT_MAT3&&(o=3),i.type===n.FLOAT_MAT4&&(o=4),t[a]={type:i.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function Qa(n){return n!==""}function Nf(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Pf(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const IS=/^[ \t]*#include +<([\w\d./]+)>/gm;function Dc(n){return n.replace(IS,PS)}const NS=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function PS(n,e){let t=ht[e];if(t===void 0){const r=NS.get(e);if(r!==void 0)t=ht[r],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,r);else throw new Error("Can not resolve #include <"+e+">")}return Dc(t)}const DS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Df(n){return n.replace(DS,LS)}function LS(n,e,t,r){let s="";for(let i=parseInt(e);i<parseInt(t);i++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return s}function Lf(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function kS(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===dm?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===cx?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===qr&&(e="SHADOWMAP_TYPE_VSM"),e}function FS(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case la:case ua:e="ENVMAP_TYPE_CUBE";break;case Jl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function OS(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case ua:e="ENVMAP_MODE_REFRACTION";break}return e}function US(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case mm:e="ENVMAP_BLENDING_MULTIPLY";break;case Ix:e="ENVMAP_BLENDING_MIX";break;case Nx:e="ENVMAP_BLENDING_ADD";break}return e}function BS(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:r,maxMip:t}}function $S(n,e,t,r){const s=n.getContext(),i=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=kS(t),u=FS(t),c=OS(t),h=US(t),d=BS(t),f=t.isWebGL2?"":CS(t),m=MS(i),y=s.createProgram();let p,g,A=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Qa).join(`
`),p.length>0&&(p+=`
`),g=[f,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Qa).join(`
`),g.length>0&&(g+=`
`)):(p=[Lf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Qa).join(`
`),g=[f,Lf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ss?"#define TONE_MAPPING":"",t.toneMapping!==Ss?ht.tonemapping_pars_fragment:"",t.toneMapping!==Ss?TS("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.colorspace_pars_fragment,ES("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Qa).join(`
`)),a=Dc(a),a=Nf(a,t),a=Pf(a,t),o=Dc(o),o=Nf(o,t),o=Pf(o,t),a=Df(a),o=Df(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(A=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,g=["#define varying in",t.glslVersion===Jd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Jd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=A+p+a,S=A+g+o,E=Rf(s,s.VERTEX_SHADER,x),M=Rf(s,s.FRAGMENT_SHADER,S);if(s.attachShader(y,E),s.attachShader(y,M),t.index0AttributeName!==void 0?s.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(y,0,"position"),s.linkProgram(y),n.debug.checkShaderErrors){const C=s.getProgramInfoLog(y).trim(),N=s.getShaderInfoLog(E).trim(),$=s.getShaderInfoLog(M).trim();let q=!0,z=!0;if(s.getProgramParameter(y,s.LINK_STATUS)===!1)if(q=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(s,y,E,M);else{const F=If(s,E,"vertex"),X=If(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(y,s.VALIDATE_STATUS)+`

Program Info Log: `+C+`
`+F+`
`+X)}else C!==""?console.warn("THREE.WebGLProgram: Program Info Log:",C):(N===""||$==="")&&(z=!1);z&&(this.diagnostics={runnable:q,programLog:C,vertexShader:{log:N,prefix:p},fragmentShader:{log:$,prefix:g}})}s.deleteShader(E),s.deleteShader(M);let R;this.getUniforms=function(){return R===void 0&&(R=new bl(s,y)),R};let O;return this.getAttributes=function(){return O===void 0&&(O=RS(s,y)),O},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(y),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=AS++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=E,this.fragmentShader=M,this}let zS=0;class VS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,r=e.fragmentShader,s=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(i)===!1&&(a.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const r of t)r.usedTimes--,r.usedTimes===0&&this.shaderCache.delete(r.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let r=t.get(e);return r===void 0&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){const t=this.shaderCache;let r=t.get(e);return r===void 0&&(r=new GS(e),t.set(e,r)),r}}class GS{constructor(e){this.id=zS++,this.code=e,this.usedTimes=0}}function WS(n,e,t,r,s,i,a){const o=new Im,l=new VS,u=[],c=s.isWebGL2,h=s.logarithmicDepthBuffer,d=s.vertexTextures;let f=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(C){return C===0?"uv":`uv${C}`}function p(C,N,$,q,z){const F=q.fog,X=z.geometry,Q=C.isMeshStandardMaterial?q.environment:null,Z=(C.isMeshStandardMaterial?t:e).get(C.envMap||Q),ie=Z&&Z.mapping===Jl?Z.image.height:null,de=m[C.type];C.precision!==null&&(f=s.getMaxPrecision(C.precision),f!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",f,"instead."));const ve=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,J=ve!==void 0?ve.length:0;let fe=0;X.morphAttributes.position!==void 0&&(fe=1),X.morphAttributes.normal!==void 0&&(fe=2),X.morphAttributes.color!==void 0&&(fe=3);let K,xe,Me,De;if(de){const It=Ir[de];K=It.vertexShader,xe=It.fragmentShader}else K=C.vertexShader,xe=C.fragmentShader,l.update(C),Me=l.getVertexShaderID(C),De=l.getFragmentShaderID(C);const Ve=n.getRenderTarget(),Be=z.isInstancedMesh===!0,mt=!!C.map,Kt=!!C.matcap,it=!!Z,te=!!C.aoMap,Yt=!!C.lightMap,Ye=!!C.bumpMap,Ze=!!C.normalMap,tt=!!C.displacementMap,wt=!!C.emissiveMap,lt=!!C.metalnessMap,Qe=!!C.roughnessMap,ft=C.anisotropy>0,ut=C.clearcoat>0,nt=C.iridescence>0,B=C.sheen>0,D=C.transmission>0,se=ft&&!!C.anisotropyMap,Ae=ut&&!!C.clearcoatMap,ge=ut&&!!C.clearcoatNormalMap,Se=ut&&!!C.clearcoatRoughnessMap,We=nt&&!!C.iridescenceMap,Re=nt&&!!C.iridescenceThicknessMap,le=B&&!!C.sheenColorMap,je=B&&!!C.sheenRoughnessMap,Ge=!!C.specularMap,Xe=!!C.specularColorMap,$e=!!C.specularIntensityMap,Oe=D&&!!C.transmissionMap,ct=D&&!!C.thicknessMap,dt=!!C.gradientMap,H=!!C.alphaMap,Le=C.alphaTest>0,oe=!!C.alphaHash,Ee=!!C.extensions,Fe=!!X.attributes.uv1,xt=!!X.attributes.uv2,At=!!X.attributes.uv3;let Wt=Ss;return C.toneMapped&&(Ve===null||Ve.isXRRenderTarget===!0)&&(Wt=n.toneMapping),{isWebGL2:c,shaderID:de,shaderType:C.type,shaderName:C.name,vertexShader:K,fragmentShader:xe,defines:C.defines,customVertexShaderID:Me,customFragmentShaderID:De,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:f,instancing:Be,instancingColor:Be&&z.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:Ve===null?n.outputColorSpace:Ve.isXRRenderTarget===!0?Ve.texture.colorSpace:Ur,map:mt,matcap:Kt,envMap:it,envMapMode:it&&Z.mapping,envMapCubeUVHeight:ie,aoMap:te,lightMap:Yt,bumpMap:Ye,normalMap:Ze,displacementMap:d&&tt,emissiveMap:wt,normalMapObjectSpace:Ze&&C.normalMapType===Kx,normalMapTangentSpace:Ze&&C.normalMapType===jx,metalnessMap:lt,roughnessMap:Qe,anisotropy:ft,anisotropyMap:se,clearcoat:ut,clearcoatMap:Ae,clearcoatNormalMap:ge,clearcoatRoughnessMap:Se,iridescence:nt,iridescenceMap:We,iridescenceThicknessMap:Re,sheen:B,sheenColorMap:le,sheenRoughnessMap:je,specularMap:Ge,specularColorMap:Xe,specularIntensityMap:$e,transmission:D,transmissionMap:Oe,thicknessMap:ct,gradientMap:dt,opaque:C.transparent===!1&&C.blending===ta,alphaMap:H,alphaTest:Le,alphaHash:oe,combine:C.combine,mapUv:mt&&y(C.map.channel),aoMapUv:te&&y(C.aoMap.channel),lightMapUv:Yt&&y(C.lightMap.channel),bumpMapUv:Ye&&y(C.bumpMap.channel),normalMapUv:Ze&&y(C.normalMap.channel),displacementMapUv:tt&&y(C.displacementMap.channel),emissiveMapUv:wt&&y(C.emissiveMap.channel),metalnessMapUv:lt&&y(C.metalnessMap.channel),roughnessMapUv:Qe&&y(C.roughnessMap.channel),anisotropyMapUv:se&&y(C.anisotropyMap.channel),clearcoatMapUv:Ae&&y(C.clearcoatMap.channel),clearcoatNormalMapUv:ge&&y(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&y(C.clearcoatRoughnessMap.channel),iridescenceMapUv:We&&y(C.iridescenceMap.channel),iridescenceThicknessMapUv:Re&&y(C.iridescenceThicknessMap.channel),sheenColorMapUv:le&&y(C.sheenColorMap.channel),sheenRoughnessMapUv:je&&y(C.sheenRoughnessMap.channel),specularMapUv:Ge&&y(C.specularMap.channel),specularColorMapUv:Xe&&y(C.specularColorMap.channel),specularIntensityMapUv:$e&&y(C.specularIntensityMap.channel),transmissionMapUv:Oe&&y(C.transmissionMap.channel),thicknessMapUv:ct&&y(C.thicknessMap.channel),alphaMapUv:H&&y(C.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(Ze||ft),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,vertexUv1s:Fe,vertexUv2s:xt,vertexUv3s:At,pointsUvs:z.isPoints===!0&&!!X.attributes.uv&&(mt||H),fog:!!F,useFog:C.fog===!0,fogExp2:F&&F.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:z.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:J,morphTextureStride:fe,numDirLights:N.directional.length,numPointLights:N.point.length,numSpotLights:N.spot.length,numSpotLightMaps:N.spotLightMap.length,numRectAreaLights:N.rectArea.length,numHemiLights:N.hemi.length,numDirLightShadows:N.directionalShadowMap.length,numPointLightShadows:N.pointShadowMap.length,numSpotLightShadows:N.spotShadowMap.length,numSpotLightShadowsWithMaps:N.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:C.dithering,shadowMapEnabled:n.shadowMap.enabled&&$.length>0,shadowMapType:n.shadowMap.type,toneMapping:Wt,useLegacyLights:n._useLegacyLights,decodeVideoTexture:mt&&C.map.isVideoTexture===!0&&C.map.colorSpace===zt,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===Pr,flipSided:C.side===$n,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionDerivatives:Ee&&C.extensions.derivatives===!0,extensionFragDepth:Ee&&C.extensions.fragDepth===!0,extensionDrawBuffers:Ee&&C.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ee&&C.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:C.customProgramCacheKey()}}function g(C){const N=[];if(C.shaderID?N.push(C.shaderID):(N.push(C.customVertexShaderID),N.push(C.customFragmentShaderID)),C.defines!==void 0)for(const $ in C.defines)N.push($),N.push(C.defines[$]);return C.isRawShaderMaterial===!1&&(A(N,C),x(N,C),N.push(n.outputColorSpace)),N.push(C.customProgramCacheKey),N.join()}function A(C,N){C.push(N.precision),C.push(N.outputColorSpace),C.push(N.envMapMode),C.push(N.envMapCubeUVHeight),C.push(N.mapUv),C.push(N.alphaMapUv),C.push(N.lightMapUv),C.push(N.aoMapUv),C.push(N.bumpMapUv),C.push(N.normalMapUv),C.push(N.displacementMapUv),C.push(N.emissiveMapUv),C.push(N.metalnessMapUv),C.push(N.roughnessMapUv),C.push(N.anisotropyMapUv),C.push(N.clearcoatMapUv),C.push(N.clearcoatNormalMapUv),C.push(N.clearcoatRoughnessMapUv),C.push(N.iridescenceMapUv),C.push(N.iridescenceThicknessMapUv),C.push(N.sheenColorMapUv),C.push(N.sheenRoughnessMapUv),C.push(N.specularMapUv),C.push(N.specularColorMapUv),C.push(N.specularIntensityMapUv),C.push(N.transmissionMapUv),C.push(N.thicknessMapUv),C.push(N.combine),C.push(N.fogExp2),C.push(N.sizeAttenuation),C.push(N.morphTargetsCount),C.push(N.morphAttributeCount),C.push(N.numDirLights),C.push(N.numPointLights),C.push(N.numSpotLights),C.push(N.numSpotLightMaps),C.push(N.numHemiLights),C.push(N.numRectAreaLights),C.push(N.numDirLightShadows),C.push(N.numPointLightShadows),C.push(N.numSpotLightShadows),C.push(N.numSpotLightShadowsWithMaps),C.push(N.shadowMapType),C.push(N.toneMapping),C.push(N.numClippingPlanes),C.push(N.numClipIntersection),C.push(N.depthPacking)}function x(C,N){o.disableAll(),N.isWebGL2&&o.enable(0),N.supportsVertexTextures&&o.enable(1),N.instancing&&o.enable(2),N.instancingColor&&o.enable(3),N.matcap&&o.enable(4),N.envMap&&o.enable(5),N.normalMapObjectSpace&&o.enable(6),N.normalMapTangentSpace&&o.enable(7),N.clearcoat&&o.enable(8),N.iridescence&&o.enable(9),N.alphaTest&&o.enable(10),N.vertexColors&&o.enable(11),N.vertexAlphas&&o.enable(12),N.vertexUv1s&&o.enable(13),N.vertexUv2s&&o.enable(14),N.vertexUv3s&&o.enable(15),N.vertexTangents&&o.enable(16),N.anisotropy&&o.enable(17),C.push(o.mask),o.disableAll(),N.fog&&o.enable(0),N.useFog&&o.enable(1),N.flatShading&&o.enable(2),N.logarithmicDepthBuffer&&o.enable(3),N.skinning&&o.enable(4),N.morphTargets&&o.enable(5),N.morphNormals&&o.enable(6),N.morphColors&&o.enable(7),N.premultipliedAlpha&&o.enable(8),N.shadowMapEnabled&&o.enable(9),N.useLegacyLights&&o.enable(10),N.doubleSided&&o.enable(11),N.flipSided&&o.enable(12),N.useDepthPacking&&o.enable(13),N.dithering&&o.enable(14),N.transmission&&o.enable(15),N.sheen&&o.enable(16),N.opaque&&o.enable(17),N.pointsUvs&&o.enable(18),N.decodeVideoTexture&&o.enable(19),C.push(o.mask)}function S(C){const N=m[C.type];let $;if(N){const q=Ir[N];$=Rb.clone(q.uniforms)}else $=C.uniforms;return $}function E(C,N){let $;for(let q=0,z=u.length;q<z;q++){const F=u[q];if(F.cacheKey===N){$=F,++$.usedTimes;break}}return $===void 0&&($=new $S(n,N,C,i),u.push($)),$}function M(C){if(--C.usedTimes===0){const N=u.indexOf(C);u[N]=u[u.length-1],u.pop(),C.destroy()}}function R(C){l.remove(C)}function O(){l.dispose()}return{getParameters:p,getProgramCacheKey:g,getUniforms:S,acquireProgram:E,releaseProgram:M,releaseShaderCache:R,programs:u,dispose:O}}function HS(){let n=new WeakMap;function e(i){let a=n.get(i);return a===void 0&&(a={},n.set(i,a)),a}function t(i){n.delete(i)}function r(i,a,o){n.get(i)[a]=o}function s(){n=new WeakMap}return{get:e,remove:t,update:r,dispose:s}}function XS(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function kf(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Ff(){const n=[];let e=0;const t=[],r=[],s=[];function i(){e=0,t.length=0,r.length=0,s.length=0}function a(h,d,f,m,y,p){let g=n[e];return g===void 0?(g={id:h.id,object:h,geometry:d,material:f,groupOrder:m,renderOrder:h.renderOrder,z:y,group:p},n[e]=g):(g.id=h.id,g.object=h,g.geometry=d,g.material=f,g.groupOrder=m,g.renderOrder=h.renderOrder,g.z=y,g.group=p),e++,g}function o(h,d,f,m,y,p){const g=a(h,d,f,m,y,p);f.transmission>0?r.push(g):f.transparent===!0?s.push(g):t.push(g)}function l(h,d,f,m,y,p){const g=a(h,d,f,m,y,p);f.transmission>0?r.unshift(g):f.transparent===!0?s.unshift(g):t.unshift(g)}function u(h,d){t.length>1&&t.sort(h||XS),r.length>1&&r.sort(d||kf),s.length>1&&s.sort(d||kf)}function c(){for(let h=e,d=n.length;h<d;h++){const f=n[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:r,transparent:s,init:i,push:o,unshift:l,finish:c,sort:u}}function qS(){let n=new WeakMap;function e(r,s){const i=n.get(r);let a;return i===void 0?(a=new Ff,n.set(r,[a])):s>=i.length?(a=new Ff,i.push(a)):a=i[s],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function jS(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new re,color:new Ct};break;case"SpotLight":t={position:new re,direction:new re,color:new Ct,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new re,color:new Ct,distance:0,decay:0};break;case"HemisphereLight":t={direction:new re,skyColor:new Ct,groundColor:new Ct};break;case"RectAreaLight":t={color:new Ct,position:new re,halfWidth:new re,halfHeight:new re};break}return n[e.id]=t,t}}}function KS(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let YS=0;function QS(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function ZS(n,e){const t=new jS,r=KS(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let c=0;c<9;c++)s.probe.push(new re);const i=new re,a=new ln,o=new ln;function l(c,h){let d=0,f=0,m=0;for(let $=0;$<9;$++)s.probe[$].set(0,0,0);let y=0,p=0,g=0,A=0,x=0,S=0,E=0,M=0,R=0,O=0;c.sort(QS);const C=h===!0?Math.PI:1;for(let $=0,q=c.length;$<q;$++){const z=c[$],F=z.color,X=z.intensity,Q=z.distance,Z=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)d+=F.r*X*C,f+=F.g*X*C,m+=F.b*X*C;else if(z.isLightProbe)for(let ie=0;ie<9;ie++)s.probe[ie].addScaledVector(z.sh.coefficients[ie],X);else if(z.isDirectionalLight){const ie=t.get(z);if(ie.color.copy(z.color).multiplyScalar(z.intensity*C),z.castShadow){const de=z.shadow,ve=r.get(z);ve.shadowBias=de.bias,ve.shadowNormalBias=de.normalBias,ve.shadowRadius=de.radius,ve.shadowMapSize=de.mapSize,s.directionalShadow[y]=ve,s.directionalShadowMap[y]=Z,s.directionalShadowMatrix[y]=z.shadow.matrix,S++}s.directional[y]=ie,y++}else if(z.isSpotLight){const ie=t.get(z);ie.position.setFromMatrixPosition(z.matrixWorld),ie.color.copy(F).multiplyScalar(X*C),ie.distance=Q,ie.coneCos=Math.cos(z.angle),ie.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),ie.decay=z.decay,s.spot[g]=ie;const de=z.shadow;if(z.map&&(s.spotLightMap[R]=z.map,R++,de.updateMatrices(z),z.castShadow&&O++),s.spotLightMatrix[g]=de.matrix,z.castShadow){const ve=r.get(z);ve.shadowBias=de.bias,ve.shadowNormalBias=de.normalBias,ve.shadowRadius=de.radius,ve.shadowMapSize=de.mapSize,s.spotShadow[g]=ve,s.spotShadowMap[g]=Z,M++}g++}else if(z.isRectAreaLight){const ie=t.get(z);ie.color.copy(F).multiplyScalar(X),ie.halfWidth.set(z.width*.5,0,0),ie.halfHeight.set(0,z.height*.5,0),s.rectArea[A]=ie,A++}else if(z.isPointLight){const ie=t.get(z);if(ie.color.copy(z.color).multiplyScalar(z.intensity*C),ie.distance=z.distance,ie.decay=z.decay,z.castShadow){const de=z.shadow,ve=r.get(z);ve.shadowBias=de.bias,ve.shadowNormalBias=de.normalBias,ve.shadowRadius=de.radius,ve.shadowMapSize=de.mapSize,ve.shadowCameraNear=de.camera.near,ve.shadowCameraFar=de.camera.far,s.pointShadow[p]=ve,s.pointShadowMap[p]=Z,s.pointShadowMatrix[p]=z.shadow.matrix,E++}s.point[p]=ie,p++}else if(z.isHemisphereLight){const ie=t.get(z);ie.skyColor.copy(z.color).multiplyScalar(X*C),ie.groundColor.copy(z.groundColor).multiplyScalar(X*C),s.hemi[x]=ie,x++}}A>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=Ne.LTC_FLOAT_1,s.rectAreaLTC2=Ne.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=Ne.LTC_HALF_1,s.rectAreaLTC2=Ne.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=d,s.ambient[1]=f,s.ambient[2]=m;const N=s.hash;(N.directionalLength!==y||N.pointLength!==p||N.spotLength!==g||N.rectAreaLength!==A||N.hemiLength!==x||N.numDirectionalShadows!==S||N.numPointShadows!==E||N.numSpotShadows!==M||N.numSpotMaps!==R)&&(s.directional.length=y,s.spot.length=g,s.rectArea.length=A,s.point.length=p,s.hemi.length=x,s.directionalShadow.length=S,s.directionalShadowMap.length=S,s.pointShadow.length=E,s.pointShadowMap.length=E,s.spotShadow.length=M,s.spotShadowMap.length=M,s.directionalShadowMatrix.length=S,s.pointShadowMatrix.length=E,s.spotLightMatrix.length=M+R-O,s.spotLightMap.length=R,s.numSpotLightShadowsWithMaps=O,N.directionalLength=y,N.pointLength=p,N.spotLength=g,N.rectAreaLength=A,N.hemiLength=x,N.numDirectionalShadows=S,N.numPointShadows=E,N.numSpotShadows=M,N.numSpotMaps=R,s.version=YS++)}function u(c,h){let d=0,f=0,m=0,y=0,p=0;const g=h.matrixWorldInverse;for(let A=0,x=c.length;A<x;A++){const S=c[A];if(S.isDirectionalLight){const E=s.directional[d];E.direction.setFromMatrixPosition(S.matrixWorld),i.setFromMatrixPosition(S.target.matrixWorld),E.direction.sub(i),E.direction.transformDirection(g),d++}else if(S.isSpotLight){const E=s.spot[m];E.position.setFromMatrixPosition(S.matrixWorld),E.position.applyMatrix4(g),E.direction.setFromMatrixPosition(S.matrixWorld),i.setFromMatrixPosition(S.target.matrixWorld),E.direction.sub(i),E.direction.transformDirection(g),m++}else if(S.isRectAreaLight){const E=s.rectArea[y];E.position.setFromMatrixPosition(S.matrixWorld),E.position.applyMatrix4(g),o.identity(),a.copy(S.matrixWorld),a.premultiply(g),o.extractRotation(a),E.halfWidth.set(S.width*.5,0,0),E.halfHeight.set(0,S.height*.5,0),E.halfWidth.applyMatrix4(o),E.halfHeight.applyMatrix4(o),y++}else if(S.isPointLight){const E=s.point[f];E.position.setFromMatrixPosition(S.matrixWorld),E.position.applyMatrix4(g),f++}else if(S.isHemisphereLight){const E=s.hemi[p];E.direction.setFromMatrixPosition(S.matrixWorld),E.direction.transformDirection(g),p++}}}return{setup:l,setupView:u,state:s}}function Of(n,e){const t=new ZS(n,e),r=[],s=[];function i(){r.length=0,s.length=0}function a(h){r.push(h)}function o(h){s.push(h)}function l(h){t.setup(r,h)}function u(h){t.setupView(r,h)}return{init:i,state:{lightsArray:r,shadowsArray:s,lights:t},setupLights:l,setupLightsView:u,pushLight:a,pushShadow:o}}function JS(n,e){let t=new WeakMap;function r(i,a=0){const o=t.get(i);let l;return o===void 0?(l=new Of(n,e),t.set(i,[l])):a>=o.length?(l=new Of(n,e),o.push(l)):l=o[a],l}function s(){t=new WeakMap}return{get:r,dispose:s}}class e_ extends Io{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Xx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class t_ extends Io{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const n_=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,r_=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function s_(n,e,t){let r=new Um;const s=new Dt,i=new Dt,a=new pn,o=new e_({depthPacking:qx}),l=new t_,u={},c=t.maxTextureSize,h={[Rs]:$n,[$n]:Rs,[Pr]:Pr},d=new Is({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Dt},radius:{value:4}},vertexShader:n_,fragmentShader:r_}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const m=new os;m.setAttribute("position",new Lr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new ts(m,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=dm;let g=this.type;this.render=function(E,M,R){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||E.length===0)return;const O=n.getRenderTarget(),C=n.getActiveCubeFace(),N=n.getActiveMipmapLevel(),$=n.state;$.setBlending(As),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const q=g!==qr&&this.type===qr,z=g===qr&&this.type!==qr;for(let F=0,X=E.length;F<X;F++){const Q=E[F],Z=Q.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;s.copy(Z.mapSize);const ie=Z.getFrameExtents();if(s.multiply(ie),i.copy(Z.mapSize),(s.x>c||s.y>c)&&(s.x>c&&(i.x=Math.floor(c/ie.x),s.x=i.x*ie.x,Z.mapSize.x=i.x),s.y>c&&(i.y=Math.floor(c/ie.y),s.y=i.y*ie.y,Z.mapSize.y=i.y)),Z.map===null||q===!0||z===!0){const ve=this.type!==qr?{minFilter:dn,magFilter:dn}:{};Z.map!==null&&Z.map.dispose(),Z.map=new ui(s.x,s.y,ve),Z.map.texture.name=Q.name+".shadowMap",Z.camera.updateProjectionMatrix()}n.setRenderTarget(Z.map),n.clear();const de=Z.getViewportCount();for(let ve=0;ve<de;ve++){const J=Z.getViewport(ve);a.set(i.x*J.x,i.y*J.y,i.x*J.z,i.y*J.w),$.viewport(a),Z.updateMatrices(Q,ve),r=Z.getFrustum(),S(M,R,Z.camera,Q,this.type)}Z.isPointLightShadow!==!0&&this.type===qr&&A(Z,R),Z.needsUpdate=!1}g=this.type,p.needsUpdate=!1,n.setRenderTarget(O,C,N)};function A(E,M){const R=e.update(y);d.defines.VSM_SAMPLES!==E.blurSamples&&(d.defines.VSM_SAMPLES=E.blurSamples,f.defines.VSM_SAMPLES=E.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new ui(s.x,s.y)),d.uniforms.shadow_pass.value=E.map.texture,d.uniforms.resolution.value=E.mapSize,d.uniforms.radius.value=E.radius,n.setRenderTarget(E.mapPass),n.clear(),n.renderBufferDirect(M,null,R,d,y,null),f.uniforms.shadow_pass.value=E.mapPass.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,n.setRenderTarget(E.map),n.clear(),n.renderBufferDirect(M,null,R,f,y,null)}function x(E,M,R,O){let C=null;const N=R.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(N!==void 0)C=N;else if(C=R.isPointLight===!0?l:o,n.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const $=C.uuid,q=M.uuid;let z=u[$];z===void 0&&(z={},u[$]=z);let F=z[q];F===void 0&&(F=C.clone(),z[q]=F),C=F}if(C.visible=M.visible,C.wireframe=M.wireframe,O===qr?C.side=M.shadowSide!==null?M.shadowSide:M.side:C.side=M.shadowSide!==null?M.shadowSide:h[M.side],C.alphaMap=M.alphaMap,C.alphaTest=M.alphaTest,C.map=M.map,C.clipShadows=M.clipShadows,C.clippingPlanes=M.clippingPlanes,C.clipIntersection=M.clipIntersection,C.displacementMap=M.displacementMap,C.displacementScale=M.displacementScale,C.displacementBias=M.displacementBias,C.wireframeLinewidth=M.wireframeLinewidth,C.linewidth=M.linewidth,R.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const $=n.properties.get(C);$.light=R}return C}function S(E,M,R,O,C){if(E.visible===!1)return;if(E.layers.test(M.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&C===qr)&&(!E.frustumCulled||r.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,E.matrixWorld);const q=e.update(E),z=E.material;if(Array.isArray(z)){const F=q.groups;for(let X=0,Q=F.length;X<Q;X++){const Z=F[X],ie=z[Z.materialIndex];if(ie&&ie.visible){const de=x(E,ie,O,C);n.renderBufferDirect(R,null,q,de,E,Z)}}}else if(z.visible){const F=x(E,z,O,C);n.renderBufferDirect(R,null,q,F,E,null)}}const $=E.children;for(let q=0,z=$.length;q<z;q++)S($[q],M,R,O,C)}}function i_(n,e,t){const r=t.isWebGL2;function s(){let H=!1;const Le=new pn;let oe=null;const Ee=new pn(0,0,0,0);return{setMask:function(Fe){oe!==Fe&&!H&&(n.colorMask(Fe,Fe,Fe,Fe),oe=Fe)},setLocked:function(Fe){H=Fe},setClear:function(Fe,xt,At,Wt,dr){dr===!0&&(Fe*=Wt,xt*=Wt,At*=Wt),Le.set(Fe,xt,At,Wt),Ee.equals(Le)===!1&&(n.clearColor(Fe,xt,At,Wt),Ee.copy(Le))},reset:function(){H=!1,oe=null,Ee.set(-1,0,0,0)}}}function i(){let H=!1,Le=null,oe=null,Ee=null;return{setTest:function(Fe){Fe?Ve(n.DEPTH_TEST):Be(n.DEPTH_TEST)},setMask:function(Fe){Le!==Fe&&!H&&(n.depthMask(Fe),Le=Fe)},setFunc:function(Fe){if(oe!==Fe){switch(Fe){case Sx:n.depthFunc(n.NEVER);break;case _x:n.depthFunc(n.ALWAYS);break;case Ex:n.depthFunc(n.LESS);break;case Ec:n.depthFunc(n.LEQUAL);break;case Tx:n.depthFunc(n.EQUAL);break;case Cx:n.depthFunc(n.GEQUAL);break;case Mx:n.depthFunc(n.GREATER);break;case Rx:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}oe=Fe}},setLocked:function(Fe){H=Fe},setClear:function(Fe){Ee!==Fe&&(n.clearDepth(Fe),Ee=Fe)},reset:function(){H=!1,Le=null,oe=null,Ee=null}}}function a(){let H=!1,Le=null,oe=null,Ee=null,Fe=null,xt=null,At=null,Wt=null,dr=null;return{setTest:function(It){H||(It?Ve(n.STENCIL_TEST):Be(n.STENCIL_TEST))},setMask:function(It){Le!==It&&!H&&(n.stencilMask(It),Le=It)},setFunc:function(It,Vt,cn){(oe!==It||Ee!==Vt||Fe!==cn)&&(n.stencilFunc(It,Vt,cn),oe=It,Ee=Vt,Fe=cn)},setOp:function(It,Vt,cn){(xt!==It||At!==Vt||Wt!==cn)&&(n.stencilOp(It,Vt,cn),xt=It,At=Vt,Wt=cn)},setLocked:function(It){H=It},setClear:function(It){dr!==It&&(n.clearStencil(It),dr=It)},reset:function(){H=!1,Le=null,oe=null,Ee=null,Fe=null,xt=null,At=null,Wt=null,dr=null}}}const o=new s,l=new i,u=new a,c=new WeakMap,h=new WeakMap;let d={},f={},m=new WeakMap,y=[],p=null,g=!1,A=null,x=null,S=null,E=null,M=null,R=null,O=null,C=!1,N=null,$=null,q=null,z=null,F=null;const X=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Q=!1,Z=0;const ie=n.getParameter(n.VERSION);ie.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(ie)[1]),Q=Z>=1):ie.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(ie)[1]),Q=Z>=2);let de=null,ve={};const J=n.getParameter(n.SCISSOR_BOX),fe=n.getParameter(n.VIEWPORT),K=new pn().fromArray(J),xe=new pn().fromArray(fe);function Me(H,Le,oe,Ee){const Fe=new Uint8Array(4),xt=n.createTexture();n.bindTexture(H,xt),n.texParameteri(H,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(H,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let At=0;At<oe;At++)r&&(H===n.TEXTURE_3D||H===n.TEXTURE_2D_ARRAY)?n.texImage3D(Le,0,n.RGBA,1,1,Ee,0,n.RGBA,n.UNSIGNED_BYTE,Fe):n.texImage2D(Le+At,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Fe);return xt}const De={};De[n.TEXTURE_2D]=Me(n.TEXTURE_2D,n.TEXTURE_2D,1),De[n.TEXTURE_CUBE_MAP]=Me(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),r&&(De[n.TEXTURE_2D_ARRAY]=Me(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),De[n.TEXTURE_3D]=Me(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),u.setClear(0),Ve(n.DEPTH_TEST),l.setFunc(Ec),tt(!1),wt(bd),Ve(n.CULL_FACE),Ye(As);function Ve(H){d[H]!==!0&&(n.enable(H),d[H]=!0)}function Be(H){d[H]!==!1&&(n.disable(H),d[H]=!1)}function mt(H,Le){return f[H]!==Le?(n.bindFramebuffer(H,Le),f[H]=Le,r&&(H===n.DRAW_FRAMEBUFFER&&(f[n.FRAMEBUFFER]=Le),H===n.FRAMEBUFFER&&(f[n.DRAW_FRAMEBUFFER]=Le)),!0):!1}function Kt(H,Le){let oe=y,Ee=!1;if(H)if(oe=m.get(Le),oe===void 0&&(oe=[],m.set(Le,oe)),H.isWebGLMultipleRenderTargets){const Fe=H.texture;if(oe.length!==Fe.length||oe[0]!==n.COLOR_ATTACHMENT0){for(let xt=0,At=Fe.length;xt<At;xt++)oe[xt]=n.COLOR_ATTACHMENT0+xt;oe.length=Fe.length,Ee=!0}}else oe[0]!==n.COLOR_ATTACHMENT0&&(oe[0]=n.COLOR_ATTACHMENT0,Ee=!0);else oe[0]!==n.BACK&&(oe[0]=n.BACK,Ee=!0);Ee&&(t.isWebGL2?n.drawBuffers(oe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(oe))}function it(H){return p!==H?(n.useProgram(H),p=H,!0):!1}const te={[ji]:n.FUNC_ADD,[dx]:n.FUNC_SUBTRACT,[fx]:n.FUNC_REVERSE_SUBTRACT};if(r)te[_d]=n.MIN,te[Ed]=n.MAX;else{const H=e.get("EXT_blend_minmax");H!==null&&(te[_d]=H.MIN_EXT,te[Ed]=H.MAX_EXT)}const Yt={[px]:n.ZERO,[mx]:n.ONE,[gx]:n.SRC_COLOR,[fm]:n.SRC_ALPHA,[Ax]:n.SRC_ALPHA_SATURATE,[bx]:n.DST_COLOR,[vx]:n.DST_ALPHA,[yx]:n.ONE_MINUS_SRC_COLOR,[pm]:n.ONE_MINUS_SRC_ALPHA,[wx]:n.ONE_MINUS_DST_COLOR,[xx]:n.ONE_MINUS_DST_ALPHA};function Ye(H,Le,oe,Ee,Fe,xt,At,Wt){if(H===As){g===!0&&(Be(n.BLEND),g=!1);return}if(g===!1&&(Ve(n.BLEND),g=!0),H!==hx){if(H!==A||Wt!==C){if((x!==ji||M!==ji)&&(n.blendEquation(n.FUNC_ADD),x=ji,M=ji),Wt)switch(H){case ta:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case wd:n.blendFunc(n.ONE,n.ONE);break;case Ad:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Sd:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case ta:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case wd:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case Ad:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Sd:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}S=null,E=null,R=null,O=null,A=H,C=Wt}return}Fe=Fe||Le,xt=xt||oe,At=At||Ee,(Le!==x||Fe!==M)&&(n.blendEquationSeparate(te[Le],te[Fe]),x=Le,M=Fe),(oe!==S||Ee!==E||xt!==R||At!==O)&&(n.blendFuncSeparate(Yt[oe],Yt[Ee],Yt[xt],Yt[At]),S=oe,E=Ee,R=xt,O=At),A=H,C=!1}function Ze(H,Le){H.side===Pr?Be(n.CULL_FACE):Ve(n.CULL_FACE);let oe=H.side===$n;Le&&(oe=!oe),tt(oe),H.blending===ta&&H.transparent===!1?Ye(As):Ye(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),l.setFunc(H.depthFunc),l.setTest(H.depthTest),l.setMask(H.depthWrite),o.setMask(H.colorWrite);const Ee=H.stencilWrite;u.setTest(Ee),Ee&&(u.setMask(H.stencilWriteMask),u.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),u.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),Qe(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?Ve(n.SAMPLE_ALPHA_TO_COVERAGE):Be(n.SAMPLE_ALPHA_TO_COVERAGE)}function tt(H){N!==H&&(H?n.frontFace(n.CW):n.frontFace(n.CCW),N=H)}function wt(H){H!==lx?(Ve(n.CULL_FACE),H!==$&&(H===bd?n.cullFace(n.BACK):H===ux?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):Be(n.CULL_FACE),$=H}function lt(H){H!==q&&(Q&&n.lineWidth(H),q=H)}function Qe(H,Le,oe){H?(Ve(n.POLYGON_OFFSET_FILL),(z!==Le||F!==oe)&&(n.polygonOffset(Le,oe),z=Le,F=oe)):Be(n.POLYGON_OFFSET_FILL)}function ft(H){H?Ve(n.SCISSOR_TEST):Be(n.SCISSOR_TEST)}function ut(H){H===void 0&&(H=n.TEXTURE0+X-1),de!==H&&(n.activeTexture(H),de=H)}function nt(H,Le,oe){oe===void 0&&(de===null?oe=n.TEXTURE0+X-1:oe=de);let Ee=ve[oe];Ee===void 0&&(Ee={type:void 0,texture:void 0},ve[oe]=Ee),(Ee.type!==H||Ee.texture!==Le)&&(de!==oe&&(n.activeTexture(oe),de=oe),n.bindTexture(H,Le||De[H]),Ee.type=H,Ee.texture=Le)}function B(){const H=ve[de];H!==void 0&&H.type!==void 0&&(n.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function D(){try{n.compressedTexImage2D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function se(){try{n.compressedTexImage3D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ae(){try{n.texSubImage2D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ge(){try{n.texSubImage3D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Se(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function We(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Re(){try{n.texStorage2D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function le(){try{n.texStorage3D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function je(){try{n.texImage2D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ge(){try{n.texImage3D.apply(n,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Xe(H){K.equals(H)===!1&&(n.scissor(H.x,H.y,H.z,H.w),K.copy(H))}function $e(H){xe.equals(H)===!1&&(n.viewport(H.x,H.y,H.z,H.w),xe.copy(H))}function Oe(H,Le){let oe=h.get(Le);oe===void 0&&(oe=new WeakMap,h.set(Le,oe));let Ee=oe.get(H);Ee===void 0&&(Ee=n.getUniformBlockIndex(Le,H.name),oe.set(H,Ee))}function ct(H,Le){const Ee=h.get(Le).get(H);c.get(Le)!==Ee&&(n.uniformBlockBinding(Le,Ee,H.__bindingPointIndex),c.set(Le,Ee))}function dt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),r===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),d={},de=null,ve={},f={},m=new WeakMap,y=[],p=null,g=!1,A=null,x=null,S=null,E=null,M=null,R=null,O=null,C=!1,N=null,$=null,q=null,z=null,F=null,K.set(0,0,n.canvas.width,n.canvas.height),xe.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),u.reset()}return{buffers:{color:o,depth:l,stencil:u},enable:Ve,disable:Be,bindFramebuffer:mt,drawBuffers:Kt,useProgram:it,setBlending:Ye,setMaterial:Ze,setFlipSided:tt,setCullFace:wt,setLineWidth:lt,setPolygonOffset:Qe,setScissorTest:ft,activeTexture:ut,bindTexture:nt,unbindTexture:B,compressedTexImage2D:D,compressedTexImage3D:se,texImage2D:je,texImage3D:Ge,updateUBOMapping:Oe,uniformBlockBinding:ct,texStorage2D:Re,texStorage3D:le,texSubImage2D:Ae,texSubImage3D:ge,compressedTexSubImage2D:Se,compressedTexSubImage3D:We,scissor:Xe,viewport:$e,reset:dt}}function a_(n,e,t,r,s,i,a){const o=s.isWebGL2,l=s.maxTextures,u=s.maxCubemapSize,c=s.maxTextureSize,h=s.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let y;const p=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function A(B,D){return g?new OffscreenCanvas(B,D):Rl("canvas")}function x(B,D,se,Ae){let ge=1;if((B.width>Ae||B.height>Ae)&&(ge=Ae/Math.max(B.width,B.height)),ge<1||D===!0)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap){const Se=D?Pc:Math.floor,We=Se(ge*B.width),Re=Se(ge*B.height);y===void 0&&(y=A(We,Re));const le=se?A(We,Re):y;return le.width=We,le.height=Re,le.getContext("2d").drawImage(B,0,0,We,Re),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+We+"x"+Re+")."),le}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function S(B){return ef(B.width)&&ef(B.height)}function E(B){return o?!1:B.wrapS!==br||B.wrapT!==br||B.minFilter!==dn&&B.minFilter!==On}function M(B,D){return B.generateMipmaps&&D&&B.minFilter!==dn&&B.minFilter!==On}function R(B){n.generateMipmap(B)}function O(B,D,se,Ae,ge=!1){if(o===!1)return D;if(B!==null){if(n[B]!==void 0)return n[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let Se=D;return D===n.RED&&(se===n.FLOAT&&(Se=n.R32F),se===n.HALF_FLOAT&&(Se=n.R16F),se===n.UNSIGNED_BYTE&&(Se=n.R8)),D===n.RED_INTEGER&&(se===n.UNSIGNED_BYTE&&(Se=n.R8UI),se===n.UNSIGNED_SHORT&&(Se=n.R16UI),se===n.UNSIGNED_INT&&(Se=n.R32UI),se===n.BYTE&&(Se=n.R8I),se===n.SHORT&&(Se=n.R16I),se===n.INT&&(Se=n.R32I)),D===n.RG&&(se===n.FLOAT&&(Se=n.RG32F),se===n.HALF_FLOAT&&(Se=n.RG16F),se===n.UNSIGNED_BYTE&&(Se=n.RG8)),D===n.RGBA&&(se===n.FLOAT&&(Se=n.RGBA32F),se===n.HALF_FLOAT&&(Se=n.RGBA16F),se===n.UNSIGNED_BYTE&&(Se=Ae===zt&&ge===!1?n.SRGB8_ALPHA8:n.RGBA8),se===n.UNSIGNED_SHORT_4_4_4_4&&(Se=n.RGBA4),se===n.UNSIGNED_SHORT_5_5_5_1&&(Se=n.RGB5_A1)),(Se===n.R16F||Se===n.R32F||Se===n.RG16F||Se===n.RG32F||Se===n.RGBA16F||Se===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function C(B,D,se){return M(B,se)===!0||B.isFramebufferTexture&&B.minFilter!==dn&&B.minFilter!==On?Math.log2(Math.max(D.width,D.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?D.mipmaps.length:1}function N(B){return B===dn||B===Td||B===Mu?n.NEAREST:n.LINEAR}function $(B){const D=B.target;D.removeEventListener("dispose",$),z(D),D.isVideoTexture&&m.delete(D)}function q(B){const D=B.target;D.removeEventListener("dispose",q),X(D)}function z(B){const D=r.get(B);if(D.__webglInit===void 0)return;const se=B.source,Ae=p.get(se);if(Ae){const ge=Ae[D.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&F(B),Object.keys(Ae).length===0&&p.delete(se)}r.remove(B)}function F(B){const D=r.get(B);n.deleteTexture(D.__webglTexture);const se=B.source,Ae=p.get(se);delete Ae[D.__cacheKey],a.memory.textures--}function X(B){const D=B.texture,se=r.get(B),Ae=r.get(D);if(Ae.__webglTexture!==void 0&&(n.deleteTexture(Ae.__webglTexture),a.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++){if(Array.isArray(se.__webglFramebuffer[ge]))for(let Se=0;Se<se.__webglFramebuffer[ge].length;Se++)n.deleteFramebuffer(se.__webglFramebuffer[ge][Se]);else n.deleteFramebuffer(se.__webglFramebuffer[ge]);se.__webglDepthbuffer&&n.deleteRenderbuffer(se.__webglDepthbuffer[ge])}else{if(Array.isArray(se.__webglFramebuffer))for(let ge=0;ge<se.__webglFramebuffer.length;ge++)n.deleteFramebuffer(se.__webglFramebuffer[ge]);else n.deleteFramebuffer(se.__webglFramebuffer);if(se.__webglDepthbuffer&&n.deleteRenderbuffer(se.__webglDepthbuffer),se.__webglMultisampledFramebuffer&&n.deleteFramebuffer(se.__webglMultisampledFramebuffer),se.__webglColorRenderbuffer)for(let ge=0;ge<se.__webglColorRenderbuffer.length;ge++)se.__webglColorRenderbuffer[ge]&&n.deleteRenderbuffer(se.__webglColorRenderbuffer[ge]);se.__webglDepthRenderbuffer&&n.deleteRenderbuffer(se.__webglDepthRenderbuffer)}if(B.isWebGLMultipleRenderTargets)for(let ge=0,Se=D.length;ge<Se;ge++){const We=r.get(D[ge]);We.__webglTexture&&(n.deleteTexture(We.__webglTexture),a.memory.textures--),r.remove(D[ge])}r.remove(D),r.remove(B)}let Q=0;function Z(){Q=0}function ie(){const B=Q;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),Q+=1,B}function de(B){const D=[];return D.push(B.wrapS),D.push(B.wrapT),D.push(B.wrapR||0),D.push(B.magFilter),D.push(B.minFilter),D.push(B.anisotropy),D.push(B.internalFormat),D.push(B.format),D.push(B.type),D.push(B.generateMipmaps),D.push(B.premultiplyAlpha),D.push(B.flipY),D.push(B.unpackAlignment),D.push(B.colorSpace),D.join()}function ve(B,D){const se=r.get(B);if(B.isVideoTexture&&ut(B),B.isRenderTargetTexture===!1&&B.version>0&&se.__version!==B.version){const Ae=B.image;if(Ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{mt(se,B,D);return}}t.bindTexture(n.TEXTURE_2D,se.__webglTexture,n.TEXTURE0+D)}function J(B,D){const se=r.get(B);if(B.version>0&&se.__version!==B.version){mt(se,B,D);return}t.bindTexture(n.TEXTURE_2D_ARRAY,se.__webglTexture,n.TEXTURE0+D)}function fe(B,D){const se=r.get(B);if(B.version>0&&se.__version!==B.version){mt(se,B,D);return}t.bindTexture(n.TEXTURE_3D,se.__webglTexture,n.TEXTURE0+D)}function K(B,D){const se=r.get(B);if(B.version>0&&se.__version!==B.version){Kt(se,B,D);return}t.bindTexture(n.TEXTURE_CUBE_MAP,se.__webglTexture,n.TEXTURE0+D)}const xe={[Mc]:n.REPEAT,[br]:n.CLAMP_TO_EDGE,[Rc]:n.MIRRORED_REPEAT},Me={[dn]:n.NEAREST,[Td]:n.NEAREST_MIPMAP_NEAREST,[Mu]:n.NEAREST_MIPMAP_LINEAR,[On]:n.LINEAR,[Ox]:n.LINEAR_MIPMAP_NEAREST,[uo]:n.LINEAR_MIPMAP_LINEAR},De={[Qx]:n.NEVER,[sb]:n.ALWAYS,[Zx]:n.LESS,[eb]:n.LEQUAL,[Jx]:n.EQUAL,[rb]:n.GEQUAL,[tb]:n.GREATER,[nb]:n.NOTEQUAL};function Ve(B,D,se){if(se?(n.texParameteri(B,n.TEXTURE_WRAP_S,xe[D.wrapS]),n.texParameteri(B,n.TEXTURE_WRAP_T,xe[D.wrapT]),(B===n.TEXTURE_3D||B===n.TEXTURE_2D_ARRAY)&&n.texParameteri(B,n.TEXTURE_WRAP_R,xe[D.wrapR]),n.texParameteri(B,n.TEXTURE_MAG_FILTER,Me[D.magFilter]),n.texParameteri(B,n.TEXTURE_MIN_FILTER,Me[D.minFilter])):(n.texParameteri(B,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(B,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(B===n.TEXTURE_3D||B===n.TEXTURE_2D_ARRAY)&&n.texParameteri(B,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(D.wrapS!==br||D.wrapT!==br)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(B,n.TEXTURE_MAG_FILTER,N(D.magFilter)),n.texParameteri(B,n.TEXTURE_MIN_FILTER,N(D.minFilter)),D.minFilter!==dn&&D.minFilter!==On&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),D.compareFunction&&(n.texParameteri(B,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(B,n.TEXTURE_COMPARE_FUNC,De[D.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Ae=e.get("EXT_texture_filter_anisotropic");if(D.magFilter===dn||D.minFilter!==Mu&&D.minFilter!==uo||D.type===Jr&&e.has("OES_texture_float_linear")===!1||o===!1&&D.type===co&&e.has("OES_texture_half_float_linear")===!1)return;(D.anisotropy>1||r.get(D).__currentAnisotropy)&&(n.texParameterf(B,Ae.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,s.getMaxAnisotropy())),r.get(D).__currentAnisotropy=D.anisotropy)}}function Be(B,D){let se=!1;B.__webglInit===void 0&&(B.__webglInit=!0,D.addEventListener("dispose",$));const Ae=D.source;let ge=p.get(Ae);ge===void 0&&(ge={},p.set(Ae,ge));const Se=de(D);if(Se!==B.__cacheKey){ge[Se]===void 0&&(ge[Se]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,se=!0),ge[Se].usedTimes++;const We=ge[B.__cacheKey];We!==void 0&&(ge[B.__cacheKey].usedTimes--,We.usedTimes===0&&F(D)),B.__cacheKey=Se,B.__webglTexture=ge[Se].texture}return se}function mt(B,D,se){let Ae=n.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(Ae=n.TEXTURE_2D_ARRAY),D.isData3DTexture&&(Ae=n.TEXTURE_3D);const ge=Be(B,D),Se=D.source;t.bindTexture(Ae,B.__webglTexture,n.TEXTURE0+se);const We=r.get(Se);if(Se.version!==We.__version||ge===!0){t.activeTexture(n.TEXTURE0+se),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,D.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,D.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const Re=E(D)&&S(D.image)===!1;let le=x(D.image,Re,!1,c);le=nt(D,le);const je=S(le)||o,Ge=i.convert(D.format,D.colorSpace);let Xe=i.convert(D.type),$e=O(D.internalFormat,Ge,Xe,D.colorSpace,D.isVideoTexture);Ve(Ae,D,je);let Oe;const ct=D.mipmaps,dt=o&&D.isVideoTexture!==!0,H=We.__version===void 0||ge===!0,Le=C(D,le,je);if(D.isDepthTexture)$e=n.DEPTH_COMPONENT,o?D.type===Jr?$e=n.DEPTH_COMPONENT32F:D.type===xs?$e=n.DEPTH_COMPONENT24:D.type===ni?$e=n.DEPTH24_STENCIL8:$e=n.DEPTH_COMPONENT16:D.type===Jr&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),D.format===ri&&$e===n.DEPTH_COMPONENT&&D.type!==Th&&D.type!==xs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),D.type=xs,Xe=i.convert(D.type)),D.format===ca&&$e===n.DEPTH_COMPONENT&&($e=n.DEPTH_STENCIL,D.type!==ni&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),D.type=ni,Xe=i.convert(D.type))),H&&(dt?t.texStorage2D(n.TEXTURE_2D,1,$e,le.width,le.height):t.texImage2D(n.TEXTURE_2D,0,$e,le.width,le.height,0,Ge,Xe,null));else if(D.isDataTexture)if(ct.length>0&&je){dt&&H&&t.texStorage2D(n.TEXTURE_2D,Le,$e,ct[0].width,ct[0].height);for(let oe=0,Ee=ct.length;oe<Ee;oe++)Oe=ct[oe],dt?t.texSubImage2D(n.TEXTURE_2D,oe,0,0,Oe.width,Oe.height,Ge,Xe,Oe.data):t.texImage2D(n.TEXTURE_2D,oe,$e,Oe.width,Oe.height,0,Ge,Xe,Oe.data);D.generateMipmaps=!1}else dt?(H&&t.texStorage2D(n.TEXTURE_2D,Le,$e,le.width,le.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,le.width,le.height,Ge,Xe,le.data)):t.texImage2D(n.TEXTURE_2D,0,$e,le.width,le.height,0,Ge,Xe,le.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){dt&&H&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Le,$e,ct[0].width,ct[0].height,le.depth);for(let oe=0,Ee=ct.length;oe<Ee;oe++)Oe=ct[oe],D.format!==wr?Ge!==null?dt?t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,oe,0,0,0,Oe.width,Oe.height,le.depth,Ge,Oe.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,oe,$e,Oe.width,Oe.height,le.depth,0,Oe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):dt?t.texSubImage3D(n.TEXTURE_2D_ARRAY,oe,0,0,0,Oe.width,Oe.height,le.depth,Ge,Xe,Oe.data):t.texImage3D(n.TEXTURE_2D_ARRAY,oe,$e,Oe.width,Oe.height,le.depth,0,Ge,Xe,Oe.data)}else{dt&&H&&t.texStorage2D(n.TEXTURE_2D,Le,$e,ct[0].width,ct[0].height);for(let oe=0,Ee=ct.length;oe<Ee;oe++)Oe=ct[oe],D.format!==wr?Ge!==null?dt?t.compressedTexSubImage2D(n.TEXTURE_2D,oe,0,0,Oe.width,Oe.height,Ge,Oe.data):t.compressedTexImage2D(n.TEXTURE_2D,oe,$e,Oe.width,Oe.height,0,Oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):dt?t.texSubImage2D(n.TEXTURE_2D,oe,0,0,Oe.width,Oe.height,Ge,Xe,Oe.data):t.texImage2D(n.TEXTURE_2D,oe,$e,Oe.width,Oe.height,0,Ge,Xe,Oe.data)}else if(D.isDataArrayTexture)dt?(H&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Le,$e,le.width,le.height,le.depth),t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,le.width,le.height,le.depth,Ge,Xe,le.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,$e,le.width,le.height,le.depth,0,Ge,Xe,le.data);else if(D.isData3DTexture)dt?(H&&t.texStorage3D(n.TEXTURE_3D,Le,$e,le.width,le.height,le.depth),t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,le.width,le.height,le.depth,Ge,Xe,le.data)):t.texImage3D(n.TEXTURE_3D,0,$e,le.width,le.height,le.depth,0,Ge,Xe,le.data);else if(D.isFramebufferTexture){if(H)if(dt)t.texStorage2D(n.TEXTURE_2D,Le,$e,le.width,le.height);else{let oe=le.width,Ee=le.height;for(let Fe=0;Fe<Le;Fe++)t.texImage2D(n.TEXTURE_2D,Fe,$e,oe,Ee,0,Ge,Xe,null),oe>>=1,Ee>>=1}}else if(ct.length>0&&je){dt&&H&&t.texStorage2D(n.TEXTURE_2D,Le,$e,ct[0].width,ct[0].height);for(let oe=0,Ee=ct.length;oe<Ee;oe++)Oe=ct[oe],dt?t.texSubImage2D(n.TEXTURE_2D,oe,0,0,Ge,Xe,Oe):t.texImage2D(n.TEXTURE_2D,oe,$e,Ge,Xe,Oe);D.generateMipmaps=!1}else dt?(H&&t.texStorage2D(n.TEXTURE_2D,Le,$e,le.width,le.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,Ge,Xe,le)):t.texImage2D(n.TEXTURE_2D,0,$e,Ge,Xe,le);M(D,je)&&R(Ae),We.__version=Se.version,D.onUpdate&&D.onUpdate(D)}B.__version=D.version}function Kt(B,D,se){if(D.image.length!==6)return;const Ae=Be(B,D),ge=D.source;t.bindTexture(n.TEXTURE_CUBE_MAP,B.__webglTexture,n.TEXTURE0+se);const Se=r.get(ge);if(ge.version!==Se.__version||Ae===!0){t.activeTexture(n.TEXTURE0+se),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,D.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,D.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const We=D.isCompressedTexture||D.image[0].isCompressedTexture,Re=D.image[0]&&D.image[0].isDataTexture,le=[];for(let oe=0;oe<6;oe++)!We&&!Re?le[oe]=x(D.image[oe],!1,!0,u):le[oe]=Re?D.image[oe].image:D.image[oe],le[oe]=nt(D,le[oe]);const je=le[0],Ge=S(je)||o,Xe=i.convert(D.format,D.colorSpace),$e=i.convert(D.type),Oe=O(D.internalFormat,Xe,$e,D.colorSpace),ct=o&&D.isVideoTexture!==!0,dt=Se.__version===void 0||Ae===!0;let H=C(D,je,Ge);Ve(n.TEXTURE_CUBE_MAP,D,Ge);let Le;if(We){ct&&dt&&t.texStorage2D(n.TEXTURE_CUBE_MAP,H,Oe,je.width,je.height);for(let oe=0;oe<6;oe++){Le=le[oe].mipmaps;for(let Ee=0;Ee<Le.length;Ee++){const Fe=Le[Ee];D.format!==wr?Xe!==null?ct?t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Fe.width,Fe.height,Xe,Fe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,Oe,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ct?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Fe.width,Fe.height,Xe,$e,Fe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,Oe,Fe.width,Fe.height,0,Xe,$e,Fe.data)}}}else{Le=D.mipmaps,ct&&dt&&(Le.length>0&&H++,t.texStorage2D(n.TEXTURE_CUBE_MAP,H,Oe,le[0].width,le[0].height));for(let oe=0;oe<6;oe++)if(Re){ct?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,le[oe].width,le[oe].height,Xe,$e,le[oe].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,Oe,le[oe].width,le[oe].height,0,Xe,$e,le[oe].data);for(let Ee=0;Ee<Le.length;Ee++){const xt=Le[Ee].image[oe].image;ct?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,xt.width,xt.height,Xe,$e,xt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,Oe,xt.width,xt.height,0,Xe,$e,xt.data)}}else{ct?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,Xe,$e,le[oe]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,Oe,Xe,$e,le[oe]);for(let Ee=0;Ee<Le.length;Ee++){const Fe=Le[Ee];ct?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,Xe,$e,Fe.image[oe]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,Oe,Xe,$e,Fe.image[oe])}}}M(D,Ge)&&R(n.TEXTURE_CUBE_MAP),Se.__version=ge.version,D.onUpdate&&D.onUpdate(D)}B.__version=D.version}function it(B,D,se,Ae,ge,Se){const We=i.convert(se.format,se.colorSpace),Re=i.convert(se.type),le=O(se.internalFormat,We,Re,se.colorSpace);if(!r.get(D).__hasExternalTextures){const Ge=Math.max(1,D.width>>Se),Xe=Math.max(1,D.height>>Se);ge===n.TEXTURE_3D||ge===n.TEXTURE_2D_ARRAY?t.texImage3D(ge,Se,le,Ge,Xe,D.depth,0,We,Re,null):t.texImage2D(ge,Se,le,Ge,Xe,0,We,Re,null)}t.bindFramebuffer(n.FRAMEBUFFER,B),ft(D)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,Ae,ge,r.get(se).__webglTexture,0,Qe(D)):(ge===n.TEXTURE_2D||ge>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,Ae,ge,r.get(se).__webglTexture,Se),t.bindFramebuffer(n.FRAMEBUFFER,null)}function te(B,D,se){if(n.bindRenderbuffer(n.RENDERBUFFER,B),D.depthBuffer&&!D.stencilBuffer){let Ae=n.DEPTH_COMPONENT16;if(se||ft(D)){const ge=D.depthTexture;ge&&ge.isDepthTexture&&(ge.type===Jr?Ae=n.DEPTH_COMPONENT32F:ge.type===xs&&(Ae=n.DEPTH_COMPONENT24));const Se=Qe(D);ft(D)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Se,Ae,D.width,D.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,Se,Ae,D.width,D.height)}else n.renderbufferStorage(n.RENDERBUFFER,Ae,D.width,D.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,B)}else if(D.depthBuffer&&D.stencilBuffer){const Ae=Qe(D);se&&ft(D)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Ae,n.DEPTH24_STENCIL8,D.width,D.height):ft(D)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Ae,n.DEPTH24_STENCIL8,D.width,D.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,D.width,D.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,B)}else{const Ae=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let ge=0;ge<Ae.length;ge++){const Se=Ae[ge],We=i.convert(Se.format,Se.colorSpace),Re=i.convert(Se.type),le=O(Se.internalFormat,We,Re,Se.colorSpace),je=Qe(D);se&&ft(D)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,je,le,D.width,D.height):ft(D)?d.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,je,le,D.width,D.height):n.renderbufferStorage(n.RENDERBUFFER,le,D.width,D.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function Yt(B,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,B),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(D.depthTexture).__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),ve(D.depthTexture,0);const Ae=r.get(D.depthTexture).__webglTexture,ge=Qe(D);if(D.depthTexture.format===ri)ft(D)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Ae,0,ge):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Ae,0);else if(D.depthTexture.format===ca)ft(D)?d.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Ae,0,ge):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Ae,0);else throw new Error("Unknown depthTexture format")}function Ye(B){const D=r.get(B),se=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!D.__autoAllocateDepthBuffer){if(se)throw new Error("target.depthTexture not supported in Cube render targets");Yt(D.__webglFramebuffer,B)}else if(se){D.__webglDepthbuffer=[];for(let Ae=0;Ae<6;Ae++)t.bindFramebuffer(n.FRAMEBUFFER,D.__webglFramebuffer[Ae]),D.__webglDepthbuffer[Ae]=n.createRenderbuffer(),te(D.__webglDepthbuffer[Ae],B,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer=n.createRenderbuffer(),te(D.__webglDepthbuffer,B,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function Ze(B,D,se){const Ae=r.get(B);D!==void 0&&it(Ae.__webglFramebuffer,B,B.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),se!==void 0&&Ye(B)}function tt(B){const D=B.texture,se=r.get(B),Ae=r.get(D);B.addEventListener("dispose",q),B.isWebGLMultipleRenderTargets!==!0&&(Ae.__webglTexture===void 0&&(Ae.__webglTexture=n.createTexture()),Ae.__version=D.version,a.memory.textures++);const ge=B.isWebGLCubeRenderTarget===!0,Se=B.isWebGLMultipleRenderTargets===!0,We=S(B)||o;if(ge){se.__webglFramebuffer=[];for(let Re=0;Re<6;Re++)if(o&&D.mipmaps&&D.mipmaps.length>0){se.__webglFramebuffer[Re]=[];for(let le=0;le<D.mipmaps.length;le++)se.__webglFramebuffer[Re][le]=n.createFramebuffer()}else se.__webglFramebuffer[Re]=n.createFramebuffer()}else{if(o&&D.mipmaps&&D.mipmaps.length>0){se.__webglFramebuffer=[];for(let Re=0;Re<D.mipmaps.length;Re++)se.__webglFramebuffer[Re]=n.createFramebuffer()}else se.__webglFramebuffer=n.createFramebuffer();if(Se)if(s.drawBuffers){const Re=B.texture;for(let le=0,je=Re.length;le<je;le++){const Ge=r.get(Re[le]);Ge.__webglTexture===void 0&&(Ge.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&B.samples>0&&ft(B)===!1){const Re=Se?D:[D];se.__webglMultisampledFramebuffer=n.createFramebuffer(),se.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,se.__webglMultisampledFramebuffer);for(let le=0;le<Re.length;le++){const je=Re[le];se.__webglColorRenderbuffer[le]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,se.__webglColorRenderbuffer[le]);const Ge=i.convert(je.format,je.colorSpace),Xe=i.convert(je.type),$e=O(je.internalFormat,Ge,Xe,je.colorSpace,B.isXRRenderTarget===!0),Oe=Qe(B);n.renderbufferStorageMultisample(n.RENDERBUFFER,Oe,$e,B.width,B.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+le,n.RENDERBUFFER,se.__webglColorRenderbuffer[le])}n.bindRenderbuffer(n.RENDERBUFFER,null),B.depthBuffer&&(se.__webglDepthRenderbuffer=n.createRenderbuffer(),te(se.__webglDepthRenderbuffer,B,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(ge){t.bindTexture(n.TEXTURE_CUBE_MAP,Ae.__webglTexture),Ve(n.TEXTURE_CUBE_MAP,D,We);for(let Re=0;Re<6;Re++)if(o&&D.mipmaps&&D.mipmaps.length>0)for(let le=0;le<D.mipmaps.length;le++)it(se.__webglFramebuffer[Re][le],B,D,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Re,le);else it(se.__webglFramebuffer[Re],B,D,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Re,0);M(D,We)&&R(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Se){const Re=B.texture;for(let le=0,je=Re.length;le<je;le++){const Ge=Re[le],Xe=r.get(Ge);t.bindTexture(n.TEXTURE_2D,Xe.__webglTexture),Ve(n.TEXTURE_2D,Ge,We),it(se.__webglFramebuffer,B,Ge,n.COLOR_ATTACHMENT0+le,n.TEXTURE_2D,0),M(Ge,We)&&R(n.TEXTURE_2D)}t.unbindTexture()}else{let Re=n.TEXTURE_2D;if((B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(o?Re=B.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Re,Ae.__webglTexture),Ve(Re,D,We),o&&D.mipmaps&&D.mipmaps.length>0)for(let le=0;le<D.mipmaps.length;le++)it(se.__webglFramebuffer[le],B,D,n.COLOR_ATTACHMENT0,Re,le);else it(se.__webglFramebuffer,B,D,n.COLOR_ATTACHMENT0,Re,0);M(D,We)&&R(Re),t.unbindTexture()}B.depthBuffer&&Ye(B)}function wt(B){const D=S(B)||o,se=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let Ae=0,ge=se.length;Ae<ge;Ae++){const Se=se[Ae];if(M(Se,D)){const We=B.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,Re=r.get(Se).__webglTexture;t.bindTexture(We,Re),R(We),t.unbindTexture()}}}function lt(B){if(o&&B.samples>0&&ft(B)===!1){const D=B.isWebGLMultipleRenderTargets?B.texture:[B.texture],se=B.width,Ae=B.height;let ge=n.COLOR_BUFFER_BIT;const Se=[],We=B.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Re=r.get(B),le=B.isWebGLMultipleRenderTargets===!0;if(le)for(let je=0;je<D.length;je++)t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+je,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+je,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Re.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Re.__webglFramebuffer);for(let je=0;je<D.length;je++){Se.push(n.COLOR_ATTACHMENT0+je),B.depthBuffer&&Se.push(We);const Ge=Re.__ignoreDepthValues!==void 0?Re.__ignoreDepthValues:!1;if(Ge===!1&&(B.depthBuffer&&(ge|=n.DEPTH_BUFFER_BIT),B.stencilBuffer&&(ge|=n.STENCIL_BUFFER_BIT)),le&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Re.__webglColorRenderbuffer[je]),Ge===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[We]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[We])),le){const Xe=r.get(D[je]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Xe,0)}n.blitFramebuffer(0,0,se,Ae,0,0,se,Ae,ge,n.NEAREST),f&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Se)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),le)for(let je=0;je<D.length;je++){t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+je,n.RENDERBUFFER,Re.__webglColorRenderbuffer[je]);const Ge=r.get(D[je]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Re.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+je,n.TEXTURE_2D,Ge,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Re.__webglMultisampledFramebuffer)}}function Qe(B){return Math.min(h,B.samples)}function ft(B){const D=r.get(B);return o&&B.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function ut(B){const D=a.render.frame;m.get(B)!==D&&(m.set(B,D),B.update())}function nt(B,D){const se=B.colorSpace,Ae=B.format,ge=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||B.format===Ic||se!==Ur&&se!==ii&&(se===zt||se===eu?o===!1?e.has("EXT_sRGB")===!0&&Ae===wr?(B.format=Ic,B.minFilter=On,B.generateMipmaps=!1):D=Tm.sRGBToLinear(D):(Ae!==wr||ge!==_s)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",se)),D}this.allocateTextureUnit=ie,this.resetTextureUnits=Z,this.setTexture2D=ve,this.setTexture2DArray=J,this.setTexture3D=fe,this.setTextureCube=K,this.rebindTextures=Ze,this.setupRenderTarget=tt,this.updateRenderTargetMipmap=wt,this.updateMultisampleRenderTarget=lt,this.setupDepthRenderbuffer=Ye,this.setupFrameBufferTexture=it,this.useMultisampledRTT=ft}const o_=0,Zt=1;function l_(n,e,t){const r=t.isWebGL2;function s(i,a=ii){let o;const l=a===zt||a===eu?Zt:o_;if(i===_s)return n.UNSIGNED_BYTE;if(i===vm)return n.UNSIGNED_SHORT_4_4_4_4;if(i===xm)return n.UNSIGNED_SHORT_5_5_5_1;if(i===Ux)return n.BYTE;if(i===Bx)return n.SHORT;if(i===Th)return n.UNSIGNED_SHORT;if(i===ym)return n.INT;if(i===xs)return n.UNSIGNED_INT;if(i===Jr)return n.FLOAT;if(i===co)return r?n.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(i===$x)return n.ALPHA;if(i===wr)return n.RGBA;if(i===zx)return n.LUMINANCE;if(i===Vx)return n.LUMINANCE_ALPHA;if(i===ri)return n.DEPTH_COMPONENT;if(i===ca)return n.DEPTH_STENCIL;if(i===Ic)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(i===bm)return n.RED;if(i===wm)return n.RED_INTEGER;if(i===Gx)return n.RG;if(i===Am)return n.RG_INTEGER;if(i===Sm)return n.RGBA_INTEGER;if(i===Ru||i===Iu||i===Nu||i===Pu)if(l===Zt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(i===Ru)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Iu)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Nu)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Pu)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(i===Ru)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Iu)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Nu)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Pu)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Cd||i===Md||i===Rd||i===Id)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(i===Cd)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Md)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Rd)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Id)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Wx)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===Nd||i===Pd)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(i===Nd)return l===Zt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===Pd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Dd||i===Ld||i===kd||i===Fd||i===Od||i===Ud||i===Bd||i===$d||i===zd||i===Vd||i===Gd||i===Wd||i===Hd||i===Xd)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(i===Dd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Ld)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===kd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Fd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Od)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Ud)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Bd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===$d)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===zd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Vd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Gd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Wd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Hd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Xd)return l===Zt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Du||i===qd||i===jd)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(i===Du)return l===Zt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===qd)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===jd)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Hx||i===Kd||i===Yd||i===Qd)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(i===Du)return o.COMPRESSED_RED_RGTC1_EXT;if(i===Kd)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Yd)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Qd)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===ni?r?n.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[i]!==void 0?n[i]:null}return{convert:s}}class u_ extends rr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class dl extends zn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const c_={type:"move"};class rc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new dl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new dl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new re,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new re),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new dl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new re,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new re),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,r){let s=null,i=null,a=null;const o=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const y of e.hand.values()){const p=t.getJointPose(y,r),g=this._getHandJoint(u,y);p!==null&&(g.matrix.fromArray(p.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=p.radius),g.visible=p!==null}const c=u.joints["index-finger-tip"],h=u.joints["thumb-tip"],d=c.position.distanceTo(h.position),f=.02,m=.005;u.inputState.pinching&&d>f+m?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&d<=f-m&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,r),s===null&&i!==null&&(s=i),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(c_)))}return o!==null&&(o.visible=s!==null),l!==null&&(l.visible=i!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const r=new dl;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}class h_ extends mn{constructor(e,t,r,s,i,a,o,l,u,c){if(c=c!==void 0?c:ri,c!==ri&&c!==ca)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");r===void 0&&c===ri&&(r=xs),r===void 0&&c===ca&&(r=ni),super(null,s,i,a,o,l,c,r,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:dn,this.minFilter=l!==void 0?l:dn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class d_ extends ba{constructor(e,t){super();const r=this;let s=null,i=1,a=null,o="local-floor",l=1,u=null,c=null,h=null,d=null,f=null,m=null;const y=t.getContextAttributes();let p=null,g=null;const A=[],x=[],S=new rr;S.layers.enable(1),S.viewport=new pn;const E=new rr;E.layers.enable(2),E.viewport=new pn;const M=[S,E],R=new u_;R.layers.enable(1),R.layers.enable(2);let O=null,C=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let fe=A[J];return fe===void 0&&(fe=new rc,A[J]=fe),fe.getTargetRaySpace()},this.getControllerGrip=function(J){let fe=A[J];return fe===void 0&&(fe=new rc,A[J]=fe),fe.getGripSpace()},this.getHand=function(J){let fe=A[J];return fe===void 0&&(fe=new rc,A[J]=fe),fe.getHandSpace()};function N(J){const fe=x.indexOf(J.inputSource);if(fe===-1)return;const K=A[fe];K!==void 0&&(K.update(J.inputSource,J.frame,u||a),K.dispatchEvent({type:J.type,data:J.inputSource}))}function $(){s.removeEventListener("select",N),s.removeEventListener("selectstart",N),s.removeEventListener("selectend",N),s.removeEventListener("squeeze",N),s.removeEventListener("squeezestart",N),s.removeEventListener("squeezeend",N),s.removeEventListener("end",$),s.removeEventListener("inputsourceschange",q);for(let J=0;J<A.length;J++){const fe=x[J];fe!==null&&(x[J]=null,A[J].disconnect(fe))}O=null,C=null,e.setRenderTarget(p),f=null,d=null,h=null,s=null,g=null,ve.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){i=J,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){o=J,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(J){u=J},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(J){if(s=J,s!==null){if(p=e.getRenderTarget(),s.addEventListener("select",N),s.addEventListener("selectstart",N),s.addEventListener("selectend",N),s.addEventListener("squeeze",N),s.addEventListener("squeezestart",N),s.addEventListener("squeezeend",N),s.addEventListener("end",$),s.addEventListener("inputsourceschange",q),y.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const fe={antialias:s.renderState.layers===void 0?y.antialias:!0,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:i};f=new XRWebGLLayer(s,t,fe),s.updateRenderState({baseLayer:f}),g=new ui(f.framebufferWidth,f.framebufferHeight,{format:wr,type:_s,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let fe=null,K=null,xe=null;y.depth&&(xe=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,fe=y.stencil?ca:ri,K=y.stencil?ni:xs);const Me={colorFormat:t.RGBA8,depthFormat:xe,scaleFactor:i};h=new XRWebGLBinding(s,t),d=h.createProjectionLayer(Me),s.updateRenderState({layers:[d]}),g=new ui(d.textureWidth,d.textureHeight,{format:wr,type:_s,depthTexture:new h_(d.textureWidth,d.textureHeight,K,void 0,void 0,void 0,void 0,void 0,void 0,fe),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0});const De=e.properties.get(g);De.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(l),u=null,a=await s.requestReferenceSpace(o),ve.setContext(s),ve.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function q(J){for(let fe=0;fe<J.removed.length;fe++){const K=J.removed[fe],xe=x.indexOf(K);xe>=0&&(x[xe]=null,A[xe].disconnect(K))}for(let fe=0;fe<J.added.length;fe++){const K=J.added[fe];let xe=x.indexOf(K);if(xe===-1){for(let De=0;De<A.length;De++)if(De>=x.length){x.push(K),xe=De;break}else if(x[De]===null){x[De]=K,xe=De;break}if(xe===-1)break}const Me=A[xe];Me&&Me.connect(K)}}const z=new re,F=new re;function X(J,fe,K){z.setFromMatrixPosition(fe.matrixWorld),F.setFromMatrixPosition(K.matrixWorld);const xe=z.distanceTo(F),Me=fe.projectionMatrix.elements,De=K.projectionMatrix.elements,Ve=Me[14]/(Me[10]-1),Be=Me[14]/(Me[10]+1),mt=(Me[9]+1)/Me[5],Kt=(Me[9]-1)/Me[5],it=(Me[8]-1)/Me[0],te=(De[8]+1)/De[0],Yt=Ve*it,Ye=Ve*te,Ze=xe/(-it+te),tt=Ze*-it;fe.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(tt),J.translateZ(Ze),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert();const wt=Ve+Ze,lt=Be+Ze,Qe=Yt-tt,ft=Ye+(xe-tt),ut=mt*Be/lt*wt,nt=Kt*Be/lt*wt;J.projectionMatrix.makePerspective(Qe,ft,ut,nt,wt,lt),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}function Q(J,fe){fe===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(fe.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(s===null)return;R.near=E.near=S.near=J.near,R.far=E.far=S.far=J.far,(O!==R.near||C!==R.far)&&(s.updateRenderState({depthNear:R.near,depthFar:R.far}),O=R.near,C=R.far);const fe=J.parent,K=R.cameras;Q(R,fe);for(let xe=0;xe<K.length;xe++)Q(K[xe],fe);K.length===2?X(R,S,E):R.projectionMatrix.copy(S.projectionMatrix),Z(J,R,fe)};function Z(J,fe,K){K===null?J.matrix.copy(fe.matrixWorld):(J.matrix.copy(K.matrixWorld),J.matrix.invert(),J.matrix.multiply(fe.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(fe.projectionMatrix),J.projectionMatrixInverse.copy(fe.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=Nc*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return R},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(J){l=J,d!==null&&(d.fixedFoveation=J),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=J)};let ie=null;function de(J,fe){if(c=fe.getViewerPose(u||a),m=fe,c!==null){const K=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let xe=!1;K.length!==R.cameras.length&&(R.cameras.length=0,xe=!0);for(let Me=0;Me<K.length;Me++){const De=K[Me];let Ve=null;if(f!==null)Ve=f.getViewport(De);else{const mt=h.getViewSubImage(d,De);Ve=mt.viewport,Me===0&&(e.setRenderTargetTextures(g,mt.colorTexture,d.ignoreDepthValues?void 0:mt.depthStencilTexture),e.setRenderTarget(g))}let Be=M[Me];Be===void 0&&(Be=new rr,Be.layers.enable(Me),Be.viewport=new pn,M[Me]=Be),Be.matrix.fromArray(De.transform.matrix),Be.matrix.decompose(Be.position,Be.quaternion,Be.scale),Be.projectionMatrix.fromArray(De.projectionMatrix),Be.projectionMatrixInverse.copy(Be.projectionMatrix).invert(),Be.viewport.set(Ve.x,Ve.y,Ve.width,Ve.height),Me===0&&(R.matrix.copy(Be.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale)),xe===!0&&R.cameras.push(Be)}}for(let K=0;K<A.length;K++){const xe=x[K],Me=A[K];xe!==null&&Me!==void 0&&Me.update(xe,fe,u||a)}ie&&ie(J,fe),fe.detectedPlanes&&r.dispatchEvent({type:"planesdetected",data:fe}),m=null}const ve=new Bm;ve.setAnimationLoop(de),this.setAnimationLoop=function(J){ie=J},this.dispose=function(){}}}function f_(n,e){function t(p,g){p.matrixAutoUpdate===!0&&p.updateMatrix(),g.value.copy(p.matrix)}function r(p,g){g.color.getRGB(p.fogColor.value,km(n)),g.isFog?(p.fogNear.value=g.near,p.fogFar.value=g.far):g.isFogExp2&&(p.fogDensity.value=g.density)}function s(p,g,A,x,S){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(p,g):g.isMeshToonMaterial?(i(p,g),h(p,g)):g.isMeshPhongMaterial?(i(p,g),c(p,g)):g.isMeshStandardMaterial?(i(p,g),d(p,g),g.isMeshPhysicalMaterial&&f(p,g,S)):g.isMeshMatcapMaterial?(i(p,g),m(p,g)):g.isMeshDepthMaterial?i(p,g):g.isMeshDistanceMaterial?(i(p,g),y(p,g)):g.isMeshNormalMaterial?i(p,g):g.isLineBasicMaterial?(a(p,g),g.isLineDashedMaterial&&o(p,g)):g.isPointsMaterial?l(p,g,A,x):g.isSpriteMaterial?u(p,g):g.isShadowMaterial?(p.color.value.copy(g.color),p.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(p,g){p.opacity.value=g.opacity,g.color&&p.diffuse.value.copy(g.color),g.emissive&&p.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(p.map.value=g.map,t(g.map,p.mapTransform)),g.alphaMap&&(p.alphaMap.value=g.alphaMap,t(g.alphaMap,p.alphaMapTransform)),g.bumpMap&&(p.bumpMap.value=g.bumpMap,t(g.bumpMap,p.bumpMapTransform),p.bumpScale.value=g.bumpScale,g.side===$n&&(p.bumpScale.value*=-1)),g.normalMap&&(p.normalMap.value=g.normalMap,t(g.normalMap,p.normalMapTransform),p.normalScale.value.copy(g.normalScale),g.side===$n&&p.normalScale.value.negate()),g.displacementMap&&(p.displacementMap.value=g.displacementMap,t(g.displacementMap,p.displacementMapTransform),p.displacementScale.value=g.displacementScale,p.displacementBias.value=g.displacementBias),g.emissiveMap&&(p.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,p.emissiveMapTransform)),g.specularMap&&(p.specularMap.value=g.specularMap,t(g.specularMap,p.specularMapTransform)),g.alphaTest>0&&(p.alphaTest.value=g.alphaTest);const A=e.get(g).envMap;if(A&&(p.envMap.value=A,p.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=g.reflectivity,p.ior.value=g.ior,p.refractionRatio.value=g.refractionRatio),g.lightMap){p.lightMap.value=g.lightMap;const x=n._useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=g.lightMapIntensity*x,t(g.lightMap,p.lightMapTransform)}g.aoMap&&(p.aoMap.value=g.aoMap,p.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,p.aoMapTransform))}function a(p,g){p.diffuse.value.copy(g.color),p.opacity.value=g.opacity,g.map&&(p.map.value=g.map,t(g.map,p.mapTransform))}function o(p,g){p.dashSize.value=g.dashSize,p.totalSize.value=g.dashSize+g.gapSize,p.scale.value=g.scale}function l(p,g,A,x){p.diffuse.value.copy(g.color),p.opacity.value=g.opacity,p.size.value=g.size*A,p.scale.value=x*.5,g.map&&(p.map.value=g.map,t(g.map,p.uvTransform)),g.alphaMap&&(p.alphaMap.value=g.alphaMap,t(g.alphaMap,p.alphaMapTransform)),g.alphaTest>0&&(p.alphaTest.value=g.alphaTest)}function u(p,g){p.diffuse.value.copy(g.color),p.opacity.value=g.opacity,p.rotation.value=g.rotation,g.map&&(p.map.value=g.map,t(g.map,p.mapTransform)),g.alphaMap&&(p.alphaMap.value=g.alphaMap,t(g.alphaMap,p.alphaMapTransform)),g.alphaTest>0&&(p.alphaTest.value=g.alphaTest)}function c(p,g){p.specular.value.copy(g.specular),p.shininess.value=Math.max(g.shininess,1e-4)}function h(p,g){g.gradientMap&&(p.gradientMap.value=g.gradientMap)}function d(p,g){p.metalness.value=g.metalness,g.metalnessMap&&(p.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,p.metalnessMapTransform)),p.roughness.value=g.roughness,g.roughnessMap&&(p.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,p.roughnessMapTransform)),e.get(g).envMap&&(p.envMapIntensity.value=g.envMapIntensity)}function f(p,g,A){p.ior.value=g.ior,g.sheen>0&&(p.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),p.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(p.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,p.sheenColorMapTransform)),g.sheenRoughnessMap&&(p.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,p.sheenRoughnessMapTransform))),g.clearcoat>0&&(p.clearcoat.value=g.clearcoat,p.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(p.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,p.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(p.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===$n&&p.clearcoatNormalScale.value.negate())),g.iridescence>0&&(p.iridescence.value=g.iridescence,p.iridescenceIOR.value=g.iridescenceIOR,p.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(p.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,p.iridescenceMapTransform)),g.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),g.transmission>0&&(p.transmission.value=g.transmission,p.transmissionSamplerMap.value=A.texture,p.transmissionSamplerSize.value.set(A.width,A.height),g.transmissionMap&&(p.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,p.transmissionMapTransform)),p.thickness.value=g.thickness,g.thicknessMap&&(p.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=g.attenuationDistance,p.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(p.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(p.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=g.specularIntensity,p.specularColor.value.copy(g.specularColor),g.specularColorMap&&(p.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,p.specularColorMapTransform)),g.specularIntensityMap&&(p.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,p.specularIntensityMapTransform))}function m(p,g){g.matcap&&(p.matcap.value=g.matcap)}function y(p,g){const A=e.get(g).light;p.referencePosition.value.setFromMatrixPosition(A.matrixWorld),p.nearDistance.value=A.shadow.camera.near,p.farDistance.value=A.shadow.camera.far}return{refreshFogUniforms:r,refreshMaterialUniforms:s}}function p_(n,e,t,r){let s={},i={},a=[];const o=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(A,x){const S=x.program;r.uniformBlockBinding(A,S)}function u(A,x){let S=s[A.id];S===void 0&&(m(A),S=c(A),s[A.id]=S,A.addEventListener("dispose",p));const E=x.program;r.updateUBOMapping(A,E);const M=e.render.frame;i[A.id]!==M&&(d(A),i[A.id]=M)}function c(A){const x=h();A.__bindingPointIndex=x;const S=n.createBuffer(),E=A.__size,M=A.usage;return n.bindBuffer(n.UNIFORM_BUFFER,S),n.bufferData(n.UNIFORM_BUFFER,E,M),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,x,S),S}function h(){for(let A=0;A<o;A++)if(a.indexOf(A)===-1)return a.push(A),A;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(A){const x=s[A.id],S=A.uniforms,E=A.__cache;n.bindBuffer(n.UNIFORM_BUFFER,x);for(let M=0,R=S.length;M<R;M++){const O=S[M];if(f(O,M,E)===!0){const C=O.__offset,N=Array.isArray(O.value)?O.value:[O.value];let $=0;for(let q=0;q<N.length;q++){const z=N[q],F=y(z);typeof z=="number"?(O.__data[0]=z,n.bufferSubData(n.UNIFORM_BUFFER,C+$,O.__data)):z.isMatrix3?(O.__data[0]=z.elements[0],O.__data[1]=z.elements[1],O.__data[2]=z.elements[2],O.__data[3]=z.elements[0],O.__data[4]=z.elements[3],O.__data[5]=z.elements[4],O.__data[6]=z.elements[5],O.__data[7]=z.elements[0],O.__data[8]=z.elements[6],O.__data[9]=z.elements[7],O.__data[10]=z.elements[8],O.__data[11]=z.elements[0]):(z.toArray(O.__data,$),$+=F.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,C,O.__data)}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function f(A,x,S){const E=A.value;if(S[x]===void 0){if(typeof E=="number")S[x]=E;else{const M=Array.isArray(E)?E:[E],R=[];for(let O=0;O<M.length;O++)R.push(M[O].clone());S[x]=R}return!0}else if(typeof E=="number"){if(S[x]!==E)return S[x]=E,!0}else{const M=Array.isArray(S[x])?S[x]:[S[x]],R=Array.isArray(E)?E:[E];for(let O=0;O<M.length;O++){const C=M[O];if(C.equals(R[O])===!1)return C.copy(R[O]),!0}}return!1}function m(A){const x=A.uniforms;let S=0;const E=16;let M=0;for(let R=0,O=x.length;R<O;R++){const C=x[R],N={boundary:0,storage:0},$=Array.isArray(C.value)?C.value:[C.value];for(let q=0,z=$.length;q<z;q++){const F=$[q],X=y(F);N.boundary+=X.boundary,N.storage+=X.storage}if(C.__data=new Float32Array(N.storage/Float32Array.BYTES_PER_ELEMENT),C.__offset=S,R>0){M=S%E;const q=E-M;M!==0&&q-N.boundary<0&&(S+=E-M,C.__offset=S)}S+=N.storage}return M=S%E,M>0&&(S+=E-M),A.__size=S,A.__cache={},this}function y(A){const x={boundary:0,storage:0};return typeof A=="number"?(x.boundary=4,x.storage=4):A.isVector2?(x.boundary=8,x.storage=8):A.isVector3||A.isColor?(x.boundary=16,x.storage=12):A.isVector4?(x.boundary=16,x.storage=16):A.isMatrix3?(x.boundary=48,x.storage=48):A.isMatrix4?(x.boundary=64,x.storage=64):A.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",A),x}function p(A){const x=A.target;x.removeEventListener("dispose",p);const S=a.indexOf(x.__bindingPointIndex);a.splice(S,1),n.deleteBuffer(s[x.id]),delete s[x.id],delete i[x.id]}function g(){for(const A in s)n.deleteBuffer(s[A]);a=[],s={},i={}}return{bind:l,update:u,dispose:g}}class Wm{constructor(e={}){const{canvas:t=ab(),context:r=null,depth:s=!0,stencil:i=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let d;r!==null?d=r.getContextAttributes().alpha:d=a;const f=new Uint32Array(4),m=new Int32Array(4);let y=null,p=null;const g=[],A=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=zt,this._useLegacyLights=!1,this.toneMapping=Ss,this.toneMappingExposure=1;const x=this;let S=!1,E=0,M=0,R=null,O=-1,C=null;const N=new pn,$=new pn;let q=null;const z=new Ct(0);let F=0,X=t.width,Q=t.height,Z=1,ie=null,de=null;const ve=new pn(0,0,X,Q),J=new pn(0,0,X,Q);let fe=!1;const K=new Um;let xe=!1,Me=!1,De=null;const Ve=new ln,Be=new Dt,mt=new re,Kt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function it(){return R===null?Z:1}let te=r;function Yt(k,j){for(let ce=0;ce<k.length;ce++){const ee=k[ce],ne=t.getContext(ee,j);if(ne!==null)return ne}return null}try{const k={alpha:!0,depth:s,stencil:i,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Eh}`),t.addEventListener("webglcontextlost",Le,!1),t.addEventListener("webglcontextrestored",oe,!1),t.addEventListener("webglcontextcreationerror",Ee,!1),te===null){const j=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&j.shift(),te=Yt(j,k),te===null)throw Yt(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&te instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),te.getShaderPrecisionFormat===void 0&&(te.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(k){throw console.error("THREE.WebGLRenderer: "+k.message),k}let Ye,Ze,tt,wt,lt,Qe,ft,ut,nt,B,D,se,Ae,ge,Se,We,Re,le,je,Ge,Xe,$e,Oe,ct;function dt(){Ye=new _A(te),Ze=new yA(te,Ye,e),Ye.init(Ze),$e=new l_(te,Ye,Ze),tt=new i_(te,Ye,Ze),wt=new CA(te),lt=new HS,Qe=new a_(te,Ye,tt,lt,Ze,$e,wt),ft=new xA(x),ut=new SA(x),nt=new Fb(te,Ze),Oe=new mA(te,Ye,nt,Ze),B=new EA(te,nt,wt,Oe),D=new NA(te,B,nt,wt),je=new IA(te,Ze,Qe),We=new vA(lt),se=new WS(x,ft,ut,Ye,Ze,Oe,We),Ae=new f_(x,lt),ge=new qS,Se=new JS(Ye,Ze),le=new pA(x,ft,ut,tt,D,d,l),Re=new s_(x,D,Ze),ct=new p_(te,wt,Ze,tt),Ge=new gA(te,Ye,wt,Ze),Xe=new TA(te,Ye,wt,Ze),wt.programs=se.programs,x.capabilities=Ze,x.extensions=Ye,x.properties=lt,x.renderLists=ge,x.shadowMap=Re,x.state=tt,x.info=wt}dt();const H=new d_(x,te);this.xr=H,this.getContext=function(){return te},this.getContextAttributes=function(){return te.getContextAttributes()},this.forceContextLoss=function(){const k=Ye.get("WEBGL_lose_context");k&&k.loseContext()},this.forceContextRestore=function(){const k=Ye.get("WEBGL_lose_context");k&&k.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(k){k!==void 0&&(Z=k,this.setSize(X,Q,!1))},this.getSize=function(k){return k.set(X,Q)},this.setSize=function(k,j,ce=!0){if(H.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}X=k,Q=j,t.width=Math.floor(k*Z),t.height=Math.floor(j*Z),ce===!0&&(t.style.width=k+"px",t.style.height=j+"px"),this.setViewport(0,0,k,j)},this.getDrawingBufferSize=function(k){return k.set(X*Z,Q*Z).floor()},this.setDrawingBufferSize=function(k,j,ce){X=k,Q=j,Z=ce,t.width=Math.floor(k*ce),t.height=Math.floor(j*ce),this.setViewport(0,0,k,j)},this.getCurrentViewport=function(k){return k.copy(N)},this.getViewport=function(k){return k.copy(ve)},this.setViewport=function(k,j,ce,ee){k.isVector4?ve.set(k.x,k.y,k.z,k.w):ve.set(k,j,ce,ee),tt.viewport(N.copy(ve).multiplyScalar(Z).floor())},this.getScissor=function(k){return k.copy(J)},this.setScissor=function(k,j,ce,ee){k.isVector4?J.set(k.x,k.y,k.z,k.w):J.set(k,j,ce,ee),tt.scissor($.copy(J).multiplyScalar(Z).floor())},this.getScissorTest=function(){return fe},this.setScissorTest=function(k){tt.setScissorTest(fe=k)},this.setOpaqueSort=function(k){ie=k},this.setTransparentSort=function(k){de=k},this.getClearColor=function(k){return k.copy(le.getClearColor())},this.setClearColor=function(){le.setClearColor.apply(le,arguments)},this.getClearAlpha=function(){return le.getClearAlpha()},this.setClearAlpha=function(){le.setClearAlpha.apply(le,arguments)},this.clear=function(k=!0,j=!0,ce=!0){let ee=0;if(k){let ne=!1;if(R!==null){const v=R.texture.format;ne=v===Sm||v===Am||v===wm}if(ne){const v=R.texture.type,b=v===_s||v===xs||v===Th||v===ni||v===vm||v===xm,_=le.getClearColor(),T=le.getClearAlpha(),P=_.r,U=_.g,G=_.b;b?(f[0]=P,f[1]=U,f[2]=G,f[3]=T,te.clearBufferuiv(te.COLOR,0,f)):(m[0]=P,m[1]=U,m[2]=G,m[3]=T,te.clearBufferiv(te.COLOR,0,m))}else ee|=te.COLOR_BUFFER_BIT}j&&(ee|=te.DEPTH_BUFFER_BIT),ce&&(ee|=te.STENCIL_BUFFER_BIT),te.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Le,!1),t.removeEventListener("webglcontextrestored",oe,!1),t.removeEventListener("webglcontextcreationerror",Ee,!1),ge.dispose(),Se.dispose(),lt.dispose(),ft.dispose(),ut.dispose(),D.dispose(),Oe.dispose(),ct.dispose(),se.dispose(),H.dispose(),H.removeEventListener("sessionstart",It),H.removeEventListener("sessionend",Vt),De&&(De.dispose(),De=null),cn.stop()};function Le(k){k.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function oe(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const k=wt.autoReset,j=Re.enabled,ce=Re.autoUpdate,ee=Re.needsUpdate,ne=Re.type;dt(),wt.autoReset=k,Re.enabled=j,Re.autoUpdate=ce,Re.needsUpdate=ee,Re.type=ne}function Ee(k){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",k.statusMessage)}function Fe(k){const j=k.target;j.removeEventListener("dispose",Fe),xt(j)}function xt(k){At(k),lt.remove(k)}function At(k){const j=lt.get(k).programs;j!==void 0&&(j.forEach(function(ce){se.releaseProgram(ce)}),k.isShaderMaterial&&se.releaseShaderCache(k))}this.renderBufferDirect=function(k,j,ce,ee,ne,v){j===null&&(j=Kt);const b=ne.isMesh&&ne.matrixWorld.determinant()<0,_=Eu(k,j,ce,ee,ne);tt.setMaterial(ee,b);let T=ce.index,P=1;if(ee.wireframe===!0){if(T=B.getWireframeAttribute(ce),T===void 0)return;P=2}const U=ce.drawRange,G=ce.attributes.position;let he=U.start*P,ue=(U.start+U.count)*P;v!==null&&(he=Math.max(he,v.start*P),ue=Math.min(ue,(v.start+v.count)*P)),T!==null?(he=Math.max(he,0),ue=Math.min(ue,T.count)):G!=null&&(he=Math.max(he,0),ue=Math.min(ue,G.count));const Y=ue-he;if(Y<0||Y===1/0)return;Oe.setup(ne,ee,_,ce,T);let ae,ye=Ge;if(T!==null&&(ae=nt.get(T),ye=Xe,ye.setIndex(ae)),ne.isMesh)ee.wireframe===!0?(tt.setLineWidth(ee.wireframeLinewidth*it()),ye.setMode(te.LINES)):ye.setMode(te.TRIANGLES);else if(ne.isLine){let be=ee.linewidth;be===void 0&&(be=1),tt.setLineWidth(be*it()),ne.isLineSegments?ye.setMode(te.LINES):ne.isLineLoop?ye.setMode(te.LINE_LOOP):ye.setMode(te.LINE_STRIP)}else ne.isPoints?ye.setMode(te.POINTS):ne.isSprite&&ye.setMode(te.TRIANGLES);if(ne.isInstancedMesh)ye.renderInstances(he,Y,ne.count);else if(ce.isInstancedBufferGeometry){const be=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,He=Math.min(ce.instanceCount,be);ye.renderInstances(he,Y,He)}else ye.render(he,Y)},this.compile=function(k,j){function ce(ee,ne,v){ee.transparent===!0&&ee.side===Pr&&ee.forceSinglePass===!1?(ee.side=$n,ee.needsUpdate=!0,Mi(ee,ne,v),ee.side=Rs,ee.needsUpdate=!0,Mi(ee,ne,v),ee.side=Pr):Mi(ee,ne,v)}p=Se.get(k),p.init(),A.push(p),k.traverseVisible(function(ee){ee.isLight&&ee.layers.test(j.layers)&&(p.pushLight(ee),ee.castShadow&&p.pushShadow(ee))}),p.setupLights(x._useLegacyLights),k.traverse(function(ee){const ne=ee.material;if(ne)if(Array.isArray(ne))for(let v=0;v<ne.length;v++){const b=ne[v];ce(b,k,ee)}else ce(ne,k,ee)}),A.pop(),p=null};let Wt=null;function dr(k){Wt&&Wt(k)}function It(){cn.stop()}function Vt(){cn.start()}const cn=new Bm;cn.setAnimationLoop(dr),typeof self<"u"&&cn.setContext(self),this.setAnimationLoop=function(k){Wt=k,H.setAnimationLoop(k),k===null?cn.stop():cn.start()},H.addEventListener("sessionstart",It),H.addEventListener("sessionend",Vt),this.render=function(k,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),j.parent===null&&j.matrixWorldAutoUpdate===!0&&j.updateMatrixWorld(),H.enabled===!0&&H.isPresenting===!0&&(H.cameraAutoUpdate===!0&&H.updateCamera(j),j=H.getCamera()),k.isScene===!0&&k.onBeforeRender(x,k,j,R),p=Se.get(k,A.length),p.init(),A.push(p),Ve.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),K.setFromProjectionMatrix(Ve),Me=this.localClippingEnabled,xe=We.init(this.clippingPlanes,Me),y=ge.get(k,g.length),y.init(),g.push(y),Vo(k,j,0,x.sortObjects),y.finish(),x.sortObjects===!0&&y.sort(ie,de),this.info.render.frame++,xe===!0&&We.beginShadows();const ce=p.state.shadowsArray;if(Re.render(ce,k,j),xe===!0&&We.endShadows(),this.info.autoReset===!0&&this.info.reset(),le.render(y,k),p.setupLights(x._useLegacyLights),j.isArrayCamera){const ee=j.cameras;for(let ne=0,v=ee.length;ne<v;ne++){const b=ee[ne];Go(y,k,b,b.viewport)}}else Go(y,k,j);R!==null&&(Qe.updateMultisampleRenderTarget(R),Qe.updateRenderTargetMipmap(R)),k.isScene===!0&&k.onAfterRender(x,k,j),Oe.resetDefaultState(),O=-1,C=null,A.pop(),A.length>0?p=A[A.length-1]:p=null,g.pop(),g.length>0?y=g[g.length-1]:y=null};function Vo(k,j,ce,ee){if(k.visible===!1)return;if(k.layers.test(j.layers)){if(k.isGroup)ce=k.renderOrder;else if(k.isLOD)k.autoUpdate===!0&&k.update(j);else if(k.isLight)p.pushLight(k),k.castShadow&&p.pushShadow(k);else if(k.isSprite){if(!k.frustumCulled||K.intersectsSprite(k)){ee&&mt.setFromMatrixPosition(k.matrixWorld).applyMatrix4(Ve);const b=D.update(k),_=k.material;_.visible&&y.push(k,b,_,ce,mt.z,null)}}else if((k.isMesh||k.isLine||k.isPoints)&&(!k.frustumCulled||K.intersectsObject(k))){const b=D.update(k),_=k.material;if(ee&&(k.boundingSphere!==void 0?(k.boundingSphere===null&&k.computeBoundingSphere(),mt.copy(k.boundingSphere.center)):(b.boundingSphere===null&&b.computeBoundingSphere(),mt.copy(b.boundingSphere.center)),mt.applyMatrix4(k.matrixWorld).applyMatrix4(Ve)),Array.isArray(_)){const T=b.groups;for(let P=0,U=T.length;P<U;P++){const G=T[P],he=_[G.materialIndex];he&&he.visible&&y.push(k,b,he,ce,mt.z,G)}}else _.visible&&y.push(k,b,_,ce,mt.z,null)}}const v=k.children;for(let b=0,_=v.length;b<_;b++)Vo(v[b],j,ce,ee)}function Go(k,j,ce,ee){const ne=k.opaque,v=k.transmissive,b=k.transparent;p.setupLightsView(ce),xe===!0&&We.setGlobalState(x.clippingPlanes,ce),v.length>0&&_u(ne,v,j,ce),ee&&tt.viewport(N.copy(ee)),ne.length>0&&Ci(ne,j,ce),v.length>0&&Ci(v,j,ce),b.length>0&&Ci(b,j,ce),tt.buffers.depth.setTest(!0),tt.buffers.depth.setMask(!0),tt.buffers.color.setMask(!0),tt.setPolygonOffset(!1)}function _u(k,j,ce,ee){const ne=Ze.isWebGL2;De===null&&(De=new ui(1,1,{generateMipmaps:!0,type:Ye.has("EXT_color_buffer_half_float")?co:_s,minFilter:uo,samples:ne?4:0})),x.getDrawingBufferSize(Be),ne?De.setSize(Be.x,Be.y):De.setSize(Pc(Be.x),Pc(Be.y));const v=x.getRenderTarget();x.setRenderTarget(De),x.getClearColor(z),F=x.getClearAlpha(),F<1&&x.setClearColor(16777215,.5),x.clear();const b=x.toneMapping;x.toneMapping=Ss,Ci(k,ce,ee),Qe.updateMultisampleRenderTarget(De),Qe.updateRenderTargetMipmap(De);let _=!1;for(let T=0,P=j.length;T<P;T++){const U=j[T],G=U.object,he=U.geometry,ue=U.material,Y=U.group;if(ue.side===Pr&&G.layers.test(ee.layers)){const ae=ue.side;ue.side=$n,ue.needsUpdate=!0,Wo(G,ce,ee,he,ue,Y),ue.side=ae,ue.needsUpdate=!0,_=!0}}_===!0&&(Qe.updateMultisampleRenderTarget(De),Qe.updateRenderTargetMipmap(De)),x.setRenderTarget(v),x.setClearColor(z,F),x.toneMapping=b}function Ci(k,j,ce){const ee=j.isScene===!0?j.overrideMaterial:null;for(let ne=0,v=k.length;ne<v;ne++){const b=k[ne],_=b.object,T=b.geometry,P=ee===null?b.material:ee,U=b.group;_.layers.test(ce.layers)&&Wo(_,j,ce,T,P,U)}}function Wo(k,j,ce,ee,ne,v){k.onBeforeRender(x,j,ce,ee,ne,v),k.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,k.matrixWorld),k.normalMatrix.getNormalMatrix(k.modelViewMatrix),ne.onBeforeRender(x,j,ce,ee,k,v),ne.transparent===!0&&ne.side===Pr&&ne.forceSinglePass===!1?(ne.side=$n,ne.needsUpdate=!0,x.renderBufferDirect(ce,j,ee,ne,k,v),ne.side=Rs,ne.needsUpdate=!0,x.renderBufferDirect(ce,j,ee,ne,k,v),ne.side=Pr):x.renderBufferDirect(ce,j,ee,ne,k,v),k.onAfterRender(x,j,ce,ee,ne,v)}function Mi(k,j,ce){j.isScene!==!0&&(j=Kt);const ee=lt.get(k),ne=p.state.lights,v=p.state.shadowsArray,b=ne.state.version,_=se.getParameters(k,ne.state,v,j,ce),T=se.getProgramCacheKey(_);let P=ee.programs;ee.environment=k.isMeshStandardMaterial?j.environment:null,ee.fog=j.fog,ee.envMap=(k.isMeshStandardMaterial?ut:ft).get(k.envMap||ee.environment),P===void 0&&(k.addEventListener("dispose",Fe),P=new Map,ee.programs=P);let U=P.get(T);if(U!==void 0){if(ee.currentProgram===U&&ee.lightsStateVersion===b)return Ho(k,_),U}else _.uniforms=se.getUniforms(k),k.onBuild(ce,_,x),k.onBeforeCompile(_,x),U=se.acquireProgram(_,T),P.set(T,U),ee.uniforms=_.uniforms;const G=ee.uniforms;(!k.isShaderMaterial&&!k.isRawShaderMaterial||k.clipping===!0)&&(G.clippingPlanes=We.uniform),Ho(k,_),ee.needsLights=Cu(k),ee.lightsStateVersion=b,ee.needsLights&&(G.ambientLightColor.value=ne.state.ambient,G.lightProbe.value=ne.state.probe,G.directionalLights.value=ne.state.directional,G.directionalLightShadows.value=ne.state.directionalShadow,G.spotLights.value=ne.state.spot,G.spotLightShadows.value=ne.state.spotShadow,G.rectAreaLights.value=ne.state.rectArea,G.ltc_1.value=ne.state.rectAreaLTC1,G.ltc_2.value=ne.state.rectAreaLTC2,G.pointLights.value=ne.state.point,G.pointLightShadows.value=ne.state.pointShadow,G.hemisphereLights.value=ne.state.hemi,G.directionalShadowMap.value=ne.state.directionalShadowMap,G.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,G.spotShadowMap.value=ne.state.spotShadowMap,G.spotLightMatrix.value=ne.state.spotLightMatrix,G.spotLightMap.value=ne.state.spotLightMap,G.pointShadowMap.value=ne.state.pointShadowMap,G.pointShadowMatrix.value=ne.state.pointShadowMatrix);const he=U.getUniforms(),ue=bl.seqWithValue(he.seq,G);return ee.currentProgram=U,ee.uniformsList=ue,U}function Ho(k,j){const ce=lt.get(k);ce.outputColorSpace=j.outputColorSpace,ce.instancing=j.instancing,ce.instancingColor=j.instancingColor,ce.skinning=j.skinning,ce.morphTargets=j.morphTargets,ce.morphNormals=j.morphNormals,ce.morphColors=j.morphColors,ce.morphTargetsCount=j.morphTargetsCount,ce.numClippingPlanes=j.numClippingPlanes,ce.numIntersection=j.numClipIntersection,ce.vertexAlphas=j.vertexAlphas,ce.vertexTangents=j.vertexTangents,ce.toneMapping=j.toneMapping}function Eu(k,j,ce,ee,ne){j.isScene!==!0&&(j=Kt),Qe.resetTextureUnits();const v=j.fog,b=ee.isMeshStandardMaterial?j.environment:null,_=R===null?x.outputColorSpace:R.isXRRenderTarget===!0?R.texture.colorSpace:Ur,T=(ee.isMeshStandardMaterial?ut:ft).get(ee.envMap||b),P=ee.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,U=!!ce.attributes.tangent&&(!!ee.normalMap||ee.anisotropy>0),G=!!ce.morphAttributes.position,he=!!ce.morphAttributes.normal,ue=!!ce.morphAttributes.color;let Y=Ss;ee.toneMapped&&(R===null||R.isXRRenderTarget===!0)&&(Y=x.toneMapping);const ae=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,ye=ae!==void 0?ae.length:0,be=lt.get(ee),He=p.state.lights;if(xe===!0&&(Me===!0||k!==C)){const St=k===C&&ee.id===O;We.setState(ee,k,St)}let Ue=!1;ee.version===be.__version?(be.needsLights&&be.lightsStateVersion!==He.state.version||be.outputColorSpace!==_||ne.isInstancedMesh&&be.instancing===!1||!ne.isInstancedMesh&&be.instancing===!0||ne.isSkinnedMesh&&be.skinning===!1||!ne.isSkinnedMesh&&be.skinning===!0||ne.isInstancedMesh&&be.instancingColor===!0&&ne.instanceColor===null||ne.isInstancedMesh&&be.instancingColor===!1&&ne.instanceColor!==null||be.envMap!==T||ee.fog===!0&&be.fog!==v||be.numClippingPlanes!==void 0&&(be.numClippingPlanes!==We.numPlanes||be.numIntersection!==We.numIntersection)||be.vertexAlphas!==P||be.vertexTangents!==U||be.morphTargets!==G||be.morphNormals!==he||be.morphColors!==ue||be.toneMapping!==Y||Ze.isWebGL2===!0&&be.morphTargetsCount!==ye)&&(Ue=!0):(Ue=!0,be.__version=ee.version);let st=be.currentProgram;Ue===!0&&(st=Mi(ee,j,ne));let rt=!1,Je=!1,Et=!1;const gt=st.getUniforms(),Lt=be.uniforms;if(tt.useProgram(st.program)&&(rt=!0,Je=!0,Et=!0),ee.id!==O&&(O=ee.id,Je=!0),rt||C!==k){gt.setValue(te,"projectionMatrix",k.projectionMatrix),gt.setValue(te,"viewMatrix",k.matrixWorldInverse);const St=gt.map.cameraPosition;St!==void 0&&St.setValue(te,mt.setFromMatrixPosition(k.matrixWorld)),Ze.logarithmicDepthBuffer&&gt.setValue(te,"logDepthBufFC",2/(Math.log(k.far+1)/Math.LN2)),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&gt.setValue(te,"isOrthographic",k.isOrthographicCamera===!0),C!==k&&(C=k,Je=!0,Et=!0)}if(ne.isSkinnedMesh){gt.setOptional(te,ne,"bindMatrix"),gt.setOptional(te,ne,"bindMatrixInverse");const St=ne.skeleton;St&&(Ze.floatVertexTextures?(St.boneTexture===null&&St.computeBoneTexture(),gt.setValue(te,"boneTexture",St.boneTexture,Qe),gt.setValue(te,"boneTextureSize",St.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const kt=ce.morphAttributes;if((kt.position!==void 0||kt.normal!==void 0||kt.color!==void 0&&Ze.isWebGL2===!0)&&je.update(ne,ce,st),(Je||be.receiveShadow!==ne.receiveShadow)&&(be.receiveShadow=ne.receiveShadow,gt.setValue(te,"receiveShadow",ne.receiveShadow)),ee.isMeshGouraudMaterial&&ee.envMap!==null&&(Lt.envMap.value=T,Lt.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1),Je&&(gt.setValue(te,"toneMappingExposure",x.toneMappingExposure),be.needsLights&&Tu(Lt,Et),v&&ee.fog===!0&&Ae.refreshFogUniforms(Lt,v),Ae.refreshMaterialUniforms(Lt,ee,Z,Q,De),bl.upload(te,be.uniformsList,Lt,Qe)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(bl.upload(te,be.uniformsList,Lt,Qe),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&gt.setValue(te,"center",ne.center),gt.setValue(te,"modelViewMatrix",ne.modelViewMatrix),gt.setValue(te,"normalMatrix",ne.normalMatrix),gt.setValue(te,"modelMatrix",ne.matrixWorld),ee.isShaderMaterial||ee.isRawShaderMaterial){const St=ee.uniformsGroups;for(let hn=0,_n=St.length;hn<_n;hn++)if(Ze.isWebGL2){const yn=St[hn];ct.update(yn,st),ct.bind(yn,st)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return st}function Tu(k,j){k.ambientLightColor.needsUpdate=j,k.lightProbe.needsUpdate=j,k.directionalLights.needsUpdate=j,k.directionalLightShadows.needsUpdate=j,k.pointLights.needsUpdate=j,k.pointLightShadows.needsUpdate=j,k.spotLights.needsUpdate=j,k.spotLightShadows.needsUpdate=j,k.rectAreaLights.needsUpdate=j,k.hemisphereLights.needsUpdate=j}function Cu(k){return k.isMeshLambertMaterial||k.isMeshToonMaterial||k.isMeshPhongMaterial||k.isMeshStandardMaterial||k.isShadowMaterial||k.isShaderMaterial&&k.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return R},this.setRenderTargetTextures=function(k,j,ce){lt.get(k.texture).__webglTexture=j,lt.get(k.depthTexture).__webglTexture=ce;const ee=lt.get(k);ee.__hasExternalTextures=!0,ee.__hasExternalTextures&&(ee.__autoAllocateDepthBuffer=ce===void 0,ee.__autoAllocateDepthBuffer||Ye.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ee.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(k,j){const ce=lt.get(k);ce.__webglFramebuffer=j,ce.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(k,j=0,ce=0){R=k,E=j,M=ce;let ee=!0,ne=null,v=!1,b=!1;if(k){const T=lt.get(k);T.__useDefaultFramebuffer!==void 0?(tt.bindFramebuffer(te.FRAMEBUFFER,null),ee=!1):T.__webglFramebuffer===void 0?Qe.setupRenderTarget(k):T.__hasExternalTextures&&Qe.rebindTextures(k,lt.get(k.texture).__webglTexture,lt.get(k.depthTexture).__webglTexture);const P=k.texture;(P.isData3DTexture||P.isDataArrayTexture||P.isCompressedArrayTexture)&&(b=!0);const U=lt.get(k).__webglFramebuffer;k.isWebGLCubeRenderTarget?(Array.isArray(U[j])?ne=U[j][ce]:ne=U[j],v=!0):Ze.isWebGL2&&k.samples>0&&Qe.useMultisampledRTT(k)===!1?ne=lt.get(k).__webglMultisampledFramebuffer:Array.isArray(U)?ne=U[ce]:ne=U,N.copy(k.viewport),$.copy(k.scissor),q=k.scissorTest}else N.copy(ve).multiplyScalar(Z).floor(),$.copy(J).multiplyScalar(Z).floor(),q=fe;if(tt.bindFramebuffer(te.FRAMEBUFFER,ne)&&Ze.drawBuffers&&ee&&tt.drawBuffers(k,ne),tt.viewport(N),tt.scissor($),tt.setScissorTest(q),v){const T=lt.get(k.texture);te.framebufferTexture2D(te.FRAMEBUFFER,te.COLOR_ATTACHMENT0,te.TEXTURE_CUBE_MAP_POSITIVE_X+j,T.__webglTexture,ce)}else if(b){const T=lt.get(k.texture),P=j||0;te.framebufferTextureLayer(te.FRAMEBUFFER,te.COLOR_ATTACHMENT0,T.__webglTexture,ce||0,P)}O=-1},this.readRenderTargetPixels=function(k,j,ce,ee,ne,v,b){if(!(k&&k.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let _=lt.get(k).__webglFramebuffer;if(k.isWebGLCubeRenderTarget&&b!==void 0&&(_=_[b]),_){tt.bindFramebuffer(te.FRAMEBUFFER,_);try{const T=k.texture,P=T.format,U=T.type;if(P!==wr&&$e.convert(P)!==te.getParameter(te.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const G=U===co&&(Ye.has("EXT_color_buffer_half_float")||Ze.isWebGL2&&Ye.has("EXT_color_buffer_float"));if(U!==_s&&$e.convert(U)!==te.getParameter(te.IMPLEMENTATION_COLOR_READ_TYPE)&&!(U===Jr&&(Ze.isWebGL2||Ye.has("OES_texture_float")||Ye.has("WEBGL_color_buffer_float")))&&!G){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j>=0&&j<=k.width-ee&&ce>=0&&ce<=k.height-ne&&te.readPixels(j,ce,ee,ne,$e.convert(P),$e.convert(U),v)}finally{const T=R!==null?lt.get(R).__webglFramebuffer:null;tt.bindFramebuffer(te.FRAMEBUFFER,T)}}},this.copyFramebufferToTexture=function(k,j,ce=0){const ee=Math.pow(2,-ce),ne=Math.floor(j.image.width*ee),v=Math.floor(j.image.height*ee);Qe.setTexture2D(j,0),te.copyTexSubImage2D(te.TEXTURE_2D,ce,0,0,k.x,k.y,ne,v),tt.unbindTexture()},this.copyTextureToTexture=function(k,j,ce,ee=0){const ne=j.image.width,v=j.image.height,b=$e.convert(ce.format),_=$e.convert(ce.type);Qe.setTexture2D(ce,0),te.pixelStorei(te.UNPACK_FLIP_Y_WEBGL,ce.flipY),te.pixelStorei(te.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ce.premultiplyAlpha),te.pixelStorei(te.UNPACK_ALIGNMENT,ce.unpackAlignment),j.isDataTexture?te.texSubImage2D(te.TEXTURE_2D,ee,k.x,k.y,ne,v,b,_,j.image.data):j.isCompressedTexture?te.compressedTexSubImage2D(te.TEXTURE_2D,ee,k.x,k.y,j.mipmaps[0].width,j.mipmaps[0].height,b,j.mipmaps[0].data):te.texSubImage2D(te.TEXTURE_2D,ee,k.x,k.y,b,_,j.image),ee===0&&ce.generateMipmaps&&te.generateMipmap(te.TEXTURE_2D),tt.unbindTexture()},this.copyTextureToTexture3D=function(k,j,ce,ee,ne=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const v=k.max.x-k.min.x+1,b=k.max.y-k.min.y+1,_=k.max.z-k.min.z+1,T=$e.convert(ee.format),P=$e.convert(ee.type);let U;if(ee.isData3DTexture)Qe.setTexture3D(ee,0),U=te.TEXTURE_3D;else if(ee.isDataArrayTexture)Qe.setTexture2DArray(ee,0),U=te.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}te.pixelStorei(te.UNPACK_FLIP_Y_WEBGL,ee.flipY),te.pixelStorei(te.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),te.pixelStorei(te.UNPACK_ALIGNMENT,ee.unpackAlignment);const G=te.getParameter(te.UNPACK_ROW_LENGTH),he=te.getParameter(te.UNPACK_IMAGE_HEIGHT),ue=te.getParameter(te.UNPACK_SKIP_PIXELS),Y=te.getParameter(te.UNPACK_SKIP_ROWS),ae=te.getParameter(te.UNPACK_SKIP_IMAGES),ye=ce.isCompressedTexture?ce.mipmaps[0]:ce.image;te.pixelStorei(te.UNPACK_ROW_LENGTH,ye.width),te.pixelStorei(te.UNPACK_IMAGE_HEIGHT,ye.height),te.pixelStorei(te.UNPACK_SKIP_PIXELS,k.min.x),te.pixelStorei(te.UNPACK_SKIP_ROWS,k.min.y),te.pixelStorei(te.UNPACK_SKIP_IMAGES,k.min.z),ce.isDataTexture||ce.isData3DTexture?te.texSubImage3D(U,ne,j.x,j.y,j.z,v,b,_,T,P,ye.data):ce.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),te.compressedTexSubImage3D(U,ne,j.x,j.y,j.z,v,b,_,T,ye.data)):te.texSubImage3D(U,ne,j.x,j.y,j.z,v,b,_,T,P,ye),te.pixelStorei(te.UNPACK_ROW_LENGTH,G),te.pixelStorei(te.UNPACK_IMAGE_HEIGHT,he),te.pixelStorei(te.UNPACK_SKIP_PIXELS,ue),te.pixelStorei(te.UNPACK_SKIP_ROWS,Y),te.pixelStorei(te.UNPACK_SKIP_IMAGES,ae),ne===0&&ee.generateMipmaps&&te.generateMipmap(U),tt.unbindTexture()},this.initTexture=function(k){k.isCubeTexture?Qe.setTextureCube(k,0):k.isData3DTexture?Qe.setTexture3D(k,0):k.isDataArrayTexture||k.isCompressedArrayTexture?Qe.setTexture2DArray(k,0):Qe.setTexture2D(k,0),tt.unbindTexture()},this.resetState=function(){E=0,M=0,R=null,tt.reset(),Oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return es}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===zt?si:_m}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===si?zt:Ur}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class m_ extends Wm{}m_.prototype.isWebGL1Renderer=!0;class g_ extends zn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class y_ extends mn{constructor(e=null,t=1,r=1,s,i,a,o,l,u=dn,c=dn,h,d){super(null,a,o,l,u,c,s,i,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:r},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Hm extends Io{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ct(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Uf=new re,Bf=new re,$f=new ln,sc=new Rm,fl=new tu;class v_ extends zn{constructor(e=new os,t=new Hm){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,r=[0];for(let s=1,i=t.count;s<i;s++)Uf.fromBufferAttribute(t,s-1),Bf.fromBufferAttribute(t,s),r[s]=r[s-1],r[s]+=Uf.distanceTo(Bf);e.setAttribute("lineDistance",new Ar(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const r=this.geometry,s=this.matrixWorld,i=e.params.Line.threshold,a=r.drawRange;if(r.boundingSphere===null&&r.computeBoundingSphere(),fl.copy(r.boundingSphere),fl.applyMatrix4(s),fl.radius+=i,e.ray.intersectsSphere(fl)===!1)return;$f.copy(s).invert(),sc.copy(e.ray).applyMatrix4($f);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,u=new re,c=new re,h=new re,d=new re,f=this.isLineSegments?2:1,m=r.index,p=r.attributes.position;if(m!==null){const g=Math.max(0,a.start),A=Math.min(m.count,a.start+a.count);for(let x=g,S=A-1;x<S;x+=f){const E=m.getX(x),M=m.getX(x+1);if(u.fromBufferAttribute(p,E),c.fromBufferAttribute(p,M),sc.distanceSqToSegment(u,c,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(d);O<e.near||O>e.far||t.push({distance:O,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,a.start),A=Math.min(p.count,a.start+a.count);for(let x=g,S=A-1;x<S;x+=f){if(u.fromBufferAttribute(p,x),c.fromBufferAttribute(p,x+1),sc.distanceSqToSegment(u,c,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const s=t[r[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=s.length;i<a;i++){const o=s[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=i}}}}}const zf=new re,Vf=new re;class x_ extends v_{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,r=[];for(let s=0,i=t.count;s<i;s+=2)zf.fromBufferAttribute(t,s),Vf.fromBufferAttribute(t,s+1),r[s]=s===0?0:r[s-1],r[s+1]=r[s]+zf.distanceTo(Vf);e.setAttribute("lineDistance",new Ar(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class b_ extends mn{constructor(e,t,r,s,i,a,o,l,u){super(e,t,r,s,i,a,o,l,u),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:On,this.magFilter=i!==void 0?i:On,this.generateMipmaps=!1;const c=this;function h(){c.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class w_ extends x_{constructor(e=10,t=10,r=4473924,s=8947848){r=new Ct(r),s=new Ct(s);const i=t/2,a=e/t,o=e/2,l=[],u=[];for(let d=0,f=0,m=-o;d<=t;d++,m+=a){l.push(-o,0,m,o,0,m),l.push(m,0,-o,m,0,o);const y=d===i?r:s;y.toArray(u,f),f+=3,y.toArray(u,f),f+=3,y.toArray(u,f),f+=3,y.toArray(u,f),f+=3}const c=new os;c.setAttribute("position",new Ar(l,3)),c.setAttribute("color",new Ar(u,3));const h=new Hm({vertexColors:!0,toneMapped:!1});super(c,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Eh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Eh);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=1e-7,S_=1e-4;class __{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Xm{refCount(e){return kn("refCount")}incRef(e){return kn("incRef")}timerAvailable(){return!0}time(e){return kn("time")}read(e){return kn("read")}readSync(e){return kn("readSync")}readToGPU(e,t){return kn("readToGPU")}numDataIds(){return kn("numDataIds")}disposeData(e,t){return kn("disposeData")}write(e,t,r){return kn("write")}move(e,t,r,s,i){return kn("move")}createTensorFromGPUData(e,t,r){return kn("createTensorFromGPUData")}memory(){return kn("memory")}floatPrecision(){return kn("floatPrecision")}epsilon(){return this.floatPrecision()===32?A_:S_}dispose(){return kn("dispose")}}function kn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function E_(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function L(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Yn(n,e,t=""){L(Nn(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Aa(n){L(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Te(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Gf(n){return n.length===0}function T_(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Nn(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function ho(n){return n%1===0}function wl(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function C_(n,e){let t=1,r=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function cr(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),L(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),L(n.every(r=>ho(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function M_(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||s?null:cr(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(i!=null){if(i[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(i[a]==null||i[a]>o)&&n[o]===1&&(t.push(n[o]),r.push(o)),i[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),r.push(o))}return{newShape:t,keptDims:r}}function Ns(n,e){return tn(n,e)}function tn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function R_(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function I_(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function N_(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Lc(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function P_(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function iu(n){return typeof n=="string"||n instanceof String}function D_(n){return typeof n=="boolean"}function L_(n){return typeof n=="number"}function Po(n){return Array.isArray(n)?Po(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":L_(n)?"float32":iu(n)?"string":D_(n)?"bool":"float32"}function kc(n){return!!(n&&n.constructor&&n.call&&n.apply)}function gn(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function qm(n,e,t,r=!1){const s=new Array;if(e.length===1){const i=e[0]*(r?2:1);for(let a=0;a<i;a++)s[a]=t[n+a]}else{const i=e[0],a=e.slice(1),o=a.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<i;l++)s[l]=qm(n+l*o,a,t,r)}return s}function Fc(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,i)=>s*i)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return qm(0,n,e,t)}function ic(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function jm(n,e){const t=rs(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function rs(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Qn(n){n.forEach(e=>{L(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Oc(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Mh(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function ci(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wf="tfjsflags";class k_{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=F_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(qe().getBool("IS_TEST")||qe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];qe().getBool("IS_TEST")||qe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ci(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Wf in e&&e[Wf].split(",").forEach(r=>{const[s,i]=r.split(":");this.urlFlags[s]=U_(s,i)})}}function F_(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(O_(e,r[0],r[1]),r.join("="))),e}function O_(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function U_(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function qe(){return Km}let Km=null;function B_(n){Km=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ac;function Ym(){if(ac==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");ac=n}return ac}function $_(){const n=Ym();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Rh(n,e){const t=$_();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Qm="Abs",Zm="Acos",Jm="Acosh",Ih="Add",eg="AddN",tg="All",ng="Any",rg="ArgMax",sg="ArgMin",ig="Asin",ag="Asinh",og="Atan",lg="Atanh",ug="Atan2",cg="AvgPool",z_="AvgPoolGrad",hg="AvgPool3D",V_="AvgPool3DGrad",dg="BatchMatMul",fg="BatchToSpaceND",pg="Bincount",G_="BitwiseAnd",mg="BroadcastArgs",Nh="Cast",gg="Ceil",yg="ClipByValue",vg="Complex",xg="ComplexAbs",bg="Concat",wg="Conv2D",Ag="Conv2DBackpropFilter",Sg="Conv2DBackpropInput",_g="Conv3D",W_="Conv3DBackpropFilterV2",Eg="Conv3DBackpropInputV2",Tg="Cos",Cg="Cosh",Mg="Cumprod",Rg="Cumsum",Ig="CropAndResize",Ng="DenseBincount",Pg="DepthToSpace",Dg="DepthwiseConv2dNative",Lg="DepthwiseConv2dNativeBackpropFilter",kg="DepthwiseConv2dNativeBackpropInput",Fg="Diag",Og="Dilation2D",H_="Dilation2DBackpropInput",X_="Dilation2DBackpropFilter",q_="Draw",Ug="RealDiv",Bg="Einsum",$g="Elu",j_="EluGrad",zg="Erf",Vg="Equal",Gg="Exp",Wg="ExpandDims",Hg="Expm1",Xg="FFT",qg="Fill",jg="FlipLeftRight",Kg="Floor",Yg="FloorDiv",Qg="FusedBatchNorm",Zg="GatherV2",Jg="GatherNd",e0="Greater",t0="GreaterEqual",Ph="Identity",n0="IFFT",r0="Imag",s0="IsFinite",i0="IsInf",a0="IsNan",o0="LeakyRelu",l0="Less",u0="LessEqual",c0="LinSpace",h0="Log",d0="Log1p",f0="LogicalAnd",p0="LogicalNot",m0="LogicalOr",g0="LRN",K_="LRNGrad",y0="Max",v0="Maximum",x0="MaxPool",Y_="MaxPoolGrad",b0="MaxPool3D",Q_="MaxPool3DGrad",w0="MaxPoolWithArgmax",A0="Mean",S0="Min",_0="Minimum",E0="MirrorPad",T0="Mod",C0="Multinomial",M0="Multiply",R0="Neg",I0="NotEqual",N0="NonMaxSuppressionV3",Z_="NonMaxSuppressionV4",P0="NonMaxSuppressionV5",D0="OnesLike",L0="OneHot",k0="Pack",F0="PadV2",O0="Pow",U0="Prelu",B0="Prod",J_="RaggedGather",eE="RaggedRange",tE="RaggedTensorToTensor",$0="Range",z0="Real",V0="Reciprocal",G0="Relu",W0="Reshape",H0="ResizeNearestNeighbor",nE="ResizeNearestNeighborGrad",X0="ResizeBilinear",rE="ResizeBilinearGrad",q0="Relu6",j0="Reverse",K0="Round",Y0="Rsqrt",Q0="ScatterNd",Z0="TensorScatterUpdate",J0="SearchSorted",ey="Select",ty="Selu",ny="Slice",ry="Sin",sy="Sinh",iy="Sign",ay="Sigmoid",oy="Softplus",ly="Sqrt",uy="Sum",cy="SpaceToBatchND",hy="SplitV",dy="Softmax",sE="SparseFillEmptyRows",iE="SparseReshape",fy="SparseSegmentMean",py="SparseSegmentSum",my="SparseToDense",gy="SquaredDifference",aE="Square",oE="StaticRegexReplace",yy="StridedSlice",vy="StringNGrams",lE="StringSplit",uE="StringToHashBucketFast",xy="Sub",by="Tan",wy="Tanh",Dh="Tile",Ay="TopK",Sy="Transform",Al="Transpose",cE="Unique",_y="Unpack",Ey="UnsortedSegmentSum",Ty="ZerosLike",Cy="Step",Uc="FromPixels",My="RotateWithOffset",Bc="_FusedMatMul",$c="FusedConv2D",zc="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(...n){qe().getBool("IS_TEST")||qe().getBool("PROD")||console.warn(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Il=Rh("kernelRegistry",()=>new Map),hE=Rh("gradRegistry",()=>new Map);function Vc(n,e){const t=Ry(n,e);return Il.get(t)}function Hf(n){return hE.get(n)}function Xf(n){const e=Il.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===n&&t.push(a)}return t}function dE(n){const{kernelName:e,backendName:t}=n,r=Ry(e,t);Il.has(r)&&Ki(`The kernel '${e}' for backend '${t}' is already registered`),Il.set(r,n)}function Ry(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iy(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var kr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Ny(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function fE(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var Py=Ot,sr=null;try{sr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ot(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ot.prototype.__isLong__;Object.defineProperty(Ot.prototype,"__isLong__",{value:!0});function Wn(n){return(n&&n.__isLong__)===!0}Ot.isLong=Wn;var qf={},jf={};function bi(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=jf[n],r)?r:(t=Ut(n,(n|0)<0?-1:0,!0),s&&(jf[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=qf[n],r)?r:(t=Ut(n,n<0?-1:0,!1),s&&(qf[n]=t),t))}Ot.fromInt=bi;function ir(n,e){if(isNaN(n))return e?Js:ar;if(e){if(n<0)return Js;if(n>=Dy)return Fy}else{if(n<=-Yf)return Bn;if(n+1>=Yf)return ky}return n<0?ir(-n,e).neg():Ut(n%da|0,n/da|0,e)}Ot.fromNumber=ir;function Ut(n,e,t){return new Ot(n,e,t)}Ot.fromBits=Ut;var Nl=Math.pow;function Lh(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return ar;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return Lh(n.substring(1),e,t).neg();for(var s=ir(Nl(t,8)),i=ar,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),l=parseInt(n.substring(a,a+o),t);if(o<8){var u=ir(Nl(t,o));i=i.mul(u).add(ir(l))}else i=i.mul(s),i=i.add(ir(l))}return i.unsigned=e,i}Ot.fromString=Lh;function Er(n,e){return typeof n=="number"?ir(n,e):typeof n=="string"?Lh(n,e):Ut(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ot.fromValue=Er;var Kf=65536,pE=1<<24,da=Kf*Kf,Dy=da*da,Yf=Dy/2,Qf=bi(pE),ar=bi(0);Ot.ZERO=ar;var Js=bi(0,!0);Ot.UZERO=Js;var ea=bi(1);Ot.ONE=ea;var Ly=bi(1,!0);Ot.UONE=Ly;var Gc=bi(-1);Ot.NEG_ONE=Gc;var ky=Ut(-1,2147483647,!1);Ot.MAX_VALUE=ky;var Fy=Ut(-1,-1,!0);Ot.MAX_UNSIGNED_VALUE=Fy;var Bn=Ut(0,-2147483648,!1);Ot.MIN_VALUE=Bn;var Ie=Ot.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*da+(this.low>>>0):this.high*da+(this.low>>>0)};Ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Bn)){var t=ir(e),r=this.div(t),s=r.mul(t).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=ir(Nl(e,6),this.unsigned),a=this,o="";;){var l=a.div(i),u=a.sub(l.mul(i)).toInt()>>>0,c=u.toString(e);if(a=l,a.isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Bn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)===1};Ie.isEven=function(){return(this.low&1)===0};Ie.equals=function(e){return Wn(e)||(e=Er(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Ie.eq=Ie.equals;Ie.notEquals=function(e){return!this.eq(e)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(e){return this.comp(e)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(e){return this.comp(e)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(e){return this.comp(e)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(e){if(Wn(e)||(e=Er(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(Bn)?Bn:this.not().add(ea)};Ie.neg=Ie.negate;Ie.add=function(e){Wn(e)||(e=Er(e));var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,o=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,f=0;return f+=i+u,d+=f>>>16,f&=65535,d+=s+l,h+=d>>>16,d&=65535,h+=r+o,c+=h>>>16,h&=65535,c+=t+a,c&=65535,Ut(d<<16|f,c<<16|h,this.unsigned)};Ie.subtract=function(e){return Wn(e)||(e=Er(e)),this.add(e.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(e){if(this.isZero())return ar;if(Wn(e)||(e=Er(e)),sr){var t=sr.mul(this.low,this.high,e.low,e.high);return Ut(t,sr.get_high(),this.unsigned)}if(e.isZero())return ar;if(this.eq(Bn))return e.isOdd()?Bn:ar;if(e.eq(Bn))return this.isOdd()?Bn:ar;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Qf)&&e.lt(Qf))return ir(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,i=this.low>>>16,a=this.low&65535,o=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,f=0,m=0;return m+=a*c,f+=m>>>16,m&=65535,f+=i*c,d+=f>>>16,f&=65535,f+=a*u,d+=f>>>16,f&=65535,d+=s*c,h+=d>>>16,d&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=a*l,h+=d>>>16,d&=65535,h+=r*c+s*u+i*l+a*o,h&=65535,Ut(f<<16|m,h<<16|d,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(e){if(Wn(e)||(e=Er(e)),e.isZero())throw Error("division by zero");if(sr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?sr.div_u:sr.div_s)(this.low,this.high,e.low,e.high);return Ut(t,sr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Js:ar;var r,s,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Js;if(e.gt(this.shru(1)))return Ly;i=Js}else{if(this.eq(Bn)){if(e.eq(ea)||e.eq(Gc))return Bn;if(e.eq(Bn))return ea;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(ar)?e.isNegative()?ea:Gc:(s=this.sub(e.mul(r)),i=r.add(s.div(e)),i)}else if(e.eq(Bn))return this.unsigned?Js:ar;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=ar}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(r)/Math.LN2),l=o<=48?1:Nl(2,o-48),u=ir(r),c=u.mul(e);c.isNegative()||c.gt(s);)r-=l,u=ir(r,this.unsigned),c=u.mul(e);u.isZero()&&(u=ea),i=i.add(u),s=s.sub(c)}return i};Ie.div=Ie.divide;Ie.modulo=function(e){if(Wn(e)||(e=Er(e)),sr){var t=(this.unsigned?sr.rem_u:sr.rem_s)(this.low,this.high,e.low,e.high);return Ut(t,sr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return Ut(~this.low,~this.high,this.unsigned)};Ie.and=function(e){return Wn(e)||(e=Er(e)),Ut(this.low&e.low,this.high&e.high,this.unsigned)};Ie.or=function(e){return Wn(e)||(e=Er(e)),Ut(this.low|e.low,this.high|e.high,this.unsigned)};Ie.xor=function(e){return Wn(e)||(e=Er(e)),Ut(this.low^e.low,this.high^e.high,this.unsigned)};Ie.shiftLeft=function(e){return Wn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ut(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ut(0,this.low<<e-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(e){return Wn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ut(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ut(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(e){if(Wn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return Ut(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ut(t,0,this.unsigned):Ut(t>>>e-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?Ut(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:Ut(this.low,this.high,!0)};Ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ot.fromBytes=function(e,t,r){return r?Ot.fromBytesLE(e,t):Ot.fromBytesBE(e,t)};Ot.fromBytesLE=function(e,t){return new Ot(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ot.fromBytesBE=function(e,t){return new Ot(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Oy=Ny(Py),mE=ox({__proto__:null,default:Oy},[Py]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks=Oy||mE;function au(n){return Ks.fromString(n,!0,16)}const Uy=au("c3a5c85c97cb3127"),Hs=au("b492b66fbe98f273"),An=au("9ae16a3b2f90404f");function Wc(n){return n.xor(n.shru(47))}function By(n,e,t){const r=n.slice(e,e+t);return Ks.fromBytes(Array.from(r),!0,!0)}function Nt(n,e){return By(n,e,8)}function Zf(n,e){return By(n,e,4)}function en(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Es(n,e,t=au("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function gE(n,e,t,r,s,i){s=s.add(n),i=en(i.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),i=i.add(en(s,44)),[s.add(r),i.add(a)]}function pl(n,e,t,r){return gE(Nt(n,e),Nt(n,e+8),Nt(n,e+16),Nt(n,e+24),t,r)}function yE(n,e=n.length){if(e>=8){const t=An.add(e*2),r=Nt(n,0).add(An),s=Nt(n,e-8),i=en(s,37).mul(t).add(r),a=en(r,25).add(s).mul(t);return Es(i,a,t)}if(e>=4){const t=An.add(e*2),r=Zf(n,0);return Es(r.shl(3).add(e),Zf(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],i=t+(r<<8),a=e+(s<<2);return Wc(An.mul(i).xor(Uy.mul(a))).mul(An)}return An}function vE(n,e=n.length){const t=An.add(e*2),r=Nt(n,0).mul(Hs),s=Nt(n,8),i=Nt(n,e-8).mul(t),a=Nt(n,e-16).mul(An);return Es(en(r.add(s),43).add(en(i,30)).add(a),r.add(en(s.add(An),18)).add(i),t)}function xE(n,e=n.length){const t=An.add(e*2),r=Nt(n,0).mul(An),s=Nt(n,8),i=Nt(n,e-8).mul(t),a=Nt(n,e-16).mul(An),o=en(r.add(s),43).add(en(i,30)).add(a),l=Es(o,r.add(en(s.add(An),18)).add(i),t),u=Nt(n,16).mul(t),c=Nt(n,24),h=o.add(Nt(n,e-32)).mul(t),d=l.add(Nt(n,e-24)).mul(t);return Es(en(u.add(c),43).add(en(h,30)).add(d),u.add(en(c.add(r),18)).add(h),t)}function bE(n,e=n.length){const t=Ks.fromNumber(81,!0);if(e<=32)return e<=16?yE(n,e):vE(n,e);if(e<=64)return xE(n,e);let r=t,s=t.mul(Hs).add(113),i=Wc(s.mul(An).add(113)).mul(An),a=[Ks.UZERO,Ks.UZERO],o=[Ks.UZERO,Ks.UZERO];r=r.mul(An).add(Nt(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do r=en(r.add(s).add(a[0]).add(Nt(n,l+8)),37).mul(Hs),s=en(s.add(a[1]).add(Nt(n,l+48)),42).mul(Hs),r=r.xor(o[1]),s=s.add(a[0]).add(Nt(n,l+40)),i=en(i.add(o[0]),33).mul(Hs),a=pl(n,l,a[1].mul(Hs),r.add(o[0])),o=pl(n,l+32,i.add(o[1]),s.add(Nt(n,l+16))),[i,r]=[r,i],l+=64;while(l!==u);const h=Hs.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=en(r.add(s).add(a[0]).add(Nt(n,l+8)),37).mul(h),s=en(s.add(a[1]).add(Nt(n,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(Nt(n,l+40))),i=en(i.add(o[0]),33).mul(h),a=pl(n,l,a[1].mul(h),r.add(o[0])),o=pl(n,l+32,i.add(o[1]),s.add(Nt(n,l+16))),[i,r]=[r,i],Es(Es(a[0],o[0],h).add(Wc(s).mul(Uy)).add(i),Es(a[1],o[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,e){return e==="string"?ai(n):ou([n],e)}function AE(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ou(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=hi(n)),qe().getBool("DEBUG")&&R_(n,e),AE(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Pl(){return qe().platform.now()}function ai(n,e="utf-8"){return e=e||"utf-8",qe().platform.encode(n,e)}function fa(n,e="utf-8"){return e=e||"utf-8",qe().platform.decode(n,e)}function ur(n){return qe().platform.isTypedArray!=null?qe().platform.isTypedArray(n):Iy(n)}function hi(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||ci(n)||n==null||ur(n)&&t)e.push(n);else if(Array.isArray(n)||ur(n))for(let r=0;r<n.length;++r)hi(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)hi(n[s],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SE{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new EE)}profileKernel(e,t,r){let s;const i=()=>{s=r()};let a;const o=Pl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const u of s)u.dataSync();a=Promise.resolve({kernelMs:Pl()-o})}if(qe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){const c=s[u];c.data().then(h=>{_E(h,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:i,extraInfo:a}=e;r.forEach(o=>{Promise.all([o.data(),s,a]).then(l=>{this.logger.logKernelProfile(t,o,l[0],l[1],i,l[2])})})}}function _E(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class EE{logKernelProfile(e,t,r,s,i,a){const o=typeof s=="number"?wl(`${s}ms`,9):s.error,l=wl(e,25),u=t.rank,c=t.size,h=wl(t.shape.toString(),14);let d="";for(const f in i){const m=i[f];if(m!=null){const y=m.shape||t.shape,p=y.length;d+=`${f}: ${p}D ${p>0?y:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${h}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e,t){const r={},s={};for(let l=0;l<e.length;l++)r[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let f=!1;for(let m=0;m<e.length;m++)if(r[d.id]){u.outputs.forEach(y=>r[y.id]=!0),f=!0,s[u.id]=!0;break}if(f)break}}const i={};i[t.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(i[u.outputs[h].id]){for(const d in c)i[c[d].id]=!0,a[u.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const u=n[l];if(s[u.id]&&a[u.id]){const c={};for(const d in u.inputs){const f=u.inputs[d];r[f.id]&&(c[d]=f)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,o.push(h)}}return o}function CE(n,e,t,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?a.push(u):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=t(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=i.inputs[l];if(!Nn(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=r(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf=20,Ha=3,oc=7;function ME(n,e,t,r){const s=gn(e),i=RE(n,e,t,s),a=e.length,o=Sl(n,e,t,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function RE(n,e,t,r){const s=Te(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l=t==="complex64"?Ja(n):n;if(o>1)for(let u=0;u<s/i;u++){const c=u*i;for(let h=0;h<i;h++)a[h]=Math.max(a[h],Za(l[c+h],0,t).length)}return a}function Za(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(oc))} + ${parseFloat(n[1].toFixed(oc))}j`:iu(n)?r=`'${n}'`:t==="bool"?r=$y(n):r=parseFloat(n.toFixed(oc)).toString(),wl(r,e)}function $y(n){return n===0?"false":"true"}function Sl(n,e,t,r,s,i=!0){const a=t==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(t==="complex64"){const y=Ja(n);return[Za(y[0],0,t)]}return t==="bool"?[$y(n[0])]:[n[0].toString()]}if(l===1){if(o>Jf){const p=Ha*a;let g=Array.from(n.slice(0,p)),A=Array.from(n.slice((o-Ha)*a,o*a));return t==="complex64"&&(g=Ja(g),A=Ja(A)),["["+g.map((x,S)=>Za(x,s[S],t)).join(", ")+", ..., "+A.map((x,S)=>Za(x,s[o-Ha+S],t)).join(", ")+"]"]}return["["+(t==="complex64"?Ja(n):Array.from(n)).map((p,g)=>Za(p,s[g],t)).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>Jf){for(let y=0;y<Ha;y++){const p=y*h,g=p+h;d.push(...Sl(n.slice(p,g),u,t,c,s,!1))}d.push("...");for(let y=o-Ha;y<o;y++){const p=y*h,g=p+h;d.push(...Sl(n.slice(p,g),u,t,c,s,y===o-1))}}else for(let y=0;y<o;y++){const p=y*h,g=p+h;d.push(...Sl(n.slice(p,g),u,t,c,s,y===o-1))}const f=l===2?",":"";d[0]="["+(o>0?d[0]+f:"");for(let y=1;y<d.length-1;y++)d[y]=" "+d[y]+f;let m=`,
`;for(let y=2;y<l;y++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":m),d}function Ja(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pa{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=Te(e),r!=null){const s=r.length;L(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||tn(t,this.size),this.strides=gn(e)}set(e,...t){t.length===0&&(t=[0]),L(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xr().makeTensor(this.values,this.shape,this.dtype)}}let xr=null,Yi=null;function IE(n){xr=n}function NE(n){Yi=n}class fn{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Te(e),this.strides=gn(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Yi.buffer(this.shape,this.dtype,e)}bufferSync(){return Yi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Fc(this.shape,e,this.dtype==="complex64")}arraySync(){return Fc(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=xr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>fa(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=xr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>fa(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await xr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),xr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Yi.print(this,e)}clone(){return this.throwIfDisposed(),Yi.clone(this)}toString(e=!1){const t=this.dataSync();return ME(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Yi.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),xr().makeVariable(this,e,t,r)}}Object.defineProperty(fn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function PE(){return Rh("Tensor",()=>fn)}PE();class Dl extends fn{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Nn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xr().disposeTensor(this),this.dataId=e.dataId,xr().incRef(this,null)}dispose(){xr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Dl,Symbol.hasInstance,{value:n=>n instanceof fn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ep;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(ep||(ep={}));var Hc;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Hc||(Hc={}));var Xc;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Xc||(Xc={}));var qc;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(qc||(qc={}));var jc;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(jc||(jc={}));const DE={float32:qc,int32:Hc,bool:Xc,complex64:jc};function Ps(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return DE[n][e]}function LE(n){return Ps(n,"int32")}function zy(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Vy(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(n,e){if(n.dtype===e.dtype)return[n,e];const t=Ps(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function kE(n,e){L(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function Gy(n){const e=[];return Wy(n,e,new Set),e}function Wy(n,e,t){if(n==null)return;if(n instanceof fn){e.push(n);return}if(!FE(n))return;const r=n;for(const s in r){const i=r[s];t.has(i)||(t.add(i),Wy(i,e,t))}}function FE(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(n){return n.kernelName!=null}class tp{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new tp}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Ki(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new SE(this.backendInstance),!0}setupRegisteredKernels(){Xf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Xf(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Xm)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,i=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ki(`Initialization of backend ${e} failed`),Ki(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Ki(`Initialization of backend ${e} failed`),Ki(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:i}=this.initializeBackend(r);if(i||s)return{name:r,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,i=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,i,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return ma.nextTensorId++}nextVariableId(){return ma.nextVariableId++}clone(e){const t=W.runKernel(Ph,{x:e}),r={x:e},s=a=>({x:()=>{const o="float32",l={x:a},u={dtype:o};return W.runKernel(Nh,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,i,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(Vc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let i=0;r.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=lc(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(lc(e)){const{kernelName:m,inputs:y,attrs:p}=e;this.backendName==null&&this.backend;const g=Vc(m,this.backendName);L(g!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{const A=this.backend.numDataIds();l=g.kernelFunc({inputs:y,attrs:p,backend:this.backend});const x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,A,x);const S=x.map(E=>E.rank!=null?E:this.makeTensorFromTensorInfo(E));if(s){const E=this.getTensorsForGradient(m,y,S);r=this.saveTensorsForBackwardMode(E)}return S}}else{const{forwardFunc:m}=e,y=p=>{s&&(r=p.map(g=>this.keep(this.clone(g))))};o=()=>{const p=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,y));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,p,g),g}}const{inputs:c,attrs:h}=e,d=lc(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(f=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),s&&this.addTapeNode(u,c,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(m=>c[m]!=null?c[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=Hf(e);if(s!=null){const i=s.inputsToSave||[],a=s.outputsToSave||[];let o;s.saveAllInputs?(L(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(u=>t[u])):o=i.map(u=>t[u]);const l=r.filter((u,c)=>a[c]);return o.concat(l)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let i=e;r==="string"&&iu(e[0])&&(i=e.map(l=>ai(l)));const a=s.write(i,t,r),o=new fn(t,r,a,this.nextTensorId());if(this.trackTensor(o,s),r==="string"){const l=this.state.tensorInfo.get(a),u=P_(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,t,r,s){r=r||"float32";const i={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:i}=e,a=new fn(s,i,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const i=new Dl(e,t,r,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Lc(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Dl||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Lc(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:i},l=Hf(e);l!=null&&(s=l.gradFunc),s!=null&&(o.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=r[h],f=rs(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return c}),s(u.length>1?u:u[0],i,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Gy(e),r=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(e,t,r,s=!1){if(L(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));L(i instanceof fn,()=>"The result y returned by f() must be a tensor.");const a=TE(this.state.activeTape,t,i);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=r??OE(i.shape),CE(o,a,u=>this.tidy(u),UE);const l=t.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return L(kc(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{L(t.every(o=>o instanceof fn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((o,l)=>{s[l]=o});const i=(o,l)=>(r=e(...t,l),L(r.value instanceof fn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),L(kc(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(o,l)=>{const u=r.gradFunc(o,l),c=Array.isArray(u)?u:[u];L(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),L(c.every(d=>d instanceof fn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Pl(),r=await this.backend.time(e);return r.wallMs=Pl()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new tp;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ma.nextTensorId=0;ma.nextVariableId=0;function OE(n){const e=jm(Te(n),"float32");return W.makeTensor(e,n,"float32")}function Hy(){const n=Ym();if(n._tfengine==null){const e=new k_(n);n._tfengine=new ma(e)}return B_(n._tfengine.ENV),IE(()=>n._tfengine),n._tfengine}const W=Hy();function UE(n,e){const t={a:n,b:e};return W.runKernel(Ih,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn=qe();Pn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Pn.registerFlag("IS_BROWSER",()=>BE());Pn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Pn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Pn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Pn.registerFlag("PROD",()=>!1);Pn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Pn.getBool("DEBUG"));Pn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Pn.registerFlag("IS_TEST",()=>!1);Pn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Pn.getBool("DEBUG"));Pn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Pn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Pn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(n,e){let t=n;if(ur(n))return e==="string"?[]:[n.length];if(zy(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(Vy(n))return[n.buffer.size/(e==null?4:Lc(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||ur(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&qe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Xy(n,r,[]),r}function Xy(n,e,t){if(t=t||[],!Array.isArray(n)&&!ur(n)){L(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}L(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),L(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)Xy(n[s],r,t.concat(s))}function np(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function I(n,e,t,r="numeric"){if(n instanceof fn)return np(r,n.dtype,e,t),n;let s=Po(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),np(r,s,e,t),n==null||!ur(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const i=ks(n,s);!ur(n)&&!Array.isArray(n)&&(n=[n]);const o=s!=="string"?ou(n,s):hi(n,[],!0);return W.makeTensor(o,i,s)}function Ll(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,a)=>I(i,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qy="__op";function V(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+qy;const s=(...i)=>{W.startScope(t);try{const a=r(...i);return ci(a)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(a),a}catch(a){throw W.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n,e){const t=I(n,"real","complex"),r=I(e,"imag","complex");Yn(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return W.runKernel(vg,s)}const Ds=V({complex_:$E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(n,e,t,r){if(r==null)r=Po(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Vy(n)||zy(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return W.backend.createTensorFromGPUData(n,e||t,r)}if(!ur(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Qn(e);const s=Te(e),i=Te(t);L(s===i,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${i}`);for(let a=0;a<t.length;++a){const o=t[a],l=a===t.length-1?o!==Te(e.slice(a)):!0;L(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!ur(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?ou(n,r):hi(n,[],!0),W.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(n,e,t){const r=ks(n,t);return Fs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Tr{static join(e){return new Tr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>ur(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+s.byteLength;this.shards.push({buffer:s,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,i=new ArrayBuffer(s),a=new Uint8Array(i);let o=0;for(let l=r;l<this.shards.length;l++){const u=this.shards[l],h=e+o-u.start,d=o,m=Math.min(t,u.end)-u.start,y=new Uint8Array(u.buffer,h,m-h);if(a.set(y,d),o+=y.length,t<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=zE(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function zE(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,i=e(n[s]);if(i===0)return s;i<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kl=4;async function VE(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const o=s[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((p,g)=>p+g.length,0)+kl*d.length,m=new Uint8Array(f);let y=0;for(let p=0;p<d.length;p++){const g=d[p],A=new Uint8Array(new Uint32Array([g.length]).buffer);m.set(A,y),y+=kl,m.set(g,y),y+=g.length}h(m)});r.push(c)}else r.push(l.data());e!=null&&(u.group=e),t.push(u)}const i=await Promise.all(r);return{data:GE(i),specs:t}}function jy(n,e){const t=new Tr(n),r={};let s,i=0;for(const a of e){const o=a.name,l=a.dtype,u=a.shape,c=Te(u);let h;if("quantization"in a){const d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const f=Kc[d.dtype],m=t.slice(i,i+c*f),y=d.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(l==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){h=new Float32Array(y.length);for(let p=0;p<y.length;p++){const g=y[p];h[p]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=YE()),h=s(y);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(l==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(y.length);for(let p=0;p<y.length;p++){const g=y[p];h[p]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${l}`);i+=c*f}else if(l==="string"){const d=Te(a.shape);h=[];for(let f=0;f<d;f++){const m=new Uint32Array(t.slice(i,i+kl))[0];i+=kl;const y=new Uint8Array(t.slice(i,i+m));h.push(y),i+=m}}else{const d=Kc[l],f=t.slice(i,i+c*d);if(l==="float32")h=new Float32Array(f);else if(l==="int32")h=new Int32Array(f);else if(l==="bool")h=new Uint8Array(f);else if(l==="complex64"){h=new Float32Array(f);const m=new Float32Array(h.length/2),y=new Float32Array(h.length/2);for(let A=0;A<m.length;A++)m[A]=h[A*2],y[A]=h[A*2+1];const p=Fr(m,u,"float32"),g=Fr(y,u,"float32");r[o]=Ds(p,g),p.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${l}`);i+=c*d}l!=="complex64"&&(r[o]=Fr(h,u,l))}return r}function GE(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(i=>{r.set(new Uint8Array(i.buffer),s),s+=i.byteLength}),r.buffer}const kh=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function rp(n){return kh?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function WE(n){if(kh)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function HE(n){if(kh){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function XE(n){return Tr.join(n)}function sp(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Ky(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Yy(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Fh(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),Yy(n,t,r)}function Do(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:rp(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:rp(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Tr(n.weightData).byteLength}}function Qy(n){const e=[];for(const t of n)e.push(...t.weights);return e}function qE(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function jE(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function KE(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function YE(){const n=qE(),e=jE(),t=KE();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const o=r[a],l=n[t[o>>10]+(o&1023)]+e[o>>10];i[a]=l}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $t{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return $t.instance==null&&($t.instance=new $t),$t.instance}static registerSaveRouter(e){$t.getInstance().saveRouters.push(e)}static registerLoadRouter(e){$t.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return $t.getHandlers(e,"save")}static getLoadHandlers(e,t){return $t.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?$t.getInstance().loadRouters:$t.getInstance().saveRouters).forEach(a=>{const o=a(e,r);o!==null&&s.push(o)}),s}}const QE=n=>$t.registerSaveRouter(n),ZE=n=>$t.registerLoadRouter(n),JE=n=>$t.getSaveHandlers(n),e3=(n,e)=>$t.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yc="tensorflowjs",Qc=1,ei="models_store",bs="model_info_store";function Zy(){if(!qe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Zc(n){const e=n.result;e.createObjectStore(ei,{keyPath:"modelPath"}),e.createObjectStore(bs,{keyPath:"modelPath"})}class di{constructor(e){if(this.indexedDB=Zy(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const i=this.indexedDB.open(Yc,Qc);i.onupgradeneeded=()=>Zc(i),i.onsuccess=()=>{const a=i.result;if(t==null){const o=a.transaction(ei,"readonly"),u=o.objectStore(ei).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(u.result.modelArtifacts)},u.onerror=c=>(a.close(),s(u.error)),o.oncomplete=()=>a.close()}else{t.weightData=Tr.join(t.weightData);const o=Do(t),l=a.transaction(bs,"readwrite");let u=l.objectStore(bs),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(d){return s(d)}let h;c.onsuccess=()=>{h=a.transaction(ei,"readwrite");const d=h.objectStore(ei);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(m){return s(m)}f.onsuccess=()=>r({modelArtifactsInfo:o}),f.onerror=m=>{u=l.objectStore(bs);const y=u.delete(this.modelPath);y.onsuccess=()=>(a.close(),s(f.error)),y.onerror=p=>(a.close(),s(f.error))}},c.onerror=d=>(a.close(),s(c.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}di.URL_SCHEME="indexeddb://";const Jy=n=>qe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(di.URL_SCHEME)?t3(n.slice(di.URL_SCHEME.length)):null;$t.registerSaveRouter(Jy);$t.registerLoadRouter(Jy);function t3(n){return new di(n)}function n3(n){return n.startsWith(di.URL_SCHEME)?n.slice(di.URL_SCHEME.length):n}class r3{constructor(){this.indexedDB=Zy()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(Yc,Qc);r.onupgradeneeded=()=>Zc(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(bs,"readonly"),o=i.objectStore(bs).getAll();o.onsuccess=()=>{const l={};for(const u of o.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},o.onerror=l=>(s.close(),t(o.error)),i.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=n3(e),new Promise((t,r)=>{const s=this.indexedDB.open(Yc,Qc);s.onupgradeneeded=()=>Zc(s),s.onsuccess=()=>{const i=s.result,a=i.transaction(bs,"readwrite"),o=a.objectStore(bs),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=o.delete(e),h=()=>{u=i.transaction(ei,"readwrite");const f=u.objectStore(ei).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=m=>r(l.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),r(l.error))}},l.onerror=c=>(i.close(),r(l.error)),a.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},s.onerror=i=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr="/",Qi="tensorflowjs_models",e1="info",s3="model_topology",i3="weight_specs",a3="weight_data",o3="model_metadata";function t1(n){return{info:[Qi,n,e1].join(Qr),topology:[Qi,n,s3].join(Qr),weightSpecs:[Qi,n,i3].join(Qr),weightData:[Qi,n,a3].join(Qr),modelMetadata:[Qi,n,o3].join(Qr)}}function n1(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function l3(n){const e=n.split(Qr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Qr)}function u3(n){return n.startsWith(fi.URL_SCHEME)?n.slice(fi.URL_SCHEME.length):n}class fi{constructor(e){if(!qe().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=t1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Do(e),i=Tr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,WE(i));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw n1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=HE(a),t}}fi.URL_SCHEME="localstorage://";const r1=n=>qe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(fi.URL_SCHEME)?c3(n.slice(fi.URL_SCHEME.length)):null;$t.registerSaveRouter(r1);$t.registerLoadRouter(r1);function c3(n){return new fi(n)}class h3{constructor(){L(qe().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),L(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Qi+Qr,r=Qr+e1;for(let s=0;s<this.LS.length;++s){const i=this.LS.key(s);if(i.startsWith(t)&&i.endsWith(r)){const a=l3(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=u3(e);const t=t1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return n1(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra="://";class wn{constructor(){this.managers={}}static getInstance(){return wn.instance==null&&(wn.instance=new wn),wn.instance}static registerManager(e,t){L(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ra)&&(e=e.slice(0,e.indexOf(ra))),L(e.length>0,()=>"scheme must not be an empty string.");const r=wn.getInstance();L(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=wn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(wn.getInstance().managers)}}function _l(n){if(n.indexOf(ra)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${wn.getSchemes().join(",")}`);return{scheme:n.split(ra)[0],path:n.split(ra)[1]}}async function s1(n,e,t=!1){L(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=$t.getLoadHandlers(n);L(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),L(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],i=$t.getSaveHandlers(e);L(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),L(i.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=i[0],o=_l(n).scheme,l=_l(n).path,u=o===_l(n).scheme,c=await s.load();t&&u&&await wn.getManager(o).removeModel(l);const h=await a.save(c);return t&&!u&&await wn.getManager(o).removeModel(l),h.modelArtifactsInfo}async function d3(){const n=wn.getSchemes(),e={};for(const t of n){const r=await wn.getManager(t).listModels();for(const s in r){const i=t+ra+s;e[i]=r[s]}}return e}async function f3(n){const e=_l(n);return wn.getManager(e.scheme).removeModel(e.path)}async function p3(n,e){return s1(n,e,!1)}async function m3(n,e){return s1(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g3{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!qe().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Iy(e)}}if(qe().get("IS_BROWSER")){qe().setPlatform("browser",new g3);try{wn.registerManager(fi.URL_SCHEME,new h3)}catch{}try{wn.registerManager(di.URL_SCHEME,new r3)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3={importFetch:()=>require("node-fetch")};let uc;class v3{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return qe().global.fetch!=null?qe().global.fetch(e,t):(uc==null&&(uc=y3.importFetch()),uc(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}qe().get("IS_NODE")&&!qe().get("IS_BROWSER")&&qe().setPlatform("node",new v3);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n,e="float32",t){return e=e||"float32",Qn(n),new pa(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n,e){const t=I(n,"x","cast");if(!I_(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return W.runKernel(Nh,r,s)}const qt=V({cast_:x3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n){const t={x:I(n,"x","clone","string_or_numeric")};return W.runKernel(Ph,t)}const Ts=V({clone_:b3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hy();const w3={buffer:Bt,cast:qt,clone:Ts,print:i1};NE(w3);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(){return W}function bt(n,e){return W.tidy(n,e)}function Rn(n){Gy(n).forEach(t=>t.dispose())}function Dr(n){return W.keep(n)}function A3(){return W.ready()}function S3(n,e,t=1){return W.registerBackend(n,e,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n,e){let t=I(n,"a","add"),r=I(e,"b","add");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(Ih,s)}const et=V({add_:_3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n,e){let t=I(n,"a","floorDiv"),r=I(e,"b","floorDiv");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(Yg,s)}const a1=V({floorDiv_:E3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n,e){let t=I(n,"a","div"),r=I(e,"b","div");if([t,r]=Gt(t,r),t.dtype==="int32"&&r.dtype==="int32")return a1(t,r);const s={a:t,b:r},i={};return W.runKernel(Ug,s,i)}const Mt=V({div_:T3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n,e){let t=I(n,"a","mul"),r=I(e,"b","mul");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(M0,s)}const Pe=V({mul_:C3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n){const e=I(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return W.runKernel(xg,t)}else{const t={x:e};return W.runKernel(Qm,t)}}const jn=V({abs_:M3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(n){const t={x:I(n,"x","acos")};return W.runKernel(Zm,t)}const I3=V({acos_:R3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n){const t={x:I(n,"x","acosh")};return W.runKernel(Jm,t)}const P3=V({acosh_:N3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){L(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),L(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,i)=>I(s,`tensors${i}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Nn(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return W.runKernel(eg,r)}const L3=V({addN_:D3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n,e=null,t=!1){const s={x:I(n,"x","all","bool")},i={axis:e,keepDims:t};return W.runKernel(tg,s,i)}const F3=V({all_:k3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e=null,t=!1){const s={x:I(n,"x","any","bool")},i={axis:e,keepDims:t};return W.runKernel(ng,s,i)}const U3=V({any_:O3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n,e=0){const r={x:I(n,"x","argMax")},s={axis:e};return W.runKernel(rg,r,s)}const $3=V({argMax_:B3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n,e=0){const r={x:I(n,"x","argMin")},s={axis:e};return W.runKernel(sg,r,s)}const V3=V({argMin_:z3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const t={x:I(n,"x","asin")};return W.runKernel(ig,t)}const W3=V({asin_:G3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n){const t={x:I(n,"x","asinh")};return W.runKernel(ag,t)}const X3=V({asinh_:H3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n){const t={x:I(n,"x","atan")};return W.runKernel(og,t)}const j3=V({atan_:q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n,e){let t=I(n,"a","atan2"),r=I(e,"b","atan2");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(ug,s)}const Y3=V({atan2_:K3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n){const t={x:I(n,"x","atanh")};return W.runKernel(lg,t)}const Z3=V({atanh_:Q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(n,e,t,r,s="NHWC",i){const a=n[3],o=[...e,a],l=_a(s);return hr(n,o,t,i,r,null,null,l)}function Sa(n,e,t,r,s,i,a="channelsLast"){const[o,l]=fo(e);let u;if(a==="channelsLast")u=[o,l,n[3],n[3]];else if(a==="channelsFirst")u=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return hr(n,u,t,r,s,i,!1,a)}function lu(n,e,t,r,s,i,a="NDHWC"){const[o,l,u]=Jc(e);let c,h;if(a==="NDHWC")h="channelsLast",c=[o,l,u,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",c=[o,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return uu(n,c,t,r,s,!1,h,i)}function hr(n,e,t,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h]=n;else if(o==="channelsFirst")[l,h,u,c]=n;else throw new Error(`Unknown dataFormat ${o}`);const[d,f,,m]=e,[y,p]=fo(t),[g,A]=fo(r),x=sa(d,g),S=sa(f,A),{padInfo:E,outHeight:M,outWidth:R}=tT(s,u,c,y,p,x,S,i,o),O=a?m*h:m;let C;return o==="channelsFirst"?C=[l,O,M,R]:o==="channelsLast"&&(C=[l,M,R,O]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:M,outWidth:R,outChannels:O,padInfo:E,strideHeight:y,strideWidth:p,filterHeight:d,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:S,dilationHeight:g,dilationWidth:A,inShape:n,outShape:C,filterShape:e}}function uu(n,e,t,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h,d]=n;else if(a==="channelsFirst")[l,d,u,c,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,m,y,,p]=e,[g,A,x]=Jc(t),[S,E,M]=Jc(r),R=sa(f,S),O=sa(m,E),C=sa(y,M),{padInfo:N,outDepth:$,outHeight:q,outWidth:z}=nT(s,u,c,h,g,A,x,R,O,C,o),F=i?p*d:p;let X;return a==="channelsFirst"?X=[l,F,$,q,z]:a==="channelsLast"&&(X=[l,$,q,z,F]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:q,outWidth:z,outChannels:F,padInfo:N,strideDepth:g,strideHeight:A,strideWidth:x,filterDepth:f,filterHeight:m,filterWidth:y,effectiveFilterDepth:R,effectiveFilterHeight:O,effectiveFilterWidth:C,dilationDepth:S,dilationHeight:E,dilationWidth:M,inShape:n,outShape:X,filterShape:e}}function J3(n,e,t,r,s){r==null&&(r=o1(n,e,t));const i=n[0],a=n[1],o=po((i-e+2*r)/t+1,s),l=po((a-e+2*r)/t+1,s);return[o,l]}function eT(n,e,t,r,s,i){s==null&&(s=o1(n,e[0],r[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*s>=e[o]&&(a[o]=po((n[o]-e[o]+2*s)/r[o]+1,i));return a}function o1(n,e,t,r=1){const s=sa(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function fo(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Jc(n){return typeof n=="number"?[n,n,n]:n}function sa(n,e){return e<=1?n:n+(n-1)*(e-1)}function tT(n,e,t,r,s,i,a,o,l){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=J3([e,t],i,r,n,o);c=f[0],h=f[1]}else if(n==="same"){c=Math.ceil(e/r),h=Math.ceil(t/s);const d=Math.max(0,(c-1)*r+i-e),f=Math.max(0,(h-1)*s+a-t),m=Math.floor(d/2),y=d-m,p=Math.floor(f/2),g=f-p;u={top:m,bottom:y,left:p,right:g,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],f=l==="channelsLast"?n[1][1]:n[2][1],m=l==="channelsLast"?n[2][0]:n[3][0],y=l==="channelsLast"?n[2][1]:n[3][1];u={top:d,bottom:f,left:m,right:y,type:d===0&&f===0&&m===0&&y===0?"VALID":"EXPLICIT"},c=po((e-i+d+f)/r+1,o),h=po((t-a+m+y)/s+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function nT(n,e,t,r,s,i,a,o,l,u,c){let h,d,f,m;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const p=eT([e,t,r,1],[o,l,u],1,[s,i,a],n,c);d=p[0],f=p[1],m=p[2]}else if(n==="same"){d=Math.ceil(e/s),f=Math.ceil(t/i),m=Math.ceil(r/a);const y=(d-1)*s+o-e,p=(f-1)*i+l-t,g=(m-1)*a+u-r,A=Math.floor(y/2),x=y-A,S=Math.floor(p/2),E=p-S,M=Math.floor(g/2),R=g-M;h={top:S,bottom:E,left:M,right:R,front:A,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:m}}function po(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Fl(n){const[e,t,r]=fo(n);return e===1&&t===1&&r===1}function $r(n,e){return Fl(n)||Fl(e)}function ga(n){return fo(n).every(e=>e>0)}function _a(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Cr(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")L(ho(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{L(ho(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e){const r={x:I(n,"x","reshape","string_or_numeric")},s={shape:e};return W.runKernel(W0,r,s)}const pe=V({reshape_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e,t,r,s){const i=I(n,"x","avgPool","float32"),a=1;L($r(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=pe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Cr("avgPool",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=W.runKernel(cg,u,c);return h=qt(h,i.dtype),l?pe(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const l1=V({avgPool_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,e,t,r,s,i="NDHWC"){const a=I(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=pe(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),L(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),L(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Cr("avgPool3d",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i};let h=W.runKernel(hg,u,c);return h=qt(h,o.dtype),l?pe(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const aT=V({avgPool3d_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e=0){L(n.length>=1,()=>"Pass at least one tensor to concat");const t=Ll(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return Ts(t[0]);const r=t,s={axis:e};return W.runKernel(bg,r,s)}const Sn=V({concat_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n,e,t=!1,r=!1){let s=I(n,"a","matMul"),i=I(e,"b","matMul");[s,i]=Gt(s,i);const a={a:s,b:i},o={transposeA:t,transposeB:r};return W.runKernel(dg,a,o)}const Tt=V({matMul_:lT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n){const t={x:I(n,"x","sigmoid","float32")};return W.runKernel(ay,t)}const ia=V({sigmoid_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,e,t){const r=I(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:t};return W.runKernel(ny,s,i)}const Pt=V({slice_:cT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n){const t={x:I(n,"x","tanh","float32")};return W.runKernel(wy,t)}const eh=V({tanh_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n,e,t,r,s,i){const a=I(n,"forgetBias","basicLSTMCell"),o=I(e,"lstmKernel","basicLSTMCell"),l=I(t,"lstmBias","basicLSTMCell"),u=I(r,"data","basicLSTMCell"),c=I(s,"c","basicLSTMCell"),h=I(i,"h","basicLSTMCell"),d=Sn([u,h],1),f=Tt(d,o),m=et(f,l),y=m.shape[0],p=m.shape[1]/4,g=[y,p],A=Pt(m,[0,0],g),x=Pt(m,[0,p],g),S=Pt(m,[0,p*2],g),E=Pt(m,[0,p*3],g),M=et(Pe(ia(A),eh(x)),Pe(c,ia(et(a,S)))),R=Pe(eh(M),ia(E));return[M,R]}const fT=V({basicLSTMCell_:dT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,e,t){const r=I(n,"x","batchToSpaceND"),s=e.reduce((o,l)=>o*l);L(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),L(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),L(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},a={blockShape:e,crops:t};return W.runKernel(fg,i,a)}const u1=V({batchToSpaceND_:pT});function mT(n){let e;return n.rank===0||n.rank===1?e=pe(n,[1,1,1,n.size]):n.rank===2?e=pe(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=pe(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,e,t,r,s,i){i==null&&(i=.001);const a=I(n,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(t,"variance","batchNorm");let u;s!=null&&(u=I(s,"scale","batchNorm"));let c;r!=null&&(c=I(r,"offset","batchNorm")),L(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:mT(a),scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:i},m=W.runKernel(Qg,d,f);return pe(m,a.shape)}const cu=V({batchNorm_:gT});function yT(n,e,t,r,s,i){const a=I(n,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(t,"variance","batchNorm");let u;s!=null&&(u=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),L(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),L(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),L(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&L(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),cu(a,o,l,c,u,i)}const vT=V({batchNorm2d_:yT});function xT(n,e,t,r,s,i){const a=I(n,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(t,"variance","batchNorm");let u;s!=null&&(u=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),L(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),L(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),L(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&L(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),cu(a,o,l,c,u,i)}const bT=V({batchNorm3d_:xT});function wT(n,e,t,r,s,i){const a=I(n,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(t,"variance","batchNorm");let u;s!=null&&(u=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),L(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),L(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),L(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&L(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),cu(a,o,l,c,u,i)}const AT=V({batchNorm4d_:wT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t){const r=I(n,"x","bincount"),s=I(e,"weights","bincount");L(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),L(t>=0,()=>`size must be non-negative, but got ${t}.`),L(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},a={size:t};return W.runKernel(pg,i,a)}const c1=V({bincount_:ST});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e){const t=I(n,"x","bitwiseAnd"),r=I(e,"y","bitwiseAnd");if(!Nn(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return W.runKernel(G_,s)}const ET=V({bitwiseAnd_:_T});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e){const t=I(n,"s0","broadcastArgs","int32"),r=I(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return W.runKernel(mg,s)}const CT=V({broadcastArgs_:TT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,e){let t=I(n,"broadcastTo","x");const r=t.shape;if(Qn(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=pe(t,u)}const s=t.shape,i=Array.from(e);for(let u=e.length-1;u>=0;u--)if(s[u]===e[u])i[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Ts(t);const o={x:t},l={reps:i};return W.runKernel(Dh,o,l)}const ro=V({broadcastTo_:MT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n){const t={x:I(n,"x","ceil","float32")};return W.runKernel(gg,t)}const IT=V({ceil_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(n,e,t){Qn(n),t=t||Po(e);const r={shape:n,value:e,dtype:t};return W.runKernel(qg,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n,e,t){const r=I(n,"x","clipByValue");if(L(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Lo(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:t};return W.runKernel(yg,s,i)}const PT=V({clipByValue_:NT});function DT(n){return Sn(n,0)}const LT=V({concat1d_:DT});function kT(n,e){return Sn(n,e)}const FT=V({concat2d_:kT});function OT(n,e){return Sn(n,e)}const UT=V({concat3d_:OT});function BT(n,e){return Sn(n,e)}const $T=V({concat4d_:BT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e,t,r,s="NHWC",i=[1,1],a){const o=I(n,"x","conv2d","float32"),l=I(e,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=pe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),L(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Cr("conv2d",r,a);const h=s==="NHWC"?u.shape[3]:u.shape[1];L(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),L($r(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),L(ga(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),L(ga(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},f={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=W.runKernel(wg,d,f);return c?pe(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const hu=V({conv2d_:zT});function VT(n,e,t,r,s="NWC",i=1,a){const o=I(n,"x","conv1d"),l=I(e,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=pe(o,[1,o.shape[0],o.shape[1]])),L(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),L(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Cr("conv1d",r,a),L(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),L($r(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),L(ga(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),L(ga(t),()=>"Error in conv1D: Stride should be larger than 0."),L(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=pe(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=pe(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=hu(d,h,[1,t],r,"NHWC",[1,i],a);return c?pe(p,[p.shape[2],p.shape[3]]):pe(p,[p.shape[0],p.shape[2],p.shape[3]])}const GT=V({conv1d_:VT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,e,t,r,s,i="NHWC",a){L(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,l=e,u=!1;e.rank===3&&(u=!0,l=pe(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),L(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),L(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),L(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=i==="NHWC"?o[3]:o[1],h=i==="NHWC"?l.shape[3]:l.shape[1];L(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),L(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Cr("conv2dDerInput",s,a);const d={dy:l,filter:t},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},m=W.runKernel(Sg,d,f);return u?pe(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const h1=V({conv2DBackpropInput_:WT});function HT(n,e,t,r,s,i){const a=I(n,"x","conv2dTranspose"),o=I(e,"filter","conv2dTranspose");return h1(t,a,o,r,s,"NHWC",i)}const XT=V({conv2dTranspose_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(n,e,t,r,s="NDHWC",i=[1,1,1]){const a=I(n,"x","conv3d"),o=I(e,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=pe(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),L(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),L(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),L($r(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),L(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),L(ga(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),L(ga(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:t,pad:r,dataFormat:s,dilations:i},d=W.runKernel(_g,c,h);return u?pe(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const jT=V({conv3d_:qT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n,e,t,r,s){L(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,a=e,o=!1;e.rank===4&&(o=!0,a=pe(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=a.shape[4];L(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),L(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),L(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),L(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),L(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:a,filter:t},h={pad:s,strides:r,inputShape:i},d=W.runKernel(Eg,c,h);return o?pe(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const YT=V({conv3DBackpropInput_:KT});function QT(n,e,t,r,s){const i=I(n,"x","conv3dTranspose"),a=I(e,"filter","conv3dTranspose");return YT(t,i,a,r,s)}const ZT=V({conv3dTranspose_:QT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n){const t={x:I(n,"x","cos","float32")};return W.runKernel(Tg,t)}const eC=V({cos_:JT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n){const t={x:I(n,"x","cosh","float32")};return W.runKernel(Cg,t)}const nC=V({cosh_:tC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n,e=0,t=!1,r=!1){const i={x:I(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return W.runKernel(Mg,i,a)}const sC=V({cumprod_:rC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n,e=0,t=!1,r=!1){const i={x:I(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return W.runKernel(Rg,i,a)}const aC=V({cumsum_:iC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t,r=!1){const s=I(n,"x","denseBincount"),i=I(e,"weights","denseBincount");L(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),L(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),L(t>=0,()=>`size must be non-negative, but got ${t}.`),L(i.size===s.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const a={x:s,weights:i},o={size:t,binaryOutput:r};return W.runKernel(Ng,a,o)}const lC=V({denseBincount_:oC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(n,e,t="NHWC"){const r=I(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],i=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];L(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),L(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),L(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${r.shape}`),L(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:t};return W.runKernel(Pg,o,l)}const cC=V({depthToSpace_:uC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(n,e,t,r,s="NHWC",i=[1,1],a){const o=I(n,"x","depthwiseConv2d","float32"),l=I(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=pe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),L(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=s==="NHWC"?u.shape[3]:u.shape[1];L(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Cr("depthwiseConv2d",r,a);const d={x:u,filter:l},f={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=W.runKernel(Dg,d,f);return c?pe(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Uh=V({depthwiseConv2d_:hC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n){const t={x:I(n,"x","diag")};return W.runKernel(Fg,t)}const fC=V({diag_:dC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t,r,s=[1,1],i="NHWC"){const a=I(n,"x","dilation2d"),o=I(e,"filter","dilation2d");L(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),L(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),L(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;a.rank===3&&(l=pe(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),L(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:t,pad:r,dilations:s},d=W.runKernel(Og,c,h);return u?pe(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const mC=V({dilation2d_:pC});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const i=t-1-s,a=n[i]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(i)}return r}function gC(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],i=e.length-r-1,a=e[i];(s==null||s===1&&a>1)&&t.unshift(i)}return t}function Rt(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let i=n[n.length-s-1];i==null&&(i=1);let a=e[e.length-s-1];if(a==null&&(a=1),i===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else r[t-s-1]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yC(n,e){let t=I(n,"a","equal","string_or_numeric"),r=I(e,"b","equal","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(Vg,s)}const d1=V({equal_:yC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n,e,t){const r=I(e,"a","where"),s=I(t,"b","where"),i=I(n,"condition","where","bool"),a=Rt(Rt(i.shape,r.shape),s.shape),o=ro(i,a),l=ro(r,a),u=ro(s,a),c={condition:o,t:l,e:u};return W.runKernel(ey,c)}const Cs=V({where_:vC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(n){const t={x:I(n,"x","zerosLike")};return W.runKernel(Ty,t)}const Kn=V({zerosLike_:xC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,e){let t=I(n,"a","div"),r=I(e,"b","div");[t,r]=Gt(t,r);const s=Mt(t,r),i=Kn(s),a=d1(r,i);return Cs(a,i,s)}const wC=V({divNoNan_:bC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n,e){const t=I(n,"t1","dot"),r=I(e,"t2","dot");L((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],i=r.rank===1?r.size:r.shape[0];if(L(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),t.rank===1&&r.rank===1){const a=pe(t,[1,-1]),o=pe(r,[-1,1]),l=Tt(a,o);return pe(l,[])}else if(t.rank===1&&r.rank===2){const a=pe(t,[1,-1]),o=pe(r,[r.shape[0],r.shape[1]]),l=Tt(a,o);return pe(l,[l.size])}else if(t.rank===2&&r.rank===1){const a=pe(r,[-1,1]),o=Tt(t,a);return pe(o,[o.size])}else{const a=pe(r,[r.shape[0],r.shape[1]]);return Tt(t,a)}}const SC=V({dot_:AC});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _C(n,...e){const t=e.map((s,i)=>I(s,`tensors${i}`,"einsum")),r={equation:n};return W.runKernel(Bg,t,r)}const Zi=V({einsum_:_C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n){const t={x:I(n,"x","elu","float32")};return W.runKernel($g,t)}const f1=V({elu_:EC});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n,e){const t=I(n,"x","ensureShape","string_or_numeric");if(!T_(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const CC=V({ensureShape_:TC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n){let e=I(n,"x","erf");L(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=qt(e,"float32"));const t={x:e};return W.runKernel(zg,t)}const RC=V({erf_:MC});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function IC(n,e,t){const r=n.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?s.push(n[i++]):s.push(e[a++]);return s}function du(n,e){const t=[],r=n.length;for(let i=0;i<r;i++)e.indexOf(i)===-1&&t.push(n[i]);const s=e.map(i=>n[i]);return[t,s]}function ko(n,e){const t=e.map(r=>1);return IC(n,t,e)}function Bh(n,e,t){L(p1(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Fo(n,e){if(p1(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function m1(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Oo(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e=null,t=!1){const s={x:I(n,"x","max")},i={reductionIndices:e,keepDims:t};return W.runKernel(y0,s,i)}const oi=V({max_:NC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(n,e=null,t=!1){const s={x:I(n,"x","min")},i={axis:e,keepDims:t};return W.runKernel(S0,s,i)}const Ul=V({min_:PC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n,e){let t=I(n,"base","pow"),r=I(e,"exp","pow");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(O0,s)}const mo=V({pow_:DC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(n,e){if((ur(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ur(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fs(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n){const t={x:I(n,"x","sqrt","float32")};return W.runKernel(ly,t)}const ss=V({sqrt_:LC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n){const e=I(n,"x","square"),t={};return W.runKernel("Square",{x:e},t)}const Sr=V({square_:kC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(n,e=null,t=!1){let r=I(n,"x","sum");r.dtype==="bool"&&(r=qt(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return W.runKernel(uy,s,i)}const Ft=V({sum_:FC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(n,e="euclidean",t=null,r=!1){n=I(n,"x","norm");const s=g1(n,e,t);let i=s.shape;if(r){const a=cr(t,n.shape);i=ko(s.shape,a)}return pe(s,i)}function g1(n,e,t=null){if(n.rank===0)return jn(n);if(n.rank!==1&&t===null)return g1(pe(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ft(jn(n),t);if(e===1/0)return oi(jn(n),t);if(e===-1/0)return Ul(jn(n),t);if(e==="euclidean"||e===2)return ss(Ft(mo(jn(n),yt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return oi(Ft(jn(n),t[0]),t[1]-1);if(e===1/0)return oi(Ft(jn(n),t[1]),t[0]);if(e===-1/0)return Ul(Ft(jn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return ss(Ft(Sr(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const fu=V({norm_:OC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e=null,t=!1){return fu(n,"euclidean",e,t)}const BC=V({euclideanNorm_:UC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(n){const t={x:I(n,"x","exp")};return W.runKernel(Gg,t)}const pi=V({exp_:$C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(n,e=0){const t=I(n,"x","expandDims","string_or_numeric");L(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return W.runKernel(Wg,r,s)}const jr=V({expandDims_:zC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n){const t={x:I(n,"x","expm1")};return W.runKernel(Hg,t)}const GC=V({expm1_:VC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n,e){const t=I(n,"x","tile","string_or_numeric");L(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return W.runKernel(Dh,r,s)}const so=V({tile_:WC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n,e,t,r="float32"){e==null&&(e=n);const s=Bt([n,e],r),i=n<=e?n:e;for(let o=0;o<i;++o)s.set(1,o,o);const a=pe(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return so(jr(a,0),[t[0],1,1]);if(t.length===2)return so(jr(jr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return so(jr(jr(jr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const y1=V({eye_:HC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n){const t={x:I(n,"x","floor","float32")};return W.runKernel(Kg,t)}const v1=V({floor_:XC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n,e,t=0,r=0){const s=I(n,"x","gather"),i=I(e,"indices","gather","int32"),a={x:s,indices:i},o={axis:t,batchDims:r};return W.runKernel(Zg,a,o)}const x1=V({gather_:qC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,e){let t=I(n,"a","greater","string_or_numeric"),r=I(e,"b","greater","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(e0,s)}const pu=V({greater_:jC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n,e){let t=I(n,"a","greaterEqual","string_or_numeric"),r=I(e,"b","greaterEqual","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(t0,s)}const b1=V({greaterEqual_:KC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC(n){const t={input:I(n,"input","imag")};return W.runKernel(r0,t)}const mu=V({imag_:YC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n){const t={x:I(n,"x","isFinite")};return W.runKernel(s0,t)}const ZC=V({isFinite_:QC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC(n){const t={x:I(n,"x","isInf")};return W.runKernel(i0,t)}const eM=V({isInf_:JC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const t={x:I(n,"x","isNaN")};return W.runKernel(a0,t)}const nM=V({isNaN_:tM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,e=.2){const r={x:I(n,"x","leakyRelu")},s={alpha:e};return W.runKernel(o0,r,s)}const w1=V({leakyRelu_:rM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,e){let t=I(n,"a","less","string_or_numeric"),r=I(e,"b","less","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(l0,s)}const th=V({less_:sM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n,e){let t=I(n,"a","lessEqual","string_or_numeric"),r=I(e,"b","lessEqual","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(u0,s)}const $h=V({lessEqual_:iM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return W.runKernel(c0,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n,e=5,t=1,r=1,s=.5){const i=I(n,"x","localResponseNormalization");L(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),L(ho(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=pe(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:t,alpha:r,beta:s},c=W.runKernel(g0,l,u);return o?pe(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const lM=V({localResponseNormalization_:oM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n){const t={x:I(n,"x","log","float32")};return W.runKernel(h0,t)}const go=V({log_:uM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const t={x:I(n,"x","log1p")};return W.runKernel(d0,t)}const A1=V({log1p_:cM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,e){L(kc(n),()=>"The f passed in variableGrads(f) must be a function"),L(e==null||Array.isArray(e)&&e.every(u=>u instanceof Dl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in W.registeredVariables)e.push(W.registeredVariables[u])}const r=t?e.filter(u=>!u.trainable):null,s=e.length;e=e.filter(u=>u.trainable),L(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const i=!0,{value:a,grads:o}=W.gradients(n,e,null,i);L(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),L(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),r?.forEach(u=>l[u.name]=null),{value:a,grads:l}}function is(n){return W.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n){const t={x:I(n,"x","neg")};return W.runKernel(R0,t)}const Or=V({neg_:dM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n){const t={x:I(n,"x","softplus")};return W.runKernel(oy,t)}const S1=V({softplus_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const e=I(n,"x","logSigmoid");return is(r=>({value:Or(S1(Or(r))),gradFunc:a=>Pe(a,ia(Or(r)))}))(e)}const mM=V({logSigmoid_:pM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n,e){let t=I(n,"a","sub"),r=I(e,"b","sub");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(xy,s)}const ot=V({sub_:gM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,e=-1){const t=I(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return is((s,i)=>{const o=oi(s,e,!0),l=ot(s,o),u=ot(qt(l,"float32"),go(Ft(pi(l),e,!0)));return i([u]),{value:u,gradFunc:(h,d)=>{const[f]=d,m=!0,y=pi(f);return ot(h,Pe(Ft(h,e,m),y))}}})(t)}const vM=V({logSoftmax_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n,e=null,t=!1){const r=I(n,"x","logSumExp"),s=cr(e,r.shape),i=oi(r,s,!0),a=ot(r,i),o=pi(a),l=Ft(o,s),u=go(l),c=et(pe(i,u.shape),u);if(t){const h=ko(c.shape,s);return pe(c,h)}return c}const _1=V({logSumExp_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,e){const t=I(n,"a","logicalAnd","bool"),r=I(e,"b","logicalAnd","bool");Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(f0,s)}const Bl=V({logicalAnd_:bM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n){const t={x:I(n,"x","logicalNot","bool")};return W.runKernel(p0,t)}const E1=V({logicalNot_:wM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n,e){const t=I(n,"a","logicalOr","bool"),r=I(e,"b","logicalOr","bool");Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(m0,s)}const T1=V({logicalOr_:AM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n,e){const t=I(n,"a","logicalXor","bool"),r=I(e,"b","logicalXor","bool");return Rt(t.shape,r.shape),Bl(T1(n,e),E1(Bl(n,e)))}const _M=V({logicalXor_:SM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ml=2147483648;function EM(n,e,t="left"){const r=I(n,"sortedSequence","searchSorted"),s=I(e,"values","searchSorted"),i=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],o=pe(r,[-1,i]),l=pe(s,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Te(l.shape)>=ml)throw new Error(`values tensor size must less than ${ml}`);if(o.shape[1]>=ml)throw new Error(`trailing dim_size must less than ${ml} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:t};return W.runKernel(J0,u,c)}const zh=V({searchSorted_:EM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,e){return zh(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e,t,r,s){const i=I(n,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=pe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),L($r(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Cr("maxPool",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=W.runKernel(x0,u,c);return l?pe(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const C1=V({maxPool_:CM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,e=[1,1,1],t,r,s,i="NDHWC"){const a=I(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=pe(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),L(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Cr("maxPool3d",r,s);const u={x:o},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i},h=W.runKernel(b0,u,c);return l?pe(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const RM=V({maxPool3d_:MM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n,e,t,r,s=!1){const a={x:I(n,"x","maxPoolWithArgmax")},o={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},l=W.runKernel(w0,a,o);return{result:l[0],indexes:l[1]}}const NM=V({maxPoolWithArgmax_:IM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,e){let t=I(n,"a","maximum"),r=I(e,"b","maximum");[t,r]=Gt(t,r),t.dtype==="bool"&&(t=qt(t,"int32"),r=qt(r,"int32")),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(v0,s)}const M1=V({maximum_:PM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e=null,t=!1){const s={x:I(n,"x","mean")},i={axis:e,keepDims:t};return W.runKernel(A0,s,i)}const $l=V({mean_:DM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mi(n,e="float32"){if(Qn(n),e==="complex64"){const r=mi(n,"float32"),s=mi(n,"float32");return Ds(r,s)}const t=rs(Te(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(n,e="float32"){if(Qn(n),e==="complex64"){const r=ti(n,"float32"),s=mi(n,"float32");return Ds(r,s)}const t=jm(Te(n),e);return W.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=I(n,"x","meshgrid",n instanceof fn?n.dtype:"float32");if(e===void 0)return[r];let s=I(e,"y","meshgrid",e instanceof fn?e.dtype:"float32");const i=Te(r.shape),a=Te(s.shape);return t==="xy"?(r=pe(r,[1,-1]),s=pe(s,[-1,1]),[Tt(ti([a,1],r.dtype),r),Tt(s,ti([1,i],s.dtype))]):(r=pe(r,[-1,1]),s=pe(s,[1,-1]),[Tt(r,ti([1,a],r.dtype)),Tt(ti([i,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,e){let t=I(n,"a","minimum"),r=I(e,"b","minimum");[t,r]=Gt(t,r),t.dtype==="bool"&&(t=qt(t,"int32"),r=qt(r,"int32")),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(_0,s)}const zl=V({minimum_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n,e,t){L(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=I(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");L(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let o=0;o<r.rank;o++)L(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),L(e[o][0]>=0&&e[o][0]<=r.shape[o]-s&&e[o][1]>=0&&e[o][1]<=r.shape[o]-s,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:t},a={x:r};return W.runKernel(E0,a,i)}const OM=V({mirrorPad_:FM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e){let t=I(n,"a","mod"),r=I(e,"b","mod");[t,r]=Gt(t,r);const s={a:t,b:r};return W.runKernel(T0,s)}const BM=V({mod_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,e=null,t=!1){n=I(n,"x","moments");const r=cr(e,n.shape),s=$l(n,r,t);let i=s.shape;t||(i=ko(s.shape,r));const a=Sr(ot(qt(n,"float32"),pe(s,i))),o=$l(a,r,t);return{mean:s,variance:o}}const zM=V({moments_:$M});function VM(n,e,t,r){const s=I(e,"data","multiRNNCell"),i=Ll(t,"c","multiRNNCell"),a=Ll(r,"h","multiRNNCell");let o=s;const l=[];for(let h=0;h<n.length;h++){const d=n[h](o,i[h],a[h]);l.push(d[0]),l.push(d[1]),o=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const GM=V({multiRNNCell_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n,e,t,r=!1){const s=I(n,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const l={logits:a===1?pe(s,[1,-1]):s},u={numSamples:e,seed:t,normalized:r},c=W.runKernel(C0,l,u);return a===1?pe(c,[c.size]):c}const HM=V({multinomial_:WM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(n,e){let t=I(n,"a","notEqual","string_or_numeric"),r=I(e,"b","notEqual","string_or_numeric");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r};return W.runKernel(I0,s)}const R1=V({notEqual_:XM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:I(n,"indices","oneHot","int32")},o={dtype:s,depth:e,onValue:t,offValue:r};return W.runKernel(L0,a,o)}const jM=V({oneHot_:qM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n){const t={x:I(n,"x","onesLike")};return W.runKernel(D0,t)}const YM=V({onesLike_:KM});function QM(n,e){const t=I(n,"v1","outerProduct"),r=I(e,"v2","outerProduct");L(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=pe(t,[-1,1]),i=pe(r,[1,-1]);return Tt(s,i)}const ZM=V({outerProduct_:QM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n,e,t=0){const r=I(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},i={x:r};return W.runKernel(F0,i,s)}const Uo=V({pad_:JM});function eR(n,e,t=0){return L(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Uo(n,[e],t)}const tR=V({pad1d_:eR});function nR(n,e,t=0){return L(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Uo(n,e,t)}const rR=V({pad2d_:nR});function sR(n,e,t=0){return L(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Uo(n,e,t)}const iR=V({pad3d_:sR});function aR(n,e,t=0){return L(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Uo(n,e,t)}const oR=V({pad4d_:aR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,e,t){const r=I(n,"x","spaceToBatchND");L(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),L(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),L(r.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:t};return W.runKernel(cy,s,i)}const I1=V({spaceToBatchND_:lR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,e,t,r,s,i,a){s==null&&(s=[1,1]),i==null&&(i=1),r===0&&(r="valid");const o=I(n,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=pe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L($r(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=Sa(l.shape,e,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;r==="same"?d=hR([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[m,y]=cR([c.inHeight,c.inWidth],h,d),p=f?r:"valid",g=f?l:I1(l,h,m),x=(t==="avg"?()=>l1(g,e,i,p,a):()=>C1(g,e,i,p,a))(),S=f?x:u1(x,h,y);return u?pe(S,[S.shape[1],S.shape[2],S.shape[3]]):S}function cR(n,e,t){const r=t.map(c=>c[0]),s=t.map(c=>c[1]),i=n.concat(r,s),a=e.map((c,h)=>(c-i[h]%c)%c),o=s.map((c,h)=>c+a[h]),l=e.map((c,h)=>[r[h],o[h]]),u=e.map((c,h)=>[0,a[h]]);return[l,u]}function hR(n,e){const r=n.map((a,o)=>a+(a-1)*(e[o]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),i=r.map((a,o)=>a-s[o]);return r.map((a,o)=>[s[o],i[o]])}const dR=V({pool_:uR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n,e){const t=I(n,"x","prelu"),r=I(e,"alpha","prelu"),s={x:t,alpha:r};return W.runKernel(U0,s)}const N1=V({prelu_:fR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e=null,t=!1){let r=I(n,"x","prod");r.dtype==="bool"&&(r=qt(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return W.runKernel(B0,s,i)}const mR=V({prod_:pR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,e,t,r){const s=n.map((c,h)=>I(c,`tensors${h}`,"raggedGather","int32")),i=I(e,"paramsDenseValues","raggedGather"),a=I(t,"indices","raggedGather","int32"),o={paramsNestedSplits:s,paramsDenseValues:i,indices:a},l={outputRaggedRank:r},u=W.runKernel(J_,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const yR=V({raggedGather_:gR});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n,e,t){const r=I(n,"starts","raggedRange"),s=I(e,"limits","raggedRange",r.dtype),i=I(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:i},o=W.runKernel(eE,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const xR=V({raggedRange_:vR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(n,e,t,r,s){const i=I(n,"shape","raggedTensorToTensor","int32"),a=I(e,"values","raggedTensorToTensor"),o=I(t,"defaultValue","raggedTensorToTensor",a.dtype),l=r.map((h,d)=>I(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:s};return W.runKernel(tE,u,c)}const wR=V({raggedTensorToTensor_:bR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,e,t){Qn(n);const r=Te(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<r;i++)s[i]=e();return W.makeTensor(s,n,t)}const SR=V({rand_:AR});var Vh={exports:{}};Vh.exports;(function(n){(function(e,t,r){function s(l){var u=this,c=o();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function a(l,u){var c=new s(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function o(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.alea=a})(kr,n,!1)})(Vh);var _R=Vh.exports,Gh={exports:{}};Gh.exports;(function(n){(function(e,t,r){function s(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var u=new s(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xor128=a})(kr,n,!1)})(Gh);var ER=Gh.exports,Wh={exports:{}};Wh.exports;(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var u=new s(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xorwow=a})(kr,n,!1)})(Wh);var TR=Wh.exports,Hh={exports:{}};Hh.exports;(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var c=l.x,h=l.i,d,f;return d=c[h],d^=d>>>7,f=d^d<<24,d=c[h+1&7],f^=d^d>>>10,d=c[h+3&7],f^=d^d>>>3,d=c[h+4&7],f^=d^d<<7,d=c[h+7&7],d=d^d<<13,f^=d^d<<9,c[h]=f,l.i=h+1&7,f};function u(c,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],c.x=f,c.i=0,d=256;d>0;--d)c.next()}u(l,o)}function i(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,c&&(c.x&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xorshift7=a})(kr,n,!1)})(Hh);var CR=Hh.exports,Xh={exports:{}};Xh.exports;(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,f,m;return l.w=c=c+1640531527|0,m=h[d+34&127],f=h[d=d+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[d]=m^f,l.i=d,m+(c^c>>>16)|0};function u(c,h){var d,f,m,y,p,g=[],A=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,A=Math.max(A,h.length)),m=0,y=-32;y<A;++y)h&&(f^=h.charCodeAt((y+32)%h.length)),y===0&&(p=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,y>=0&&(p=p+1640531527|0,d=g[y&127]^=f+p,m=d==0?m+1:0);for(m>=128&&(g[(h&&h.length||0)&127]=-1),m=127,y=4*128;y>0;--y)f=g[m+34&127],d=g[m=m+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,g[m]=f^d;c.w=p,c.X=g,c.i=m}u(l,o)}function i(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,c&&(c.X&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.xor4096=a})(kr,n,!1)})(Xh);var MR=Xh.exports,qh={exports:{}};qh.exports;(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var h=l.b,d=l.c,f=l.d,m=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^m,m=m-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^m,l.a=m-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var u=new s(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:r&&r.amd?r(function(){return a}):this.tychei=a})(kr,n,!1)})(qh);var RR=qh.exports,P1={exports:{}};const IR={},NR=Object.freeze(Object.defineProperty({__proto__:null,default:IR},Symbol.toStringTag,{value:"Module"})),PR=fE(NR);(function(n){(function(e,t,r){var s=256,i=6,a=52,o="random",l=r.pow(s,i),u=r.pow(2,a),c=u*2,h=s-1,d;function f(S,E,M){var R=[];E=E==!0?{entropy:!0}:E||{};var O=g(p(E.entropy?[S,x(t)]:S??A(),3),R),C=new m(R),N=function(){for(var $=C.g(i),q=l,z=0;$<u;)$=($+z)*s,q*=s,z=C.g(1);for(;$>=c;)$/=2,q/=2,z>>>=1;return($+z)/q};return N.int32=function(){return C.g(4)|0},N.quick=function(){return C.g(4)/4294967296},N.double=N,g(x(C.S),t),(E.pass||M||function($,q,z,F){return F&&(F.S&&y(F,C),$.state=function(){return y(C,{})}),z?(r[o]=$,q):$})(N,O,"global"in E?E.global:this==r,E.state)}function m(S){var E,M=S.length,R=this,O=0,C=R.i=R.j=0,N=R.S=[];for(M||(S=[M++]);O<s;)N[O]=O++;for(O=0;O<s;O++)N[O]=N[C=h&C+S[O%M]+(E=N[O])],N[C]=E;(R.g=function($){for(var q,z=0,F=R.i,X=R.j,Q=R.S;$--;)q=Q[F=h&F+1],z=z*s+Q[h&(Q[F]=Q[X=h&X+q])+(Q[X]=q)];return R.i=F,R.j=X,z})(s)}function y(S,E){return E.i=S.i,E.j=S.j,E.S=S.S.slice(),E}function p(S,E){var M=[],R=typeof S,O;if(E&&R=="object")for(O in S)try{M.push(p(S[O],E-1))}catch{}return M.length?M:R=="string"?S:S+"\0"}function g(S,E){for(var M=S+"",R,O=0;O<M.length;)E[h&O]=h&(R^=E[h&O]*19)+M.charCodeAt(O++);return x(E)}function A(){try{var S;return d&&(S=d.randomBytes)?S=S(s):(S=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(S)),x(S)}catch{var E=e.navigator,M=E&&E.plugins;return[+new Date,e,M,e.screen,x(t)]}}function x(S){return String.fromCharCode.apply(0,S)}if(g(r.random(),t),n.exports){n.exports=f;try{d=PR}catch{}}else r["seed"+o]=f})(typeof self<"u"?self:kr,[],Math)})(P1);var DR=P1.exports,LR=_R,kR=ER,FR=TR,OR=CR,UR=MR,BR=RR,wi=DR;wi.alea=LR;wi.xor128=kR;wi.xorwow=FR;wi.xorshift7=OR;wi.xor4096=UR;wi.tychei=BR;var jh=wi;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kh{constructor(e,t,r,s,i){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=jh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,i,a;do s=2*this.random()-1,i=2*this.random()-1,a=s*s+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class $R{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const i=s||Math.random();this.randu=jh.alea(i.toString()),this.randn=new Kh(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,i,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<t||Math.log(i)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class zR{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=jh.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n,e,t=1,r="float32",s){if(Qn(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const i=new $R(e,t,r,s),a=Bt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const GR=V({randomGamma_:VR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,e=0,t=1,r,s){if(Qn(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const i=new Kh(e,t,r,!1,s),a=Bt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const D1=V({randomNormal_:WR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return D1(n,0,1,e,t)}const XR=V({randomStandardNormal_:HR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e=0,t=1,r="float32",s){Qn(n);const i=Bt(n,r),a=new zR(e,t,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const Yh=V({randomUniform_:qR});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t,r){return Yh(n,e,t,"int32",r)}const KR=V({randomUniformInt_:jR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return W.runKernel($0,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const t={input:I(n,"input","real")};return W.runKernel(z0,t)}const vo=V({real_:YR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n){const t={x:I(n,"x","reciprocal")};return W.runKernel(V0,t)}const ZR=V({reciprocal_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n){const t={x:I(n,"x","relu")};return W.runKernel(G0,t)}const Bo=V({relu_:JR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(n){const t={x:I(n,"x","relu6")};return W.runKernel(q0,t)}const L1=V({relu6_:eI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n,e){const r={x:I(n,"x","reverse")},s={dims:e};return W.runKernel(j0,r,s)}const gi=V({reverse_:tI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n){const e=I(n,"x","reverse");return L(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gi(e,0)}const rI=V({reverse1d_:nI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n,e){const t=I(n,"x","reverse");return L(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),gi(t,e)}const iI=V({reverse2d_:sI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n,e){const t=I(n,"x","reverse");return L(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),gi(t,e)}const oI=V({reverse3d_:aI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n,e){const t=I(n,"x","reverse");return L(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),gi(t,e)}const uI=V({reverse4d_:lI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n){const t={x:I(n,"x","round")};return W.runKernel(K0,t)}const k1=V({round_:cI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n){const t={x:I(n,"x","rsqrt","float32")};return W.runKernel(Y0,t)}const dI=V({rsqrt_:hI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(n){const t={x:I(n,"x","selu")};return W.runKernel(ty,t)}const pI=V({selu_:fI});function mI(n,e,t,r,s,i=[1,1],a="NHWC"){const o=I(n,"x","separableConv2d"),l=I(e,"depthwiseFilter","separableConv2d"),u=I(t,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(o.rank===3&&(h=!0,c=pe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");L(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),L(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),L(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),L(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),L(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],f=l.shape[3];L(u.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`);const m=Uh(c,l,r,s,a,i),p=hu(m,u,1,"valid",a);return h?pe(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const gI=V({separableConv2d_:mI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yI(n,e){const t=I(n,"x","setdiff1d"),r=I(e,"y","setdiff1d");L(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),L(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),L(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),i=await r.data(),a=new Set(i);let o=0;for(let c=0;c<s.length;c++)a.has(s[c])||o++;const l=new pa([o],t.dtype),u=new pa([o],"int32");for(let c=0,h=0;c<s.length;c++)a.has(s[c])||(l.values[h]=s[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const vI=yI;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xI(n){const t={x:I(n,"x","sign")};return W.runKernel(iy,t)}const bI=V({sign_:xI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n){const t={x:I(n,"x","sin","float32")};return W.runKernel(ry,t)}const AI=V({sin_:wI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SI(n){const t={x:I(n,"x","sinh")};return W.runKernel(sy,t)}const _I=V({sinh_:SI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(n,e,t){const r=I(n,"x","slice1d");return L(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Pt(r,[e],[t])}const TI=V({slice1d_:EI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CI(n,e,t){const r=I(n,"x","slice2d");return L(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Pt(r,e,t)}const MI=V({slice2d_:CI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,e,t){const r=I(n,"x","slice3d");return L(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Pt(r,e,t)}const II=V({slice3d_:RI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n,e,t){const r=I(n,"x","slice4d");return L(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Pt(r,e,t)}const PI=V({slice4d_:NI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(n,e=-1){const t=I(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return W.runKernel(dy,r,s)}const LI=V({softmax_:DI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kI(n){L(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(Xg,e)}const Qh=V({fft_:kI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(n){L(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return W.runKernel(n0,e)}const Vl=V({ifft_:FI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=pe(n,[t,e]);r=Vl(s)}else{const s=[t,2*(e-1)],i=pe(vo(n),[t,e]),a=pe(mu(n),[t,e]),o=gi(Pt(i,[0,1],[t,e-2]),1),l=Pe(gi(Pt(a,[0,1],[t,e-2]),1),yt(-1)),u=Sn([i,o],1),c=Sn([a,l],1),h=pe(Ds(u,c),[s[0],s[1]]);r=Vl(h)}if(r=vo(r),n.rank===3&&n.shape[0]!==0){const s=r,i=n.shape[0];r=pe(r,[i,r.shape[0]/i,r.shape[1]]),s.dispose()}return r}const F1=V({irfft_:OI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(n,e,t=0){const s={x:I(n,"x","split")},i={numOrSizeSplits:e,axis:t};return W.runKernel(hy,s,i)}const xo=V({split_:UI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n,e){L(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const m=n.shape.map(p=>0),y=n.shape.map(p=>p);y[n.shape.length-1]=e,s=Pt(n,m,y),t=e}else if(e!=null&&e>t){const m=n.shape.map(y=>y);m[n.shape.length-1]=e-t,s=Sn([n,mi(m)],n.shape.length-1),t=e}else s=n;const i=Kn(s),a=pe(Ds(s,i),[r,t]),o=Qh(a),l=Math.floor(t/2)+1,u=vo(o),c=mu(o),h=xo(u,[l,t-l],u.shape.length-1),d=xo(c,[l,t-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,pe(Ds(h[0],d[0]),f)}const Zh=V({rfft_:BI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n,e){let t=I(n,"a","squaredDifference"),r=I(e,"b","squaredDifference");[t,r]=Gt(t,r),Rt(t.shape,r.shape);const s={a:t,b:r},i={};return W.runKernel(gy,s,i)}const O1=V({squaredDifference_:$I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n,e){const t=I(n,"x","squeeze","string_or_numeric");return pe(t,M_(t.shape,e).newShape)}const gu=V({squeeze_:zI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(n,e=0){const t=Ll(n,"tensors","stack","string_or_numeric");L(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&L(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return W.runKernel(k0,r,s)}const as=V({stack_:VI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(n,e=0){const r={x:I(n,"x","step")},s={alpha:e};return W.runKernel(Cy,r,s)}const U1=V({step_:GI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n,e,t,r,s=0,i=0,a=0,o=0,l=0){const c={x:I(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return W.runKernel(yy,c,h)}const HI=V({stridedSlice_:WI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n){const t={x:I(n,"x","tan","float32")};return W.runKernel(by,t)}const qI=V({tan_:XI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(n,e){Aa(n);const t=ks(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fs(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(n,e,t){if(Aa(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=ks(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,e,t){if(Aa(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=ks(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Fs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(n,e,t){if(Aa(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=ks(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Fs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,e,t){if(Aa(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=ks(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Fs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,e,t){if(Aa(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=ks(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Fs(n,e,r,t)}function QI(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(i+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(i+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(i+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(i+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function $1(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}QI(t,e,n)}function Jh(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=t.length;let a=1;for(let h=s;h<i;++h)a*=t[h];const o=s<1?1:s,l=Te(e.shape)/o,u=[...gn(t.slice(0,s)),1],c=Te(t);return{sliceRank:s,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,e,t){const r=I(n,"tensor","tensorScatterupdate"),s=I(e,"indices","tensorScatterupdate","int32"),i=I(t,"updates","tensorScatterupdate");if($1(i,s,r.shape),r.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${i.dtype}.`);const a={tensor:r,indices:s,updates:i},o={};return W.runKernel(Z0,a,o)}const JI=V({tensorScatterUpdate_:ZI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e=1,t=!0){const r=I(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:t},[o,l]=W.runKernel(Ay,i,a);return{values:o,indices:l}}const tN=V({topk_:eN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e=0,t=1,r,s){if(Qn(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new Kh(e,t,r,!0,s),a=Bt(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const rN=V({truncatedNormal_:nN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,e=0){const t=I(n,"x","unique","string_or_numeric");L(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[i,a]=W.runKernel(cE,r,s);return{values:i,indices:a}}const iN=V({unique_:sN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,e,t){const r=I(n,"x","unsortedSegmentSum"),s=I(e,"segmentIds","unsortedSegmentSum","int32");L(ho(t),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},a={numSegments:t};return W.runKernel(Ey,i,a)}const oN=V({unsortedSegmentSum_:aN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,e=0){const t=I(n,"x","unstack","string_or_numeric");L(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return W.runKernel(_y,r,s)}const Ai=V({unstack_:lN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n,e){return zh(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n,e=!0,t,r){return W.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const r=Bt(n,"int32"),s=Bt([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const a=r.indexToLoc(t[i]),o=i*n.length;s.values.set(a,o)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dN(n){const e=I(n,"condition","whereAsync","bool"),t=await e.data(),r=hN(e.shape,t);return n!==e&&e.dispose(),r}const z1=dN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fN(n,e,t){const r=I(n,"tensor","boolMask"),s=I(e,"mask","boolMask","bool"),i=t??0,a=s.rank,o=r.shape;L(a>0,()=>"mask cannot be scalar"),Yn(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let y=i;y<i+a;y++)l*=o[y];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=pe(r,u),h=pe(s,[-1]),d=await z1(h),f=gu(d,[1]),m=x1(c,f,i);return n!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),c.dispose(),h.dispose(),d.dispose(),m}const pN=fN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n,e,t){const r=I(n,"x","transpose");if(e==null&&(e=r.shape.map((a,o)=>o).reverse()),L(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{L(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},i={perm:e};return r.dtype==="complex64"?bt(()=>{let a=vo(r),o=mu(r);return a=W.runKernel(Al,{x:a},i),o=W.runKernel(Al,{x:o},i),t&&(o=Or(o)),Ds(a,o)}):W.runKernel(Al,s,i)}const nh=V({transpose_:mN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,e,t,r,s=!0){const i=I(n,"v","movingAverage"),a=I(e,"x","movingAverage"),o=I(t,"decay","movingAverage");kE(i,a),L(Nn(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=yt(1),u=ot(l,o);let c=Pe(ot(a,i),u);if(s){L(r!=null,()=>"When using zeroDebias: true, step is required.");const h=I(r,"step","movingAverage");c=Mt(c,ot(l,mo(o,h)))}return et(i,c)}const yN=V({movingAverage_:gN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,t){Qn(t);const r=I(n,"indices","scatterND","int32"),s=I(e,"updates","scatterND");$1(s,r,t);const i={indices:r,updates:s},a={shape:t};return W.runKernel(Q0,i,a)}const xN=V({scatterND_:vN});function bN(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e,t,r=0){Qn(t);const s=I(n,"sparseIndices","sparseToDense","int32"),i=I(e,"sparseValues","sparseToDense","string_or_numeric"),a=I(r,"defaultValue","sparseToDense",i.dtype);bN(s,i,t,a);const o={sparseIndices:s,sparseValues:i,defaultValue:a},l={outputShape:t};return W.runKernel(my,o,l)}const AN=V({sparseToDense_:wN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,e){const t=I(e,"indices","gatherND","int32"),s={params:I(n,"x","gatherND","string_or_numeric"),indices:t};return W.runKernel(Jg,s)}const _N=V({gatherND_:SN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,e){if(e==null)return n.shape.slice();if(Nn(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,e,t,r){const s=I(n,"x","dropout");if(L(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),L(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof fn?s.clone():s;const i=EN(s,t),a=1-e,o=Mt(v1(et(Yh(i,0,1,"float32",r),a)),a);return Pe(s,o)}const CN=V({dropout_:TN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function ed(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+r-1);s[i]=e-t*Math.cos(a)}return or(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function MN(n,e,t=1){const r=I(n,"predictions","inTopK"),s=I(e,"targets","inTopK");L(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),L(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Yn(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];L(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const a=await r.data(),o=await s.data(),[l,u]=[a.length/i,i],c=Ns("bool",l);for(let h=0;h<l;h++){const d=h*u,f=a.subarray(d,d+u),m=[];for(let y=0;y<f.length;y++)m.push({value:f[y],index:y});m.sort((y,p)=>p.value-y.value),c[h]=0;for(let y=0;y<t;y++)if(m[y].index===o[h]){c[h]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),Fr(c,s.shape,"bool")}const RN=MN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,e,t,r,s,i="NHWC",a){let o=n;n.rank===3&&(o=pe(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=pe(e,[1,e.shape[0],e.shape[1],e.shape[2]])),L(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),L(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),L(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=i==="NHWC"?o.shape[3]:o.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];L(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),L(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Cr("conv2dDerFilter",s,a);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:t};return W.runKernel(Ag,h,d)}const NN=V({conv2DBackpropFilter_:IN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function td(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Pe(n,U1(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function nd(n,e){let t=e;const r=gC(n.shape,e.shape);return r.length>0&&(t=Ft(t,r)),pe(t,n.shape)}function rd(n,e,t,r){if(e==="linear")return n;if(e==="relu")return Bo(n);if(e==="elu")return f1(n);if(e==="relu6")return L1(n);if(e==="prelu")return N1(n,t);if(e==="leakyrelu")return w1(n,r);if(e==="sigmoid")return ia(n);throw new Error(`Unknown fused activation ${e}.`)}const sd=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",sd(W.state.gradientDepth,l)===!1){L(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let M=hu(n,e,t,r,s,i,a);return o!=null&&(M=et(M,o)),rd(M,l,u,c)}const h=I(n,"x","conv2d","float32"),d=I(e,"filter","conv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=pe(h,[1,h.shape[0],h.shape[1],h.shape[2]])),L(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),L(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Cr("fused conv2d",r,a);const y=s==="NHWC"?f.shape[3]:f.shape[1];L(d.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${d.shape[2]}.`),L($r(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const p=hr(f.shape,d.shape,t,i,r,a);let g;o!=null&&(g=I(o,"bias","fused conv2d"),[g]=Gt(g,h),s==="NHWC"?Rt(p.outShape,g.shape):(L(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),L(g.shape.length===0||g.shape[0]===p.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${p.outChannels})`)));let A;if(u!=null){const M=u.shape;if(L(M.length<=1||M.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${M.length}.`),M.length===1)L(M[0]===1||M[0]===p.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the number of output channels (${p.outChannels}).`);else if(M.length===3)try{Rt(M,p.outShape)}catch{const O=`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the output shape of the conv2d (${p.outShape}).`;throw Error(O)}A=I(u,"prelu weights","fused conv2d")}const x=(M,R)=>{L(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[O,C,N,$]=R,q=td(M,N,l);L(Fl(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const z=h1(C.shape,q,O,t,r),F=NN(C,q,O.shape,t,r),X=[z,F];if($!=null){const Q=nd($,q);X.push(Q)}return X},S={x:f,filter:d,bias:g,preluActivationWeights:A},E={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?is((R,O,C)=>{let N=W.runKernel($c,S,E);return C([O,R,N]),m&&(N=pe(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:x}})(f,d):is((R,O,C,N)=>{let $=W.runKernel($c,S,E);return N([O,R,$,C]),m&&($=pe($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(f,d,g)}const DN=V({fusedConv2d_:PN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n,e,t,r,s,i=[1,1],a){let o=n;n.rank===3&&(o=pe(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=pe(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:t};return W.runKernel(Lg,u,c)}const kN=V({depthwiseConv2dNativeBackpropFilter_:LN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n,e,t,r,s,i=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=pe(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:t},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:n},h=W.runKernel(kg,u,c);return l?pe(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ON=V({depthwiseConv2dNativeBackpropInput_:FN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(sd(W.state.gradientDepth,l)===!1){let E=Uh(n,e,t,r,s,i,a);return o!=null&&(E=et(E,o)),rd(E,l,u,c)}const h=I(n,"x","depthwiseConv2d","float32"),d=I(e,"filter","depthwiseConv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=pe(h,[1,h.shape[0],h.shape[1],h.shape[2]])),L(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),L(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),L(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),L($r(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Cr("fused depthwiseConv2d",r,a);const y=hr(f.shape,d.shape,t,i,r,a,!0);let p;o!=null&&(p=I(o,"bias","fused conv2d"),[p]=Gt(p,h),Rt(y.outShape,p.shape));let g;u!=null&&(g=I(u,"prelu weights","fused depthwiseConv2d"));const A=(E,M)=>{L(Fl(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[R,O,C,N]=M,$=td(E,C,l),q=ON(O.shape,$,R,t,r,i,a),z=kN(O,$,R.shape,t,r,i,a);if(N!=null){const F=nd(p,$);return[q,z,F]}return[q,z]},x={x:f,filter:d,bias:p,preluActivationWeights:g},S={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?is((M,R,O)=>{let C=W.runKernel(zc,x,S);return O([R,M,C]),m&&(C=pe(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:A}})(f,d):is((M,R,O,C)=>{let N=W.runKernel(zc,x,S);return C([R,M,N,O]),m&&(N=pe(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:A}})(f,d,p)}const BN=V({fusedDepthwiseConv2d_:UN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(sd(W.state.gradientDepth,i)===!1){let $=Tt(n,e,t,r);return s!=null&&($=et($,s)),rd($,i,a,o)}let l=I(n,"a","fused matMul"),u=I(e,"b","fused matMul");[l,u]=Gt(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),y=u.shape.slice(0,-2),p=Te(m),g=Te(y);L(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${r} must match.`);const x=Rt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,f]),S=t?pe(l,[p,c,d]):pe(l,[p,d,c]),E=r?pe(u,[g,f,h]):pe(u,[g,h,f]);let M;s!=null&&(M=I(s,"bias","fused matMul"),[M]=Gt(M,l),Rt(x,M.shape));let R;a!=null&&(R=I(a,"prelu weights","fused matMul"));const O=($,q)=>{const[z,F,X,Q]=q,Z=td(pe($,X.shape),X,i);let ie,de;if(!t&&!r?(ie=Tt(Z,F,!1,!0),de=Tt(z,Z,!0,!1)):!t&&r?(ie=Tt(Z,F,!1,!1),de=Tt(Z,z,!0,!1)):t&&!r?(ie=Tt(F,Z,!1,!0),de=Tt(z,Z,!1,!1)):(ie=Tt(F,Z,!0,!0),de=Tt(Z,z,!0,!0)),s!=null){const ve=nd(Q,Z);return[ie,de,ve]}else return[ie,de]},C={a:S,b:E,bias:M,preluActivationWeights:R},N={transposeA:t,transposeB:r,activation:i,leakyreluAlpha:o};return s==null?is((q,z,F)=>{const X=W.runKernel(Bc,C,N);return F([q,z,X]),{value:pe(X,x),gradFunc:O}})(S,E):is((q,z,F,X)=>{const Q=W.runKernel(Bc,C,N);return X([q,z,Q,F]),{value:pe(Q,x),gradFunc:O}})(S,E,M)}const zN=V({fusedMatMul_:$N});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN=Object.freeze(Object.defineProperty({__proto__:null,conv2d:DN,depthwiseConv2d:BN,matMul:zN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n){return ed(n,.54,.46)}const WN=V({hammingWindow_:GN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n){return ed(n,.5,.5)}const G1=V({hannWindow_:HN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,e,t,r=!1,s=0){let i=0;const a=[];for(;i+e<=n.size;)a.push(Pt(n,i,e)),i+=t;if(r)for(;i<n.size;){const o=i+e-n.size,l=Sn([Pt(n,i,e-o),Lo([o],s)]);a.push(l),i+=t}return a.length===0?io([],[0,e]):pe(Sn(a),[a.length,e])}const W1=V({frame_:XN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,e,t,r,s=G1){r==null&&(r=V1(e));const i=W1(n,e,t),a=Pe(i,s(e));return Zh(a,r)}const jN=V({stft_:qN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e,t,r,s="bilinear",i=0){const a=I(n,"image","cropAndResize"),o=I(e,"boxes","cropAndResize","float32"),l=I(t,"boxInd","cropAndResize","int32"),u=o.shape[0];L(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),L(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),L(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),L(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),L(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),L(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return W.runKernel(Ig,c,h)}const YN=V({cropAndResize_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){const e=I(n,"image","flipLeftRight","float32");L(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return W.runKernel(jg,t,{})}const ZN=V({flipLeftRight_:QN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n){const e=I(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];L(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),L(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,so(e,s)}const eP=V({grayscaleToRGB_:JN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n){const e=I(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];L(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),L(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,i=qt(e,"float32"),a=or([.2989,.587,.114]);let o;switch(e.rank){case 2:o=Zi("ij,j->i",i,a);break;case 3:o=Zi("ijk,k->ij",i,a);break;case 4:o=Zi("ijkl,l->ijk",i,a);break;case 5:o=Zi("ijklm,m->ijkl",i,a);break;case 6:o=Zi("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=jr(o,-1),qt(o,s)}const nP=V({rgbToGrayscale_:tP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n,e,t=0,r=.5){const s=I(n,"image","rotateWithOffset","float32");L(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},a={radians:e,fillValue:t,center:r};return W.runKernel(My,i,a)}const sP=V({rotateWithOffset_:rP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(n,e,t,r,s,i){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return t=Math.min(t,a),L(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),L(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),L(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),L(e.rank===1,()=>"scores must be a 1D tensor"),L(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),L(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=I(n,"boxes","nonMaxSuppression","float32"),a=I(e,"scores","nonMaxSuppression","float32"),o=Ea(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return W.runKernel(N0,{boxes:i,scores:a},l)}const aP=V({nonMaxSuppression_:iP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,e,t){const r=lP(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function lP(n,e,t){return cP(n,e,t||uP)}function uP(n,e){return n>e?1:n<e?-1:0}function cP(n,e,t){let r=0,s=n.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=t(e,n[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1(n,e,t,r,s){return id(n,e,t,r,s,0)}function hP(n,e,t,r,s,i){return id(n,e,t,r,s,0,!1,i,!0)}function X1(n,e,t,r,s,i){return id(n,e,t,r,s,i,!0)}function id(n,e,t,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let p=0;p<e.length;p++)e[p]>s&&u.push({score:e[p],boxIndex:p,suppressBeginIndex:0});u.sort(ip);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<t&&u.length>0;){const p=u.pop(),{score:g,boxIndex:A,suppressBeginIndex:x}=p;if(g<s)break;let S=!1;for(let E=h.length-1;E>=x;--E){const M=dP(n,A,h[E]);if(M>=r){S=!0;break}if(p.score=p.score*fP(r,c,M),p.score<=s)break}p.suppressBeginIndex=h.length,S||(p.score===g?(h.push(A),d.push(p.score)):p.score>s&&oP(u,p,ip))}const f=h.length,m=t-f;o&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const y={selectedIndices:h};return a&&(y.selectedScores=d),l&&(y.validOutputs=f),y}function dP(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),f=(o-i)*(l-a),m=(h-u)*(d-c);if(f<=0||m<=0)return 0;const y=Math.max(i,u),p=Math.max(a,c),g=Math.min(o,h),A=Math.min(l,d),x=Math.max(g-y,0)*Math.max(A-p,0);return x/(f+m-x)}function fP(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function ip(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=I(n,"boxes","nonMaxSuppressionAsync"),a=I(e,"scores","nonMaxSuppressionAsync"),o=Ea(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=H1(u,c,t,r,s);return i!==n&&i.dispose(),a!==e&&a.dispose(),or(h,"int32")}const mP=pP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=I(n,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ea(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=W.runKernel(P0,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const yP=V({nonMaxSuppressionWithScore_:gP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function vP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=I(n,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ea(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:f}=X1(c,h,t,r,s,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:or(d,"int32"),selectedScores:or(f)}}const xP=vP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=I(n,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ea(a,o,t,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},m=W.runKernel(Z_,d,f);return{selectedIndices:m[0],validOutputs:m[1]}}const wP=V({nonMaxSuppressionPadded_:bP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function AP(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=I(n,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ea(a,o,t,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([a.data(),o.data()]),{selectedIndices:m,validOutputs:y}=hP(d,f,u,c,h,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:or(m,"int32"),validOutputs:yt(y,"int32")}}const SP=AP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n,e,t=!1,r=!1){const s=I(n,"images","resizeBilinear");L(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),L(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),L(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=pe(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=W.runKernel(X0,o,l);return a?pe(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const EP=V({resizeBilinear_:_P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(n,e,t=!1,r=!1){const s=I(n,"images","resizeNearestNeighbor");L(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),L(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),L(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),L(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=pe(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=W.runKernel(H0,o,l);return a?pe(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const CP=V({resizeNearestNeighbor_:TP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(n,e="binary",t=!1,r=.5){const s=I(n,"image","threshold"),i=.2989,a=.587,o=.114,l=s.shape[0]*s.shape[1];let u=Pe(or([r]),255),c,h,d,f;if(L(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),L(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),L(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),L(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[c,h,d]=xo(s,[1,1,1],-1);const p=Pe(c,i),g=Pe(h,a),A=Pe(d,o);f=et(et(p,g),A)}else f=n;if(e==="otsu"){const p=c1(qt(k1(f),"int32"),Fr([]),256);u=RP(p,l)}const m=t?$h(f,u):pu(f,u);return qt(Pe(m,255),"int32")}function RP(n,e){let t=or([-1]),r=or([0]),s=or([0]),i,a,o,l,u,c;for(let h=0;h<n.size-1;h++){i=Pt(n,0,h+1),a=Pt(n,h+1),u=Mt(Ft(i),e),c=Mt(Ft(a),e);const d=Ft(Pe(i,yo(0,i.size)));o=Mt(d,Ft(i));const f=Lo(a.shape,i.size),m=et(yo(0,a.size),f),y=Pe(a,m);l=Mt(Ft(y),Ft(a));const p=ot(o,l),g=ot(o,l),A=Pe(u,c);s=Pe(Pe(A,p),g);const x=pu(s,r);r=Cs(x,s,r),t=Cs(x,or([h]),t)}return t}const IP=V({threshold_:MP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,e,t="nearest",r="constant",s=0,i){const a=I(n,"image","transform","float32"),o=I(e,"transforms","transform","float32");L(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),L(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),L(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:t,fillMode:r,fillValue:s,outputShape:i};return W.runKernel(Sy,l,u)}const PP=V({transform_:NP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,e,t){const r=I(n,"a","bandPart");L(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,a]=r.shape.slice(-2);let o,l;typeof e=="number"?(L(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),L(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),o=I(e<0?i:e,"numLower","bandPart")):(L(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Cs(th(e,0),i,zl(e,i))),typeof t=="number"?(L(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),L(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),l=I(t<0?a:t,"numUpper","bandPart")):(L(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Cs(th(t,0),a,zl(t,a)));const u=pe(yo(0,i,1,"int32"),[-1,1]),c=yo(0,a,1,"int32"),h=ot(u,c),d=Bl($h(h,o),b1(h,Or(l))),f=mi([i,a],r.dtype);return pe(as(Ai(pe(r,[-1,i,a])).map(m=>Cs(d,m,f))),s)}const LP=V({bandPart_:DP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n){let e;if(Array.isArray(n)){e=!1,L(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let i=1;i<n.length;++i)L(n[i].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${s})`)}else e=!0,n=xo(n,n.shape[0],0).map(s=>gu(s,[0]));L(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(W.tidy(()=>{let i=r[s];if(s>0)for(let a=0;a<s;++a){const o=Pe(Ft(Pe(t[a],i)),t[a]);i=ot(i,o)}return Mt(i,fu(i,"euclidean"))}));return e?as(t,0):t}const FP=V({gramSchmidt_:kP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n,e=!1){if(L(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return ap(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),r=Ai(pe(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],i=[];r.forEach(l=>{const[u,c]=ap(l,e);s.push(u),i.push(c)});const a=pe(as(s,0),n.shape),o=pe(as(i,0),n.shape);return[a,o]}}function ap(n,e=!1){return W.tidy(()=>{L(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=y1(t),i=Ts(n);const a=io([[1]],[1,1]);let o=Ts(a);const l=t>=r?r:t;for(let u=0;u<l;++u){const c=i,h=o,d=s;[o,i,s]=W.tidy(()=>{const f=Pt(i,[u,u],[t-u,1]),m=fu(f),y=Pt(i,[u,u],[1,1]),p=Cs(pu(y,0),io([[-1]]),io([[1]])),g=ot(y,Pe(p,m)),A=Mt(f,g);A.shape[0]===1?o=Ts(a):o=Sn([a,Pt(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);const x=Or(Mt(Tt(p,g),m)),S=Pt(i,[u,0],[t-u,r]),E=Pe(x,o),M=nh(o);if(u===0)i=ot(S,Tt(E,Tt(M,S)));else{const C=ot(S,Tt(E,Tt(M,S)));i=Sn([Pt(i,[0,0],[u,r]),C],0)}const R=nh(E),O=Pt(s,[0,u],[t,s.shape[1]-u]);if(u===0)s=ot(O,Tt(Tt(O,o),R));else{const C=ot(O,Tt(Tt(O,o),R));s=Sn([Pt(s,[0,0],[t,u]),C],1)}return[o,i,s]}),Rn([c,h,d])}return!e&&t>r&&(s=Pt(s,[0,0],[t,r]),i=Pt(i,[0,0],[r,r])),[s,i]})}const UP=V({qr_:OP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Mn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Mn||(Mn={}));function BP(n,e,t=Mn.SUM_BY_NONZERO_WEIGHTS){const r=I(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=I(e,"weights","computeWeightedLoss"));const i=s==null?r:Pe(r,s);if(t===Mn.NONE)return i;if(t===Mn.SUM)return Ft(i);if(t===Mn.MEAN){if(s==null)return $l(i);{const a=r.size/s.size,o=Mt(Ft(i),Ft(s));return a>1?Mt(o,yt(a)):o}}if(t===Mn.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Mt(Ft(i),yt(r.size));{const a=Pe(s,ti(r.shape)),o=qt(Ft(R1(a,yt(0))),"float32");return Mt(Ft(i),o)}}throw Error(`Unknown reduction: ${t}`)}const ls=V({computeWeightedLoss_:BP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(n,e,t,r=Mn.SUM_BY_NONZERO_WEIGHTS){const s=I(n,"labels","absoluteDifference"),i=I(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=I(t,"weights","absoluteDifference")),Yn(s.shape,i.shape,"Error in absoluteDifference: ");const o=jn(ot(s,i));return ls(o,a,r)}const zP=V({absoluteDifference_:$P});function VP(n,e,t,r,s=Mn.SUM_BY_NONZERO_WEIGHTS){const i=I(n,"labels","cosineDistance"),a=I(e,"predictions","cosineDistance");let o=null;r!=null&&(o=I(r,"weights","cosineDistance")),Yn(i.shape,a.shape,"Error in cosineDistance: ");const l=yt(1),u=ot(l,Ft(Pe(i,a),t,!0));return ls(u,o,s)}const GP=V({cosineDistance_:VP});function WP(n,e,t,r=Mn.SUM_BY_NONZERO_WEIGHTS){let s=I(n,"labels","hingeLoss");const i=I(e,"predictions","hingeLoss");let a=null;t!=null&&(a=I(t,"weights","hingeLoss")),Yn(s.shape,i.shape,"Error in hingeLoss: ");const o=yt(1);s=ot(Pe(yt(2),s),o);const l=Bo(ot(o,Pe(s,i)));return ls(l,a,r)}const HP=V({hingeLoss_:WP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n,e,t,r=1,s=Mn.SUM_BY_NONZERO_WEIGHTS){const i=I(n,"labels","huberLoss"),a=I(e,"predictions","huberLoss");let o=null;t!=null&&(o=I(t,"weights","huberLoss")),Yn(i.shape,a.shape,"Error in huberLoss: ");const l=yt(r),u=jn(ot(a,i)),c=zl(u,l),h=ot(u,c),d=et(Pe(yt(.5),Sr(c)),Pe(l,h));return ls(d,o,s)}const qP=V({huberLoss_:XP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(n,e,t,r=1e-7,s=Mn.SUM_BY_NONZERO_WEIGHTS){const i=I(n,"labels","logLoss"),a=I(e,"predictions","logLoss");let o=null;t!=null&&(o=I(t,"weights","logLoss")),Yn(i.shape,a.shape,"Error in logLoss: ");const l=yt(1),u=yt(r),c=Or(Pe(i,go(et(a,u)))),h=Pe(ot(l,i),go(et(ot(l,a),u))),d=ot(c,h);return ls(d,o,s)}const KP=V({logLoss_:jP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,e,t,r=Mn.SUM_BY_NONZERO_WEIGHTS){const s=I(n,"labels","meanSquaredError"),i=I(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=I(t,"weights","meanSquaredError")),Yn(s.shape,i.shape,"Error in meanSquaredError: ");const o=O1(s,i);return ls(o,a,r)}const QP=V({meanSquaredError_:YP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,e){const t=I(n,"labels","sigmoidCrossEntropyWithLogits"),r=I(e,"logits","sigmoidCrossEntropyWithLogits");Yn(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Bo(r),i=Pe(r,t),a=A1(pi(Or(jn(r))));return et(ot(s,i),a)}function JP(n,e,t,r=0,s=Mn.SUM_BY_NONZERO_WEIGHTS){let i=I(n,"multiClassLabels","sigmoidCrossEntropy");const a=I(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=I(t,"weights","sigmoidCrossEntropy")),Yn(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const u=yt(r),c=yt(1),h=yt(.5);i=et(Pe(i,ot(c,u)),Pe(h,u))}const l=ZP(i,a);return ls(l,o,s)}const eD=V({sigmoidCrossEntropy_:JP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return is((s,i,a)=>{const l=_1(i,[t],!0),u=ot(qt(i,"float32"),l);a([s,u]);const c=Or(Pe(u,s));return{value:Ft(c,[t]),gradFunc:(f,m)=>{const[y,p]=m,g=ko(f.shape,[t]);return[Pe(pe(f,g),ot(qt(y,"float32"),pi(p))),Pe(pe(f,g),ot(pi(p),qt(y,"float32")))]}}})(n,e)}function nD(n,e,t,r=0,s=Mn.SUM_BY_NONZERO_WEIGHTS){let i=I(n,"onehotLabels","softmaxCrossEntropy");const a=I(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=I(t,"weights","softmaxCrossEntropy")),Yn(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const u=yt(r),c=yt(1),h=yt(i.shape[1]);i=et(Pe(i,ot(c,u)),Mt(u,h))}const l=tD(i,a);return ls(l,o,s)}const rD=V({softmaxCrossEntropy_:nD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e,t,r){const s=I(n,"indices","sparseFillEmptyRows","int32"),i=I(e,"values","sparseFillEmptyRows"),a=I(t,"denseShape","sparseFillEmptyRows","int32"),o=I(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=W.runKernel(sE,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const iD=V({sparseFillEmptyRows_:sD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e,t){const r=I(n,"inputIndices","sparseReshape","int32"),s=I(e,"inputShape","sparseReshape","int32"),i=I(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=W.runKernel(iE,a);return{outputIndices:o[0],outputShape:o[1]}}const oD=V({sparseReshape_:aD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e,t){const r=I(n,"data","sparseSegmentMean"),s=I(e,"indices","sparseSegmentMean","int32"),i=I(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return W.runKernel(fy,a)}const uD=V({sparseSegmentMean_:lD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e,t){const r=I(n,"data","sparseSegmentSum"),s=I(e,"indices","sparseSegmentSum","int32"),i=I(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return W.runKernel(py,a)}const hD=V({sparseSegmentSum_:cD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e,t,r,s,i,a,o){const l=I(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=I(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=W.runKernel(vy,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const fD=V({stringNGrams_:dD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e,t=!0){const r=I(n,"input","stringSplit","string"),s=I(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:t},a={input:r,delimiter:s},o=W.runKernel(lE,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const mD=V({stringSplit_:pD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e){const t=I(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return W.runKernel(uE,s,r)}const yD=V({stringToHashBucketFast_:gD});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n,e,t,r=!0){const s=I(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:r};return W.runKernel(oE,{x:s},i)}const xD=V({staticRegexReplace_:vD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bD={fft:Qh,ifft:Vl,rfft:Zh,irfft:F1},wD={hammingWindow:WN,hannWindow:G1,frame:W1,stft:jN},q1={flipLeftRight:ZN,grayscaleToRGB:eP,resizeNearestNeighbor:CP,resizeBilinear:EP,rgbToGrayscale:nP,rotateWithOffset:sP,cropAndResize:YN,nonMaxSuppression:aP,nonMaxSuppressionAsync:mP,nonMaxSuppressionWithScore:yP,nonMaxSuppressionWithScoreAsync:xP,nonMaxSuppressionPadded:wP,nonMaxSuppressionPaddedAsync:SP,threshold:IP,transform:PP},AD={bandPart:LP,gramSchmidt:FP,qr:UP},SD={absoluteDifference:zP,computeWeightedLoss:ls,cosineDistance:GP,hingeLoss:HP,huberLoss:qP,logLoss:KP,meanSquaredError:QP,sigmoidCrossEntropy:eD,softmaxCrossEntropy:rD},_D={sparseFillEmptyRows:iD,sparseReshape:oD,sparseSegmentMean:uD,sparseSegmentSum:hD},ED={stringNGrams:fD,stringSplit:mD,stringToHashBucketFast:yD,staticRegexReplace:xD};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD=new Map,CD=new Map;class MD{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ys{constructor(){this.classNameMap={}}static getMap(){return Ys.instance==null&&(Ys.instance=new Ys),Ys.instance}static register(e){Ys.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function RD(n,e,t){L(n.className!=null,()=>"Class being registered does not have the static className property defined."),L(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),L(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Ys.register(n),TD.set(s,n),CD.set(n,s),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Si extends MD{minimize(e,t=!1,r){const{value:s,grads:i}=this.computeGradients(e,r);if(r!=null){const a=r.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return Rn(i),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return hM(e,t)}dispose(){this.iterations_!=null&&Rn(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:yt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Si,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ID extends Si{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=W.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:bt(()=>Kn(i).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:bt(()=>Kn(i).variable(a))});const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const l=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;bt(()=>{const c=et(Pe(l,this.rho),Pe(Sr(o),1-this.rho)),h=Pe(Mt(ss(et(u,this.epsilon)),ss(et(l,this.epsilon))),o),d=et(Pe(u,this.rho),Pe(Sr(h),1-this.rho));l.assign(c),u.assign(d);const f=et(Pe(h,-this.learningRate),i);i.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Rn(this.accumulatedGrads.map(e=>e.variable)),Rn(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ND extends Si{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=W.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:bt(()=>Lo(i.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const o=this.accumulatedGrads[s].variable;bt(()=>{const l=et(o,Sr(a));o.assign(l);const u=et(Pe(Mt(a,ss(et(l,W.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Rn(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PD extends Si{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],bt(()=>{this.accBeta1=yt(t).variable(),this.accBeta2=yt(r).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);bt(()=>{const r=ot(1,this.accBeta1),s=ot(1,this.accBeta2);t.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:bt(()=>Kn(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:bt(()=>Kn(o).variable(l))});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=et(Pe(c,this.beta1),Pe(u,1-this.beta1)),f=et(Pe(h,this.beta2),Pe(Sr(u),1-this.beta2)),m=Mt(d,r),y=Mt(f,s);c.assign(d),h.assign(f);const p=et(Pe(Mt(m,et(ss(y),this.epsilon)),-this.learningRate),o);o.assign(p)}),this.accBeta1.assign(Pe(this.accBeta1,this.beta1)),this.accBeta2.assign(Pe(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Rn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Rn(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),bt(()=>{this.accBeta1.assign(mo(this.beta1,this.iterations_+1)),this.accBeta2.assign(mo(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DD extends Si{static get className(){return"Adamax"}constructor(e,t,r,s=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],bt(()=>{this.iteration=yt(0).variable(),this.accBeta1=yt(t).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);bt(()=>{const r=ot(1,this.accBeta1),s=Mt(-this.learningRate,et(Pe(this.iteration,this.decay),1));t.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:Kn(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:Kn(o).variable(l)});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=et(Pe(c,this.beta1),Pe(u,1-this.beta1)),f=Pe(h,this.beta2),m=jn(u),y=M1(f,m);c.assign(d),h.assign(y);const p=et(Pe(Mt(s,r),Mt(d,et(y,this.epsilon))),o);o.assign(p)}),this.iteration.assign(et(this.iteration,1)),this.accBeta1.assign(Pe(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Rn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Rn(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j1 extends Si{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const a=W.registeredVariables[r];bt(()=>{const o=et(Pe(this.c,i),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Dr(yt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LD extends j1{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=yt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=W.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:bt(()=>Kn(i).variable(!1))});const a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[r];o!=null&&bt(()=>{let l;const u=et(Pe(this.m,a),o);this.useNesterov?l=et(Pe(this.c,et(o,Pe(u,this.m))),i):l=et(Pe(this.c,u),i),a.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Rn(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kD extends Si{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,s==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=W.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:bt(()=>Kn(i).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:bt(()=>Kn(i).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:bt(()=>Kn(i).variable(a))});const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const l=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;bt(()=>{const c=et(Pe(l,this.decay),Pe(Sr(o),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=et(Pe(h,this.decay),Pe(o,1-this.decay)),f=Mt(Pe(o,this.learningRate),ss(ot(c,et(Sr(d),this.epsilon)))),m=et(Pe(u,this.momentum),f);l.assign(c),h.assign(d),u.assign(m);const y=ot(i,m);i.assign(y)}else{const h=et(Pe(l,this.decay),Pe(Sr(o),1-this.decay)),d=et(Pe(u,this.momentum),Mt(Pe(o,this.learningRate),ss(et(h,this.epsilon))));l.assign(h),u.assign(d);const f=ot(i,d);i.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Rn(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Rn(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Rn(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD=[ID,ND,PD,DD,LD,kD,j1];function OD(){for(const n of FD)RD(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD="model",BD=".json",$D=".weights.bin";function op(n){return new Promise(e=>setTimeout(e)).then(n)}class yi{constructor(e){if(!qe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(yi.URL_SCHEME)&&(e=e.slice(yi.URL_SCHEME.length)),(e==null||e.length===0)&&(e=UD),this.modelJsonFileName=e+BD,this.weightDataFileName=e+$D}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Tr.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=Ky(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await op(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=r,await op(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Do(e)}}}}yi.URL_SCHEME="downloads://";class zD{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const i=JSON.parse(s.target.result),a=i.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const l=Fh(i,u=>this.loadWeights(u));e(l)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),i=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(i).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;r(o)},i.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(i=>sp(i.name)),s={};for(const i of e)i.paths.forEach(a=>{const o=sp(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),r.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const VD=n=>qe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(yi.URL_SCHEME)?GD(n.slice(yi.URL_SCHEME.length)):null;$t.registerSaveRouter(VD);function GD(n="model"){return new yi(n)}function WD(n){return new zD(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(n,e,t,r){a(n),t=t??0,r=r??1,o(t,r);let s=0;const i=l=>(l.then(u=>{const c=t+ ++s/n.length*(r-t);return e(c),u}),l);function a(l){L(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){L(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),L(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),L(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function K1(n,e){e==null&&(e={});const t=e.fetchFunc==null?qe().platform.fetch:e.fetchFunc,r=n.map(h=>t(h,e.requestInit,{isBinary:!0})),s=0,i=.5,o=(e.onProgress==null?await Promise.all(r):await lp(r,e.onProgress,s,i)).map(h=>h.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(o):await lp(o,e.onProgress,l,u)}async function HD(n,e="",t,r){return Y1(a=>K1(a,{requestInit:r}))(n,e,t)}function Y1(n){return async(e,t="",r)=>{const s=e.map(()=>!1),i={},a=r!=null?r.map(()=>!1):[],o=[];if(e.forEach((f,m)=>{let y=0;f.weights.forEach(p=>{const g="quantization"in p?p.quantization.dtype:p.dtype,A=Kc[g]*Te(p.shape),x=()=>{s[m]=!0,i[m]==null&&(i[m]=[]),i[m].push({manifestEntry:p,groupOffset:y,sizeBytes:A})};r!=null?r.forEach((S,E)=>{S===p.name&&(x(),a[E]=!0)}):x(),o.push(p.name),y+=A})}),!a.every(f=>f)){const f=r.filter((m,y)=>!a[y]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce((f,m,y)=>(m&&f.push(y),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(m=>{const y=t+(t.endsWith("/")?"":"/")+m;u.push(y)})});const c=await n(u),h={};let d=0;return l.forEach(f=>{const m=e[f].paths.length,y=new Tr(c.slice(d,d+m));i[f].forEach(g=>{const A=y.slice(g.groupOffset,g.groupOffset+g.sizeBytes),x=jy(A,[g.manifestEntry]);for(const S in x)h[S]=x[S]}),d+=m}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD="application/octet-stream",qD="application/json";class ad{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(L(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=qe().platform.fetch,L(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&L(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Ky(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:qD}),"model.json"),e.weightData!=null){const a=Tr.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:XD}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:Do(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Fh(t,i=>this.loadWeights(i))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=jD(t),i=this.weightPathPrefix||r,a=Qy(e),o=[],l=[];for(const c of e)for(const h of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):o.push(i+h+s);this.weightUrlConverter&&o.push(...await Promise.all(l));const u=await K1(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,u]}}ad.URL_SCHEME_REGEX=/^https?:\/\//;function jD(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function rh(n){return n.match(ad.URL_SCHEME_REGEX)!=null}const Q1=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>rh(r)):t=rh(n),t)return od(n,e)}return null};$t.registerSaveRouter(Q1);$t.registerLoadRouter(Q1);function od(n,e){return new ad(n,e)}function KD(n,e){return od(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Z1{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class YD{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function QD(n,e,t,r){const s=arguments;return new YD(J1(...s))}function J1(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new hc(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new hc({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new hc({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function ZD(n){return new Z1(n)}function JD(n){return new Z1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ev=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Tr,browserFiles:WD,browserHTTPRequest:KD,concatenateArrayBuffers:XE,copyModel:p3,decodeWeights:jy,encodeWeights:VE,fromMemory:QD,fromMemorySync:J1,getLoadHandlers:e3,getModelArtifactsForJSON:Fh,getModelArtifactsForJSONSync:Yy,getModelArtifactsInfoForJSON:Do,getSaveHandlers:JE,getWeightSpecs:Qy,http:od,isHTTPScheme:rh,listModels:d3,loadWeights:HD,moveModel:m3,registerLoadRouter:ZE,registerSaveRouter:QE,removeModel:f3,weightsLoaderFactory:Y1,withSaveHandler:ZD,withSaveHandlerSync:JD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vs;function eL(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Vc(Uc,W.backendName)!=null){const m={pixels:n},y={numChannels:e};return W.runKernel(Uc,m,y)}const[u,c]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(a)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(r||t)h=n.data;else if(i||s||o){if(Vs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Vs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Vs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Vs.canvas.width=u,Vs.canvas.height=c,Vs.drawImage(n,0,0,u,c),h=Vs.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const m=u*c;d=new Int32Array(m*e);for(let y=0;y<m;y++)for(let p=0;p<e;++p)d[y*e+p]=h[y*4+p]}return B1(d,[c,u,e],"int32")}const tL=V({fromPixels_:eL});function nL(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(Te(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const o=n.shape,l=s.slice();l.pop();let u=1;for(let h=i;h<t;++h)u*=o[h],l.push(o[h]);const c=[...gn(n.shape).map(h=>h/u),1].slice(0,i);return[l,a,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sh=-2,rL=-1;function sL(n,e,t){const r=n.shape.length;L(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),L(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)L(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function iL(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function aL(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function oL(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function lL(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{L(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(s).fill(-1):typeof t=="number"?i=[t,...new Array(s-1).fill(-1)]:t.length<s?i=t.concat(new Array(s-t.length).fill(-1)):i=t,i=i.map((a,o)=>a>=0?a:(L(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,i]}function uL(n,e,t,r,s,i,a,o,l){let u;if(r==null?(u=new Array(e.length),u.fill(1)):u=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let x=0;x<h.dims;x++)c&&1<<x&o&&h.numAddAxisAfterEllipsis++,1<<x&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};cL(h,d);let f=!0,m=!0,y=!0;const p=[],g=[];for(let x=0;x<n.length;++x){if(d.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);const S=!!(d.shrinkAxisMask&1<<x),E=n[x];if(E===-1){p.push(S?1:-1);continue}const M=[d.beginMask&1<<x,d.endMask&1<<x],R=[d.strides[x]>0?0:-1,d.strides[x]>0?E:E-1];if(S&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&d.strides[x]===1;const O=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(S){const q=d.begin[x]<0?E+d.begin[x]:d.begin[x];if(d.begin[x]=q,d.end[x]=d.begin[x]+1,q<0||q>=E)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=up(d.begin[x],0,d.strides[x],E,M,R),d.end[x]=up(d.end[x],1,d.strides[x],E,M,R);const $=d.strides[x]===1&&d.begin[x]===0&&d.end[x]===E;f=f&&$,m=m&&(x===0&&d.strides[x]===1||$)}else f=f&&d.strides[x]===1&&O,m=m&&(x===0&&d.strides[x]===1||O);let C,N=!1;if(d.beginValid&&d.endValid?(C=d.end[x]-d.begin[x],N=!0):S?(C=1,N=!0):O&&E>=0&&(d.strides[x]<0?C=-E:C=E,N=!0),N){let $;C===0||C<0!=d.strides[x]<0?$=0:$=Math.trunc(C/d.strides[x])+(C%d.strides[x]!==0?1:0),p.push($)}else p.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const S=d.finalShapeGatherIndices[x];S>=0?g.push(p[S]):S===sh&&g.push(1)}return{finalShapeSparse:g.filter((x,S)=>d.finalShapeGatherIndices[S]!==sh),finalShape:g,isIdentity:f,sliceDim0:m,isSimpleSlice:y,begin:d.begin,end:d.end,strides:d.strides}}function cL(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(sh),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(rL),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function up(n,e,t,r,s,i){if(s[e])return t>0?i[e]:i[e+1&1];{const a=n<0?r+n:n;return a<i[0]?i[0]:a>i[1]?i[1]:a}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(n,e){const t=n[0].length;n.forEach((s,i)=>{L(s.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),L(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,i)=>{for(let a=0;a<t;a++)L(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${i}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function bo(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Nr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Nr||(Nr={}));function dL(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const i=t[s],a=r[r.length-t.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${i} but shape[${s+n}] = ${o}`)}else r[a]=i}return r}function fL(n){const e={FIRST_DIM_SIZE:Nr.FIRST_DIM_SIZE,VALUE_ROWIDS:Nr.VALUE_ROWIDS,ROW_LENGTHS:Nr.ROW_LENGTHS,ROW_SPLITS:Nr.ROW_SPLITS,ROW_LIMITS:Nr.ROW_LIMITS,ROW_STARTS:Nr.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function pL(n){return n.length===0?0:n[0]===Nr.FIRST_DIM_SIZE?n.length-1:n.length}function mL(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const i=n[s],a=e[s+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${i} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const i=e.length;for(let a=0;a<i;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(i+1))}return s}function nv(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],i=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?i.push(a):s.push(a);r.push(...s),r.push(0),r.push(...i)}return r}function rv(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?r?s.push(e[i-1]*n[i]):s.push(n[i]/e[i-1]):s.push(n[i]);return s}function yL(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function vL(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL=1.7580993408473768,bL=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL=.3275911,AL=.254829592,SL=-.284496736,_L=1.421413741,EL=-1.453152027,TL=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc="->",CL=/->/g,hp=",",dp="...";function ML(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(CL,"").length)/dc.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${dc}").`);const[r,s]=n.split(dc);L(r.indexOf(dp)===-1,()=>`The ellipsis notation ("${dp}") is not supported yet.`);const i=r.split(hp),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<s.length;++d){const f=s[d];if(!i.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);o.indexOf(f)===-1&&o.push(f)}for(let d=0;d<r.length;++d){const f=r[d];o.indexOf(f)===-1&&f!==hp&&o.push(f)}const l=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<i[d].length;++f)l[d].push(o.indexOf(i[d][f]))}const u=o.length,c=s.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function RL(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function IL(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const i=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=i[a]:L(r[e[s][a]]===i[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(i)}, but got dimension ${i[a]}`)}}function NL(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<t.length;++a){const o=t[a],l=DL(e,o);for(const u of l)i.indexOf(u)===-1&&(r[a].push(u),i.push(u))}return{path:t,steps:r}}function PL(n){return n.every((e,t)=>e===t)}function DL(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function LL(n,e,t=0){let r=[];if(typeof e=="number")L(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);L(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[i]=n.shape[t]-a}L(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function FL(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function OL(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function BL(n,e){return`size ${n} must be non-negative, not ${e}`}function $L(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function zL(n,e){const t=Te(n),r=Te(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function VL(n,e){const t=Te(n),r=Te(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(){return"segment ids must be >= 0"}function GL(){return"segment ids are not increasing"}function WL(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function HL(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,e,t){const r=[],s=n.length;for(let i=0;i<s;i++)i!==e?r.push(n[i]):r.push(t);return r}function qL(n,e,t,r){const s=e.shape.length,i=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${i}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=r;h<t;h++)o.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<s;h++)o.push(e.shape[h]);for(let h=t+1;h<i;h++)o.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n){try{return n.map(e=>fa(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function jL(n){return n.map(e=>ai(e))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */OD();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=qe();Zn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Zn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Zn.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Zn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Zn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Zn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Zn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Zn.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Zn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Zn.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Zn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Zn.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Zn.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KL{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YL{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,r=!1,s=!0){let i;const a=pp(e,t);return s?(this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).length>0?(i=this.freeBuffers.get(a).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e)):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e),this.usedBuffers.has(a)||this.usedBuffers.set(a,[]),this.usedBuffers.get(a).push(i),this.numUsedBuffers++,this.numBytesUsed+=e,i}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const r=e.size,s=e.usage,i=pp(r,s),a=this.usedBuffers.get(i),o=a.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");a[o]=a[a.length-1],a.pop(),this.numUsedBuffers--,this.numBytesUsed-=r,t?(this.freeBuffers.get(i).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=r)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function pp(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QL{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,r,s){const i=gp(r),a=e*t*i,o=mp(e,t,r,s);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const u=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(u),u}this.numBytesAllocated+=a;const l=this.device.createTexture({size:[e,t],format:r,usage:s});return this.usedTextures.get(o).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,r=e.height,s=e.format,i=e.usage,a=mp(t,r,s,i);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(a),l=o.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(l,1);const u=gp(s),c=t*r*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function mp(n,e,t,r){return`${n}_${e}_${t}_${r}`}function gp(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,r="xyzwuv",s=n.map(a=>`${e}.${r[a]}`),i=new Array(t-1);i[t-2]=s[t-1];for(let a=t-3;a>=0;--a)i[a]=`(${i[a+1]} * ${s[a+1]})`;return i}const Os=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ya;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(ya||(ya={}));const JL=(n,e,t,r,s)=>{const i={dtype:r.dtype,shape:r.shape},a=tk(t,i,e),o=n.createShaderModule({code:a,label:e.constructor.name});let l=qe().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(a),console.groupEnd())}return s?n.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},at=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function Xt(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function ns(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function _e(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function yp(n,e){let t;return t=`
     ${ek(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function ek(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function tk(n,e,t){const r=[],s=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,r.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${sv(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const m=t.pixelsOpType===ya.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Qs(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Qs(n[0].dtype,t.outputComponent)}>;`,y=e.shape.length===3?"vec2<i32>":"i32";r.push(`
        struct Uniform {
          outShapeStrides : ${y},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${m}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const p=xp(t);return[vp,r.join(`
`),El(e.shape),t.getUserCode(),yp(p,t)].join(`
`)}let i,a,o="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((m,y)=>{const p=Xt(n[y].shape.length);o+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${p}, `,i=n[y].shape.length-1,a=Xt(i),o+=`${m.charAt(0).toLowerCase()+m.slice(1)}ShapeStrides: ${a}, `});const l=Xt(e.shape.length);o+=`outShape : ${l}, `,i=e.shape.length-1,a=Xt(i),o+=`
         outShapeStrides: ${a}, `,t.size&&(o+="size : i32, "),t.uniforms&&(o+=t.uniforms),o+="};",o=ck(o),r.push(o),t.atomic?r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Qs(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((m,y)=>{r.push(`
      @group(0) @binding(${1+y}) var<storage, read> ${m}: array<${t.variableComponents?Qs(n[y].dtype,t.variableComponents[y]):Qs(n[y].dtype,t.outputComponent)}>;
        `)}),o!==""&&r.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=ok(e.shape,t.dispatchLayout),c=[vp,r.join(`
`)+rk,El(e.shape),u,lk(e.shape.length)];t.atomic||c.push(uk(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((m,y)=>{c.push(`${El(n[y].shape,m)}`)});const h=n.map((m,y)=>ak(m,e.shape,t.variableComponents?t.variableComponents[y]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(t.getUserCode());const d=xp(t);return c.push(yp(d,t)),c.join(`
`)}function nk(n,e,t){let r=n.shaderKey;if(n.pixelsOpType!=null)return r;const s=[],i=[];e.forEach(c=>{s.push(c.shape),i.push(c.dtype)}),s.push(t.shape),i.push(t.dtype);const a=e.map(c=>Ol(c.shape,t.shape)),o=e.map(c=>Nn(c.shape,t.shape)).join("_"),l=a.map(c=>c.join("_")).join(";"),u=sv(n)?"flatDispatch":"";return r+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+s.map(c=>c.length).join(",")+i.join(",")+n.variableNames.join(",")+l+o+u,r}const vp=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,rk=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function El(n,e=""){const t=n.length,r=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",s=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${r}(index : i32) -> i32 { return index; }`;const i=gn(n),a=Xt(t),o=[];for(let u=0;u<t;u++)o.push(`d${u}`);if(i.length===1)return`    fn ${r}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${s}; let d1 = index - d0 * uniforms.${s};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{const h=`let ${o[c]} = index2 / uniforms.${s}.${ns(c)}`,d=c===i.length-1?`let ${o[c+1]} = index2 - ${o[c]} * uniforms.${s}.${ns(c)}`:`index2 = index2 - ${o[c]} * uniforms.${s}.${ns(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${r}(index : i32) -> ${a} {
      ${l}
      return ${a}(${o.join(",")});
    }
  `}function sk(n,e){const t=n.name,r=n.shape.length,s=Xt(r),i="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,r),o=a.map(c=>`${c} : i32`).join(", ");if(r<1)return`
      fn ${i}() -> ${at(e)} {
        return ${at(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let u=`${r}D`;return r===0&&(u="1D"),`
    fn ${i}(${o}) -> ${at(e)} {
      return ${at(e)}(${t}[getIndexFromCoords${u}(${s}(${a.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function ik(n,e,t,r){const s=n.name,i=s.charAt(0).toUpperCase()+s.slice(1),a="get"+i+"ByOutput",o=n.shape.length,l=e.length,u=Xt(l);if(Nn(n.shape,e)&&r)return`
    fn ${a}Index(globalIndex : i32) -> ${at(t)} {
      return ${at(t)}(${s}[globalIndex]);
    }

    fn ${a}Coords(coords : ${u}) -> ${at(t)} {
      return ${at(t)}(${s}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const c=Ol(n.shape,e),h=l-o;let d="";if(o===0)return`
    fn ${a}Index(globalIndex : i32) -> ${at(t)}{
      return get${i}();
    }

    fn ${a}Coords(coords : ${u}) -> ${at(t)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(p=>`coords.${ns(p+h)} = 0;`).join(`
`);let f="";if(l<2&&o>0)f="coords";else if(l>1){const p=Xt(o),g=n.shape.map((A,x)=>`coords.${ns(x+h)}`).join(", ");f=`${p}(${g})`}else f="coords";const m=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,y=`${o}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${at(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${at(t)}(${s}[getIndexFromCoords${y}(${f}, ${m})${t===1?"":` / ${t}`}]);
  }

  fn ${a}Coords(coordsIn : ${u}) -> ${at(t)} {
    var coords = coordsIn;
    ${d}
    return ${at(t)}(${s}[getIndexFromCoords${y}(${f}, ${m})${t===1?"":` / ${t}`}]);
  }
`}function ak(n,e,t,r){let s=sk(n,t);return n.shape.length<=e.length&&(s+=ik(n,e,t,r)),s}function ok(n,e){const{x:t,y:r=[],z:s=[]}=e,i=n.length,a=t.length+r.length+s.length;if(a!==i)return"";if(t.length===i)return`fn getOutputCoords() -> ${Xt(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="";const l=[t,r,s];for(let d=0;d<l.length;d++){const f=l[d];if(f.length!==0)if(f.length===1)o+=`let d${f[0]} = i32(globalId[${d}]);`;else{const m=ZL(f,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let y=0;y<m.length;y++)o+=`let d${f[y]} = index${d} / ${m[y]};`,y===m.length-1?o+=`let d${f[y+1]} = index${d} - d${f[y]} * ${m[y]};`:o+=`index${d} = index${d} - d${f[y]} * ${m[y]};`}}const u=[];for(let d=0;d<a;d++)u.push(`d${d}`);const c=Xt(a);let h=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function lk(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:L(!1,()=>`Unsupported ${n}D shape`);break}return e}function sv(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function Qs(n,e=1){if(n==="float32")return at(e,"f32");if(n==="int32"||n==="bool")return at(e,"i32");throw new Error(`type ${n} is not supported.`)}function uk(n,e,t){const r=n.length,s=Qs(e,t);let i=`fn setOutputAtIndex(flatIndex : i32, value : ${at(t)}) {
      result[flatIndex] = ${s}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${at(t,"i32")}) {
      result[flatIndex] = ${s}(value);
    }
    `;if(r>=2){const a=["d0","d1","d2","d3","d4","d5"].slice(0,r),o=Xt(r);i+=`
      fn setOutputAtCoords(${a.map(l=>`${l} : i32`).join(", ")}, value : ${at(t)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(l=>`${l} : i32`).join(", ")}, value : ${at(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return i}function ck(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,r=>"@align(16) "+r);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(r,s,i)=>`vec${s}, @align(16) ${i}`),n}function xp(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function Ce(n,e,t=[1,1,1],r=[1,1,1]){const[s,i,a]=[Math.ceil(li(n.x.map(o=>e[o]))/(t[0]*r[0])),n.y?Math.ceil(li(n.y.map(o=>e[o]))/(t[1]*r[1])):1,n.z?Math.ceil(li(n.z.map(o=>e[o]))/(t[2]*r[2])):1];return[s,i,a]}function hk(n,e,t,r=!1){const s=[8,8,1],i=[4,4,1];return r||(n<=8&&(i[1]=1),e<=16&&t<=16&&(s[0]=4)),{workgroupSize:s,elementsPerThread:i}}function iv(n,e,t=!1){if(t)return[8,8,1];const r=li(n.x.map(i=>e[i])),s=li(n.y.map(i=>e[i]));return r<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function av(n,e,t=!1){if(t)return[4,4,1];const r=li(n.x.map(i=>e[i])),s=li(n.y.map(i=>e[i]));return r<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ke(n){return{x:n.map((e,t)=>t)}}function bp(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function ov(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function lv(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&L(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var Rr;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(Rr||(Rr={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=qe().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),fk=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,r=e.dispatchLayout,s=e.dispatch;if(s.every(a=>a<=t))return s;L(s[0]>t&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(s[0]));return i>t?(i=Math.ceil(Math.cbrt(s[0])),L(i<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]};class yu extends Xm{nextDataId(){return yu.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!ov())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new KL(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new YL(this.device),this.textureManager=new QL(this.device),this.tensorMap=new __(this,cc()),qe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const r=this.tensorMap.get(e);return t?r.refCount=0:r.refCount--,r.refCount>0?!1:(r.complexTensorInfos!=null&&(this.disposeData(r.complexTensorInfos.real.dataId),this.disposeData(r.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,r){if(r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:r,shape:t,values:e,refCount:1}),s}move(e,t,r,s,i){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:r,values:t,refCount:i})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,r)=>{this.pipelineCache[t]=e[r]})}async getBufferData(e){if(qe().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,r=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);const s=r.getMappedRange().slice(0);return r.unmap(),r!=null&&this.bufferManager.releaseBuffer(r),qe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(L(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){const r=this.tensorMap.get(e);return r.values=t,r.values}readSync(e){const t=this.tensorMap.get(e),{values:r,complexTensorInfos:s}=t;if(r!=null||t.dtype==="string")return r;if(t.dtype==="complex64"){const y=this.readSync(s.real.dataId),p=this.readSync(s.imag.dataId),g=ic(cp(y,p).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const i=["opaque","premultiplied"],a=t.resource,o=a.size;L(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=o/4,u=new ArrayBuffer(o),c=256,h=256,d=i.map(y=>new OffscreenCanvas(c,h)),f=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((y,p)=>{const g=y.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:i[p]}),g.getCurrentTexture()}).map((y,p)=>{const g=c*4,A=(O,C,N)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:g,offset:N},{texture:y},{width:O,height:C}),this.submitQueue();const $=f.getContext("2d",{willReadFrequently:!0});$.clearRect(0,0,O,C),$.drawImage(d[p],0,0);const q=$.getImageData(0,0,O,C).data,z=i[p],F=new Uint8ClampedArray(u,N,O*C*4);for(let X=0;X<F.length;X+=4)if(z==="premultiplied")F[X+3]=q[X+3];else{const Q=q[X];F[X]=q[X+2],F[X+1]=q[X+1],F[X+2]=Q}},x=Math.floor(l/(c*h));let S=c,E=h,M=0;for(let O=0;O<x;O++)A(S,E,M),M+=c*h*4;const R=l%(c*h);E=Math.floor(R/c),E>0&&(A(S,E,M),M+=E*(c*4)),S=R%c,S>0&&A(S,1,M)});const m=ic(u,t.dtype);return this.convertAndCacheOnCPU(e,m),m}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:r}=t;if(r!=null)return r;let s;if(t.dtype==="complex64"){const i=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=i[0],o=i[1];s=cp(a,o)}else{const i=await this.getBufferData(t.resource);s=ic(i,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}copyBuffer(e){const t=e.size,r=e.usage,s=this.bufferManager.acquireBuffer(t,r);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),s}createTensorFromGPUData(e,t,r){let s=e.buffer;if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const i={id:this.nextDataId()};this.tensorMap.set(i,{dtype:r,shape:t,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(i),o=bp(a.dtype)*Te(a.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(s=this.copyBuffer(s)),a.resource=s,cc().makeTensorFromDataId(i,t,r,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:r,dtype:s,shape:i,resource:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=a,l=o.size,u=o.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(i,s),d=cc().makeTensorFromTensorInfo(h),f=this.tensorMap.get(h.dataId);return f.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>fa(s));return Bt(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Bt(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const i=hi(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=hi(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(i);return o.kernelMs=E_(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,r){return t==="string"&&r!=null&&r.length>0&&iu(r[0])&&(r=r.map(i=>ai(i))),{dataId:this.write(r,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const r=this.tensorMap.get(e.dataId).resource;return r instanceof GPUBuffer?{buffer:r}:r instanceof GPUTexture?r.createView():r}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const r=bp(t.dtype)*Te(t.shape);let s;const i=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(s=this.bufferManager.acquireBuffer(r,i,!0),s.mapState==="unmapped"){const a=this.bufferManager.acquireBuffer(r,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=a.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,s,0,r),this.stagingPendingDisposal.push(a)}else{const a=s.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),s.unmap()}t.values=null}else s=this.bufferManager.acquireBuffer(r,i);t.resource=s}makeUniforms(e){let t=0,r=0;const s=[];let i=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:L(!1,()=>`Unsupported ${l.data.length}D shape`)}(r===5||r===6)&&(u=16),u>i&&(i=u),t=Math.ceil(t/u)*u,r=l.data.length,s.push(t),t+=l.data.length*4}),t=Math.ceil(t/i)*i;const a=new ArrayBuffer(t);e.forEach((l,u)=>{const c=s[u];l.type==="int32"?new Int32Array(a,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(a,c,l.data.length).set(l.data):new Float32Array(a,c,l.data.length).set(l.data)});const o=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,a,0,t),this.uniformPendingDisposal.push(o),{offset:0,size:t,buffer:o}}runWebGPUProgram(e,t,r,s,i){if(i||(i=this.makeTensorInfo(e.outputShape,r)),Te(i.shape)===0)return this.tensorMap.get(i.dataId).values=Ns(i.dtype,0),i;this.uploadToGPU(i.dataId),e.dispatch=fk(this.device,e);const a=t.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=nk(e,a,i);const o=qe().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=JL(this.device,e,a,i,o)),e.pipeline=this.pipelineCache[e.shaderKey],o||this.recordAndSubmit(e,i,t,s),i}recordAndSubmit(e,t,r,s){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let i=[],a=[];const o="int32";if(e.pixelsOpType==null){i.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=r.concat(t).map(f=>f.shape);const d="int32";a.map(f=>{i.push({type:d,data:f});const m=gn(f);i.push({type:d,data:m})})}else{const d=gn(t.shape);i.push({type:o,data:d})}if(e.size){const d=Te(e.outputShape);i.push({type:o,data:[e.outputComponent?d/e.outputComponent:d]})}s&&(i=[...i,...s]);const l=[this.tensorToBinding(t),...r.map(d=>this.tensorToBinding(d)),this.makeUniforms(i)];r.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,f)=>({binding:f,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites=[{querySet:this.querySet,queryIndex:0,location:"beginning"},{querySet:this.querySet,queryIndex:1,location:"end"}],this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||qe().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===ya.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),r=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),r}shouldExecuteOnCPU(e,t=dk){return qe().getBool("WEBGPU_CPU_FORWARD")&&e.every(r=>this.tensorMap.get(r.dataId).resource==null&&Te(r.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}yu.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ov()&&S3("webgpu",async()=>{const n={powerPreference:qe().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},r=[];e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&r.push(["bgra8unorm-storage"]),t.requiredFeatures=r;const s=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:s.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:s.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:s.maxStorageBufferBindingSize,maxBufferSize:s.maxBufferSize,maxComputeWorkgroupSizeX:s.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:s.maxComputeInvocationsPerWorkgroup};const i=await e.requestDevice(t),a=await e.requestAdapterInfo();return new yu(i,a)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ke;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(Ke||(Ke={}));const pk="let resultTemp = a + b;",mk="let resultTemp = atan2(a, b);",gk="let resultTemp = areal * breal - aimag * bimag;",yk="let resultTemp = areal * bimag + aimag * breal;",vk="let resultTemp = a / b;",xk="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",bk=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,wk=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,Ak=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Sk=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,_k=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,Ek=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,Tk="return f32(a >= 1.0 && b >= 1.0);",Ck=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Mk="return f32(a >= 1.0 || b >= 1.0);",Rk=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Ik="let resultTemp = max(a, b);",Nk="let resultTemp = min(a, b);",Pk=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,Dk=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Lk="let resultTemp = a * b;",kk=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,Fk=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,Ok=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,Uk=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Bk="if (a < 0.0) { return b * a; }  return a;",$k=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,zk="let resultTemp = (a - b) * (a - b);",Vk="let resultTemp = a - b;";function ld(n,e){let t;do{switch(n){case Ke.ATAN2:t=mk;break;case Ke.MAX:t=Ik;break;case Ke.MIN:t=Nk;break;case Ke.MOD:t=e?Dk:Pk;break;case Ke.NOT_EQUAL:t=e?Fk:kk;break;case Ke.POW:t=e?Uk:Ok;break;default:continue}let r,s,i;return e?(r="isnanVec4",s="vec4<f32>",i="vec4<bool>"):(r="isnan",s="f32",i="bool"),`
      let aIsNaN = ${r}(a);
      let aPostLegalization = select(a, ${s}(42), aIsNaN);
      let bIsNaN = ${r}(b);
      let bPostLegalization = select(b, ${s}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${s}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case Ke.ADD:t=pk;break;case Ke.COMPLEX_MULTIPLY_IMAG:t=yk;break;case Ke.COMPLEX_MULTIPLY_REAL:t=gk;break;case Ke.DIV:t=vk;break;case Ke.ELU_DER:t=xk;break;case Ke.EQUAL:t=bk;break;case Ke.FLOOR_DIV:t=wk;break;case Ke.GREATER:t=Ak;break;case Ke.GREATER_EQUAL:t=Sk;break;case Ke.LESS:t=_k;break;case Ke.LESS_EQUAL:t=Ek;break;case Ke.LOGICAL_AND:return e?Ck:Tk;case Ke.LOGICAL_OR:return e?Rk:Mk;case Ke.MUL:t=Lk;break;case Ke.PRELU:return e?$k:Bk;case Ke.SQUARED_DIFFERENCE:t=zk;break;case Ke.SUB:t=Vk;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var we;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(we||(we={}));const Gk="return abs(a);",Wk=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Hk=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Xk=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,qk="return asinh(a);",jk=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Kk=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Yk="return ceil(a);",Qk="return cos(a);",Zk=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Jk="return exp(a) - 1.0;",eF="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",tF=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,nF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${wL};
  let a1 = ${AL};
  let a2 = ${SL};
  let a3 = ${_L};
  let a4 = ${EL};
  let a5 = ${TL};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,rF="return exp(a);",sF="return floor(a);",iF="return f32(!isnan(a) && !isinf(a));",aF="return f32(isinf(a));",oF="return f32(isnan(a));",lF="return a;",uF=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,cF=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,hF="return f32(!(a >= 1.0));",dF="return -a;",fF="if (a < 0.0) { return uniforms.alpha * a; } return a;",pF=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,mF="return 1.0 / a;",gF="return select(a, 0.0, a < 0.0);",yF="return clamp(a, 0.0, 6.0);",vF="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",xF=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,bF="return round(a);",wF="return inverseSqrt(a);",AF=`
  if (a >= 0.0) {
    return ${bL} * a;
  } else {
    return ${xL} * (exp(a) - 1.0);
  }
`,SF="return 1.0 / (1.0 + exp(-1.0 * a));",_F="return sign(a);",EF="return sin(a);",TF=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,CF=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,MF="return sqrt(a);",RF="return a * a;",IF=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,NF="return tan(a);",PF=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,DF="return f32(i32((a)));";function Xs(n,e){switch(n){case we.ABS:return Gk;case we.ACOS:return Wk;case we.ACOSH:return Hk;case we.ASIN:return Xk;case we.ASINH:return qk;case we.ATAN:return jk;case we.ATANH:return Kk;case we.COS:return Qk;case we.COSH:return Zk;case we.CEIL:return Yk;case we.ELU:return e?tF:eF;case we.ERF:return nF;case we.EXP:return rF;case we.EXPM1:return Jk;case we.FLOOR:return sF;case we.IS_FINITE:return iF;case we.IS_INF:return aF;case we.IS_NAN:return oF;case we.LINEAR:return lF;case we.LOG:return uF;case we.LOG1P:return cF;case we.LOGICAL_NOT:return hF;case we.NEG:return dF;case we.LEAKYRELU:return e?pF:fF;case we.RECIPROCAL:return mF;case we.RELU:return e?xF:gF;case we.RELU6:return e?vF:yF;case we.ROUND:return bF;case we.RSQRT:return wF;case we.SELU:return AF;case we.SIGMOID:return SF;case we.SIGN:return _F;case we.SIN:return EF;case we.SINH:return TF;case we.SOFTPLUS:return CF;case we.SQRT:return MF;case we.SQUARE:return RF;case we.STEP:return IF;case we.TAN:return NF;case we.TANH:return PF;case we.TO_INT:return DF;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n,e=!1,t=!1,r=3){if(n===null)return"";let s="";if(n==="linear")s=Xs(we.LINEAR);else if(n==="relu")s=Xs(we.RELU,t);else if(n==="elu")s=Xs(we.ELU,t);else if(n==="relu6")s=Xs(we.RELU6,t);else if(n==="prelu")s=ld(Ke.PRELU,t);else if(n==="sigmoid")s=Xs(we.SIGMOID,t);else if(n==="leakyrelu")s=Xs(we.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const a=at(t?4:1);let o="";return e?o=`
      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${s}
      }`:o=`
      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {
        ${s}
      }`,o}function _i(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(n,e,t=!1,r=!1,s=!1,i=1){L(n&&i===1||!n,()=>`transposeA ${n} is not compatible with component size ${i}`);const a=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${at(i)} {
    var value = ${at(i)}(0.0);
    ${t&&s?a:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${at(i)} {
    var value = ${at(i)}(0.0);
    ${o}
    return value;
  }
  `}function ud(n,e,t,r,s=!1,i=!1,a=!1,o=1){return`
  ${uv(t,r,s,i,a,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${at(o)}) {
    ${s&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${_i(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const LF=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,kF=(n,e,t,r)=>{if(n)return`
      for (var k = 0; k < ${r}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let s="",i="";for(let a=0;a<e;a++)s+=`let BCached${a} = mm_Bsub[k * ${e} + ${a}][tileCol];`,i+=`acc[i] = fma(BCached${a}, vec4<f32>(ACached[${a}]), acc[i]);`;return`
      for (var k = 0; k < ${r/e}; k++) {
        ${s}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function vu(n,e,t=!1,r=32,s=!1,i=32,a=!1){const o=e[1]*n[1],l=e[0]*n[0],u=t?o:r,c=t?r:o,h=u/e[0],d=r/e[1],f=n[1],m=n[0];return L((t&&h===4&&n[1]===4||!t&&(h===3||h===4))&&u%e[0]===0&&r%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${r}>;

  ${_e()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${f};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${f};
    let globalCol = i32(globalId.x) * ${m};
    let batch = ${s?"0":"i32(globalId.z)"};
    let batchA = ${s||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${s||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${s?`${Math.ceil(i/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
    var kStart = ${s?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${f}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${f}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${LF(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${kF(t,h,f,r)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const wp=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,FF=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function xu(n,e,t=!1,r=32,s=!1,i=32,a=!1,o=!1){const l=n[1]*e[1],u=n[0]*e[0],c=t?l:r,h=t?r:l;L(h%e[1]===0&&c%e[0]===0&&r%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${r} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],f=c/e[0],m=r/e[1],y=n[1],p=n[0],g=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${wp(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${p}>;
        for (var k = 0; k < ${r}; k++) {
          for (var inner = 0; inner < ${p}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${y}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${p}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${p}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${y};
  let tileCol = i32(localId.x) * ${p};

  let globalRow = i32(globalId.y) * ${y};
  let globalCol = i32(globalId.x) * ${p};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${f};
  let tileRowB = i32(localId.y) * ${m};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${f}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${wp(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${r};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${p}>;
    for (var k = 0; k < ${r}; k++) {
      for (var inner = 0; inner < ${p}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        ${FF(t)}
        for (var innerCol = 0; innerCol < ${p}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${y}; innerRow++) {
    for (var innerCol = 0; innerCol < ${p}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${r}>;

    ${_e()} {
      let batch = ${s?"0":"i32(globalId.z)"};
      let batchA = ${s||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${s||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${s?`${Math.ceil(i/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
      var kStart = ${s?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${p}>, ${y}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        for (var innerCol = 0; innerCol < ${p}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const OF=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function UF(n,e=!1){L(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${_e()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${OF(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class BF{constructor(e,t,r=!1,s=!1,i=null,a=null,o=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=r?e[1]:e[2];if(this.isVec4=(u%4===0&&!r||t[1]%4===0&&r)&&t[2]%4===0&&!s,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=hk(t[1],u,t[2],r);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=i!=null,h=o!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=r,this.transposeB=s,this.addBias=c,this.activation=a,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${s}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,r){const s=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;const a=e%s===0,o=t%i===0,l=r%this.tileInner===0;return[a,o,l]}getUserCode(){return`
      ${us(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${ud(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?vu(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?UF(this.workgroupSize,this.transposeA):xu(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${_e()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class zF{constructor(e,t=!1,r=!1,s=null,i=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=s!=null,l=a!=null;o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=r,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${r}`}getUserCode(){return`
      ${us(this.activation,this.hasPreluActivationWeights)}
      ${ud(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${$F(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(n){const e=n[1],t=n[0],r=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${_e()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${r};
    globalRowB = globalRowB + ${r};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${r};
      globalRowB = globalRowB + ${r};

      for (var k = 0; k < ${r}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class GF{constructor(e,t,r,s=!1,i=!1,a=null,o=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=r,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(r[2]/this.workgroupSize[0]),Math.ceil(r[1]/this.workgroupSize[1]),r[0]];const u=a!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=i,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${i}`}getUserCode(){return`
      ${us(this.activation,this.hasPreluActivationWeights)}
      ${ud(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${VF(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WF{constructor(e,t,r=!1,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,L(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const i=(r&&this.outputShape[1]%4===0||!r&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Ce(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=s,this.shaderKey=`matMulSplitK_${r}_${s}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${uv(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${at(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Os("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?vu(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):xu(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class HF{constructor(e,t=null,r=null,s=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=s!=null,this.activation=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${r}`}getUserCode(){return`
    ${us(this.activation,this.hasPreluActivationWeights)}
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${_i(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XF{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:i}=t;if(i=i||Po(s),i==="string"){const a=tn(i,Te(r));return a.fill(s),e.makeTensorInfo(r,i,a)}else{const a=new XF(r),o=[{type:"float32",data:[s]}];return e.runWebGPUProgram(a,[],i,o)}}const qF={kernelName:qg,backendName:"webgpu",kernelFunc:In};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(n){const{inputs:e,attrs:t}=n,{x:r}=e,{shape:s}=t,i=Te(r.shape),a=C_(s,i),o=Te(a);return L(i===o,()=>`The new shape (${a}) has ${o} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(r.dataId),{dataId:r.dataId,shape:a,dtype:r.dtype}}const jF={kernelName:W0,backendName:"webgpu",kernelFunc:ze};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=r?e.shape[c-1]:e.shape[c-2],f=t?n.shape[u-1]:n.shape[u-2],m=r?e.shape[c-2]:e.shape[c-1],y=n.shape.slice(0,-2),p=e.shape.slice(0,-2),g=Te(y),A=Te(p),S=Rt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);L(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const E=t?[g,h,f]:[g,f,h],M=r?[A,m,d]:[A,d,m],R=ze({inputs:{x:n},backend:s,attrs:{shape:E}}),O=ze({inputs:{x:e},backend:s,attrs:{shape:M}}),C=[R,O],N=Math.max(g,A),$=[R,O],q=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[h]}];let z,F;const X=[N,f,m];let Q=qe().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Q<0){const ie=qe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),de=ie>0?ie:s.thresholdToIncreaseWorkgroups,ve=N*Math.ceil(f/32)*Math.ceil(m/32);ve<=de||f<=8&&ve<=de*2?N*f*m<=128?Q=Rr.MatMulReduceProgram:N===1&&d>=2e3?Q=Rr.MatMulSplitKProgram:Q=Rr.MatMulSmallOutputSizeProgram:Q=Rr.MatMulPackedProgram}switch(Q){case Rr.MatMulReduceProgram:z=new zF(X,t,r,i,l,a);break;case Rr.MatMulSplitKProgram:{if(F=In({backend:s,attrs:{shape:X,value:0,dtype:n.dtype}}),z=new WF(X,d,t,r),i||l){F=s.runWebGPUProgram(z,$,n.dtype,q,F);const de=new HF(F.shape,i,l,a);let ve=null;const J=[F];i&&J.push(i),a&&J.push(a),l==="leakyrelu"&&(ve=[{type:"float32",data:[o]}],de.uniforms+=" alpha : f32,");const fe=s.runWebGPUProgram(de,J,F.dtype,ve);C.push(F);const K=ze({inputs:{x:fe},backend:s,attrs:{shape:S}});C.push(fe);for(const xe of C)s.disposeData(xe.dataId);return K}break}case Rr.MatMulSmallOutputSizeProgram:z=new GF(E,M,X,t,r,i,l,a);break;case Rr.MatMulPackedProgram:const ie=s.adapterInfo.isIntel();z=new BF(E,X,t,r,i,l,a,ie);break;default:throw new Error(`Unsupported MatMulProgramType ${Q}.`)}i&&$.push(i),a&&$.push(a),l==="leakyrelu"&&(q.push({type:"float32",data:[o]}),z.uniforms+=" alpha : f32,"),F=s.runWebGPUProgram(z,$,n.dtype,q,F);const Z=ze({inputs:{x:F},backend:s,attrs:{shape:S}});C.push(F);for(const ie of C)s.disposeData(ie.dataId);return Z}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return bu({a:s,b:i,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const YF={kernelName:Bc,backendName:"webgpu",kernelFunc:KF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ap{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Rt(t,r),this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${ld(this.op,!1)}
      }

      ${_e("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wl{constructor(e,t,r){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Rt(t,r),this.dispatchLayout=ke(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&r.length>1&&t[0]<128,this.useSharedMemoryWithB=r.length<=1&&t.length>1&&r[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?r[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const s=t.length>0&&t[t.length-1]%4===0,i=r.length>0&&r[r.length-1]%4===0;s&&i?(this.outputComponent=4,this.variableComponents=[4,4]):s&&(Gf(r)||r[r.length-1]===1)||i&&(Gf(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=s?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",r=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${ld(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const s=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${s}];`:`let a = sharedBuf[${s}];
          let b = getBByOutputIndex(index);`;e=`
        ${r}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${_e("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${r}
       ${_e("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const QF={kernelName:Ph,backendName:"webgpu",kernelFunc:Vn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.makeTensorInfo(r.shape,"complex64"),a=t.tensorMap.get(i.dataId),o=Vn({inputs:{x:r},backend:t}),l=Vn({inputs:{x:s},backend:t});return a.complexTensorInfos={real:o,imag:l},i}const ZF={kernelName:vg,backendName:"webgpu",kernelFunc:Ei};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ta{constructor(e,t,r=""){this.variableNames=["A"],this.size=!0;const s=128;this.workgroupSize=[s,1,1],this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,r!==""&&(this.uniforms=r),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Xs(this.op,!1)}
      }
      ${_e("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:r,backend:s})=>{const{x:i}=r,a=s,o=t||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){const u=a.tensorMap.get(i.dataId),c=e(u.values,o);return a.makeTensorInfo(i.shape,o,c)}const l=new Ta(i.shape,n);return a.runWebGPUProgram(l,[i],o)}}function sn({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:r}){return({inputs:s,backend:i})=>{const{a,b:o}=s,l=i;if(t&&a.dtype==="complex64"){const h=l.tensorMap.get(a.dataId),d=l.tensorMap.get(o.dataId);let f,m;if(n!==Ke.MUL)[f,m]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(p=>{const[g,A]=p,x={dataId:g.dataId,dtype:g.dtype,shape:a.shape},S={dataId:A.dataId,dtype:A.dtype,shape:o.shape},E=new Wl(n,a.shape,o.shape);return l.runWebGPUProgram(E,[x,S],Ps(g.dtype,A.dtype))});else{const p=new Ap(Ke.COMPLEX_MULTIPLY_REAL,a.shape,o.shape),g=new Ap(Ke.COMPLEX_MULTIPLY_IMAG,a.shape,o.shape),A=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:a.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];f=l.runWebGPUProgram(p,A,"float32"),m=l.runWebGPUProgram(g,A,"float32")}const y=Ei({inputs:{real:f,imag:m},backend:l});return l.disposeData(f.dataId),l.disposeData(m.dataId),y}const u=r||Ps(a.dtype,o.dtype);if((a.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([a,o]))&&e!=null){const h=l.tensorMap.get(a.dataId).values,d=l.tensorMap.get(o.dataId).values,f=a.dtype==="string"?Gl(h):h,m=a.dtype==="string"?Gl(d):d,[y,p]=e(a.shape,o.shape,f,m,u);return l.makeTensorInfo(p,u,y)}const c=new Wl(n,a.shape,o.shape);return l.runWebGPUProgram(c,[a,o],u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(n){return(e,t,r,s,i)=>{const a=Rt(e,t),o=a.length,l=gn(a),u=Te(a),c=Ns(i,u),h=e.length,d=t.length,f=gn(e),m=gn(t),y=Ol(e,a),p=Ol(t,a);if(y.length+p.length===0)for(let g=0;g<c.length;++g)c[g]=n(r[g%r.length],s[g%s.length]);else for(let g=0;g<c.length;++g){const A=Mh(g,o,l),x=A.slice(-h);y.forEach(R=>x[R]=0);const S=Oc(x,h,f),E=A.slice(-d);p.forEach(R=>E[R]=0);const M=Oc(E,d,m);c[g]=n(r[S],s[M])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=ou([0],t),[i,a]=Dn((o,l)=>o!==l?1:0)(e,[],n,s,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4=Dn((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,e,t,r,s){const i=Te(r),a=rs(s,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=s||(i>0?a[l]+=e[o]:a[l]+=1)}return a}function r4(n,e,t,r=!1){const s=n.shape[0],i=n.shape[1],a=Bt([s,t],e.dtype);for(let o=0;o<s;o++)for(let l=0;l<i;l++){const u=n.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(r?a.set(1,o,u):e.size>0?a.set(a.get(o,u)+e.get(o,l),o,u):a.set(a.get(o,u)+1,o,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4=Dn((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){return(e,t,r)=>{const s=tn(t,e.length);for(let i=0;i<e.length;++i)s[i]=n(e[i],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4=cs(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n,e,t,r){const s=tn(t,Te(e));if(r&&t!=="string"){let i=0;n.forEach(a=>{const o=Te(a.shape);s.set(a.vals,i),i+=o})}else{let i=0;n.forEach(a=>{const o=t==="string"?Gl(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const c=u*e[1]+i;for(let h=0;h<a.shape[1];++h)s[c+h]=o[l++]}i+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4=Dn((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4=cs(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u4=cs(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4=cs(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4=Dn((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n,e,t,r,s,i,a,o,l){const u=Bt([r,i],t);for(let c=0;c<r;c++){const h=[];let d=0;for(let f=0;f<s;f++){const m=n[c*s+f];d+=m*a[f],h.push(m)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let f=0;f<i;f++)u.values[c*i+f]=e.get(...e.indexToLoc(d*i+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,e,t){const r=Bt(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),o=a[0],l=a[2],u=e.locToIndex([o,l]);a[2]=e.values[u];const c=n.locToIndex(a);0<=c&&c<n.values.length&&(r.values[s]=n.values[c])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4=Dn((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m4=Dn((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4=Dn((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4=Dn((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,e,t){const r=(e-n)/(t-1),s=rs(t,"float32");s[0]=n;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=cs(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e,t,r){const s=Ns(r,Te(t));for(let i=0;i<s.length;++i){const a=i*e;let o=n[a];for(let l=0;l<e;++l){const u=n[a+l];(Number.isNaN(u)||u>o)&&(o=u)}s[i]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4=Dn((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4=Dn((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=Dn((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,e,t){const r=wE(-1,t);return cv([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4=Dn((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,e,t,r,s){const i=e.length,a=Te(e),o=gn(e),l=gn(s),u=Ns(t,Te(s));for(let c=0;c<a;++c){const h=Mh(c,i,o),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[r[m]];const f=Oc(d,i,l);u[f]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,e,t,r){const[s,i]=du(n,r),a=Ps(e,"int32"),o=rs(Te(s),a),l=Te(i);for(let u=0;u<o.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];o[u]=h}return{outVals:o,outShape:s,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const i=Mh(s,e.length,gn(e)).join(",");throw new Error(`indices[${i}] = ${r} is not in [0, ${t})`)}})}function M4(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let i=1;i<r.length;++i)if(r[i-1]>r[i])throw new Error("Ragged splits must be sorted in ascending order")}}function R4(n,e,t,r){const s=[];let i=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);M4(t,r);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)o[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const f=t[d],m=d+e.length-1;if(m>=0){const y=o[m],p=y[y.length-1]-f[c];for(let g=c;g<h;++g)o[m].push(f[g+1]+p)}c=f[c],h=f[h]}h!==c&&(s.push([c,h]),i+=h-c)}return{outSplits:o,valueSlices:s,numValues:i}}function I4(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=tn("int32",r);e.push(s),n[t].forEach((i,a)=>s[a]=i)}return e}function Sp(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function N4(n,e,t,r,s,i){const a=Sp(e,2)[1],o=Sp(i,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<r;++h)s[l*o+h]=n[c*a+h];++l}}function P4(n,e,t,r,s){const i=e.slice();i[0]=s;const a=tn(t,Te(i)),o=n.length,l=o===0?0:o/e[0];return N4(n,e,r,l,a,i),[a,i]}function D4(n,e,t,r,s,i,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(C4(i,a,l),r.length===0)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:c,valueSlices:h,numValues:d}=R4(i,a,n,u),f=I4(c),m=P4(t,r,s,h,d);return[f,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _p=2147483647;function L4(n,e,t,r,s,i,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=s.length===0,u=a.length===0,c=[];o||c.push(e[0]),l||c.push(s[0]),u||c.push(a[0]);for(let p=1;p<c.length;++p)if(c[p]!==c[p-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=tn("int32",h+1);d[0]=0;for(let p=0;p<h;++p){const g=o?n[0]:n[p],A=l?r[0]:r[p],x=u?i[0]:i[p];if(x===0)throw new Error("Requires delta != 0");let S;if(x>0&&A<g||x<0&&A>g)S=0;else if(S=Math.ceil(Math.abs((A-g)/x)),S>_p)throw new Error(`Requires ((limit - start) / delta) <= ${_p}`);d[p+1]=d[p]+S}const f=d[h],m=tn(t,f);let y=0;for(let p=0;p<h;++p){const g=d[p+1]-d[p];let A=o?n[0]:n[p];const x=u?i[0]:i[p];for(let S=0;S<g;++S)m[y++]=A,A+=x}return[d,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var er=Nr;class Hl{constructor(e,t,r,s,i,a,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=fL(c),this.raggedRank=pL(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===er.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===er.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case er.VALUE_ROWIDS:return Hl.getMaxWidthValueRowID(t);case er.ROW_SPLITS:return Hl.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${er[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const i=e[s+1]-e[s];i>r&&(r=i)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],i=0;for(let a=1;a<t;++a){const o=e[a];o!==s&&(s=o,i=Math.max(a-r,i),r=a)}return Math.max(t-r,i)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Tp(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;mL(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=dL(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),i=[];let a=0;for(let o=0;o<s;++o,a+=t)i.push(a);for(let o=s;o<e;++o)i.push(-1);return L(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,r,s){const i=e.length,a=[];for(let o=0;o<i-1;++o){const l=e[o+1]-e[o];let u=Math.min(s,l),c=t[o];c===-1&&(u=0);for(let h=0;h<u;++h)a.push(c),c+=r;for(let h=0;h<l-u;++h)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const i=e.length,a=[];if(i===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];a.push(u);for(let c=1;c<i;++c){const h=e[c];if(h===l)u>=0&&(++o,o<s?u+=r:u=-1);else{if(o=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case er.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,r,s);case er.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,r,s);default:throw new Error(`Unsupported partition type: ${er[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case er.FIRST_DIM_SIZE:return e[0];case er.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case er.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${er[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let l=s.length-2;l>=0;--l)s[l]=s[l+1]*r[l+1];const i=Tp(r,!1),a=tn(this.valuesDType,Te(i));if(s[0]*r[0]>0){let l=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,s[u],r[u]);this.setOutput(this.raggedRank,l,a,i)}return[i,a]}setOutput(e,t,r,s){if(r.length===0)return;const i=this.values,a=r;let o=s.slice();o=o.slice(e+1);const l=Te(o),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const m=this.defaultValueShape;bt(()=>{const y=pe(c,m);c=ro(y,o).dataSync()})}let h=0,d=0,f=0;for(let m=0;m<=u;++m){let y=m<u?t[m]:-1;if(y===f){++f;continue}if(d<f){const p=i.subarray(h*l),g=a.subarray(d*l),A=(f-d)*l;Ep(g,p,A)}if(m>=u){const p=r.length;y=Math.floor(p/l)}if(y>f)if(this.defaultValue.length===1)a.subarray(f*l,y*l).fill(this.defaultValue[0]),f=y;else for(;y>f;){const p=a.slice(f*l);Ep(p,c,l),++f}y<0?(h=m+1,d=f):(h=m,d=f,f=d+1)}}}function Ep(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Tp(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function k4(n,e,t,r,s,i,a,o,l,u){return new Hl(n,e,t,r,s,i,a,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n,e,t,r){const s=n===e,i=n<e&&t<0,a=e<n&&t>1;if(s||i||a)return rs(0,r);const o=Math.abs(Math.ceil((e-n)/t)),l=rs(o,r);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4=cs(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,e,t,r,s,i,a,o,l,u){const c=[r/s,s],h=n.values,d=e.values;if(r===0)return Bt(t,e.dtype);const f=l instanceof pa?l:Bt(c,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let m=0;m<i;m++){const y=[];let p=0;for(let g=0;g<a;g++){const A=h[m*a+g];y.push(A),p+=A*o[g]}if(p<0||p>=r/s)throw new Error(`Invalid indices: ${y} does not index into ${t}`);for(let g=0;g<s;g++)u?f.values[p*s+g]+=d[m*s+g]:f.values[p*s+g]=e.rank===0?d[0]:d[m*s+g]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4=cs(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,e,t,r,s){const i=aL(r,e,t),a=Te(t),o=gn(r);if(i){const h=oL(e,o);return s==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const l=s==="string"?Gl(n):n,u=Bt(r,s,l),c=Bt(t,s);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),f=d.map((m,y)=>m+e[y]);c.set(u.get(...f),...d)}return s==="string"?jL(c.values):c.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,e,t,r,s,i,a){const o=e[0],l=i[0],u=new Array(l),c=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(kL(o));const p=tn(t,0),g=tn(s,0);return[p,[0,h],g,u,c]}let d=!0,f=0;const m=new Array(l).fill(0);for(let p=0;p<o;++p){const g=n[p*h];if(g<0)throw new Error(FL(p,g));if(g>=l)throw new Error(OL(p,g,l));++m[g],d=d&&g>=f,f=g}let y=!0;for(let p=0;p<l;++p){const g=m[p]===0;u[p]=g,y=y&&!g,m[p]=Math.max(m[p],1),p>0&&(m[p]+=m[p-1])}if(y&&d){const p=n,g=r;for(let A=0;A<o;++A)c[A]=A;return[p,[o,h],g,u,c]}else{const p=m[l-1],g=tn(t,p*h),A=tn(s,p),x=new Array(l).fill(0);for(let S=0;S<o;++S){const E=n[S*h],M=x[E],R=(E===0?0:m[E-1])+M;x[E]++;for(let O=0;O<h;++O)g[R*h+O]=n[S*h+O];A[R]=r[S],c[S]=R}for(let S=0;S<l;++S)if(x[S]===0){const M=S===0?0:m[S-1];g[M*h+0]=S;for(let R=1;R<h;++R)g[M*h+R]=0;A[M]=a}return[g,[p,h],A,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,e,t,r,s){const i=Te(r),a=e[0],o=s.length,l=[];let u=1,c=-1;for(let p=0;p<o;++p){const g=s[p];if(g===-1){if(c!==-1)throw new Error(UL(c,p));c=p,l.push(1)}else{if(g<0)throw new Error(BL(p,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error($L());const p=Math.trunc(i/u);if(u*p!==i)throw new Error(zL(r,l));l[c]=p}if(Te(l)!==i)throw new Error(VL(r,l));const d=r.length,f=[];if(d>0){f[d-1]=1;for(let p=d-2;p>=0;--p)f[p]=f[p+1]*r[p+1]}const m=[];if(o>0){m[o-1]=1;for(let p=o-2;p>=0;--p)m[p]=m[p+1]*l[p+1]}const y=tn(t,a*o);for(let p=0;p<a;++p){let g=0;for(let A=0;A<d;++A)g+=n[p*d+A]*f[A];for(let A=0;A<o;++A)y[p*o+A]=Math.trunc(g/m[A]),g%=m[A]}return[y,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n,e,t,r,s,i=!1,a=0){const o=r.length,l=[e[0],n.length/e[0]],u=l[1],h=o>0?s[o-1]+1:0;if(h<0)throw new Error(fp());const d=e.slice();d[0]=h;const f=d.reduce((x,S)=>x*S,1),m=tn(t,f);if(o===0)return h>0&&m.fill(a),[m,d];if(h<=0)throw new Error(fp());let y=0,p=1,g=0,A=s[y];for(;;){let x=0;if(p<o){if(x=s[p],A===x){++p;continue}if(A>=x)throw new Error(GL())}if(A<0||A>=h)throw new Error(WL(A,h));A>g&&m.fill(a,g*u,A*u);for(let S=y;S<p;++S){const E=r[S];if(E<0||E>=l[0])throw new Error(HL(S,r[S],l[0]));for(let M=0;M<u;M++)m[A*u+M]+=n[E*u+M]}if(i)for(let S=0;S<u;S++)m[A*u+S]/=p-y;if(y=p,++p,g=A+1,A=x,p>o)break}return g<h&&m.fill(a,g*u,h*u),[m,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=cs(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=Dn((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4=cs((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,e,t,r){const s=Bt(n,e.dtype);for(let i=0;i<s.size;i++){const a=s.indexToLoc(i),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*t[l]+r[l];s.set(e.get(...o),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j4{constructor(e,t,r,s,i,a){this.separator=ai(e),this.nGramWidths=t,this.leftPad=ai(r),this.rightPad=ai(s),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,i,a){for(let o=0;o<i;++o){const l=this.getPadWidth(a),u=Math.max(0,l-o),c=Math.max(0,l-(i-(o+1))),h=a-(u+c),d=t+(u>0?0:o-l);let f=0;f+=u*this.leftPad.length;for(let A=0;A<h;++A)f+=e[d+A].length;f+=c*this.rightPad.length;const m=u+c+h-1;f+=m*this.separator.length,r[s+o]=new Uint8Array(f);const y=r[s+o];let p=0;const g=A=>A.forEach(x=>y[p++]=x);for(let A=0;A<u;++A)g(this.leftPad),g(this.separator);for(let A=0;A<h-1;++A)g(e[d+A]),g(this.separator);if(h>0){g(e[d+h-1]);for(let A=0;A<c;++A)g(this.separator),g(this.rightPad)}else{for(let A=0;A<c-1;++A)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<s;++u){let c=t[u]>=l;if(c=c&&t[u]<=r,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${r}]`);l=t[u]}if(l!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${l}`)}const i=s-1,a=tn("int32",s);if(r===0||s===0){const l=new Array(r);for(let u=0;u<=i;++u)a[u]=0;return[l,a]}a[0]=0;for(let l=1;l<=i;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),a[l]=a[l-1]+c}const o=new Array(a[i]);for(let l=0;l<i;++l){const u=t[l];let c=a[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],f=this.getNumNGrams(d,h);this.createNGrams(e,u,o,c,f,h),c+=f}),this.preserveShort&&c===a[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(e,u,o,c,f,d)}}return[o,a]}}function K4(n,e,t,r,s,i,a,o){return new j4(t,r,s,i,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,e,t,r){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)r.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let a=n.indexOf(i);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&r.push(o),n=n.subarray(a+1),a=n.indexOf(i)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const a=n.subarray(s,i);(!t||a.length!==0)&&r.push(a),s=i+1}}function Q4(n,e,t){const r=n.length,s=[];let i=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const f=s.length;Y4(n[d],e,t,s);const m=s.length-f;o[d]=m,i+=m,a=Math.max(a,m)}const l=tn("int32",i*2),u=new Array(i),c=[r,a];let h=0;for(let d=0;d<r;++d)for(let f=0;f<o[d];++f)l[h*2]=d,l[h*2+1]=f,u[h]=s[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,e){const t=tn("int32",n.length);for(let r=0;r<n.length;++r)t[r]=bE(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4=Dn((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=Bt(t,n.dtype);for(let s=0;s<r.values.length;++s){const i=r.indexToLoc(s),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=i[l]%n.shape[l];const o=n.locToIndex(a);r.values[s]=n.values[o]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function hv(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const o=r-t+1,l=e-t+1,u=Math.log(o),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),d=Math.max(t,Math.floor(e-l*c/o+h)),f=Math.min(r,Math.floor(e+(o-l)*c/o+h));hv(n,e,d,f)}const s=n[e];let i=t,a=r;for(Wa(n,t,e),eo(n[r],s)>0&&Wa(n,t,r);i<a;){for(Wa(n,i,a),i++,a--;eo(n[i],s)<0;)i=i+1;for(;eo(n[a],s)>0;)a=a-1}eo(n[t],s)===0?Wa(n,t,a):(a=a+1,Wa(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function tO(n,e,t,r,s){const i=e[e.length-1],[a,o]=[n.length/i,i],l=Ns(t,a*r),u=Ns("int32",a*r);for(let h=0;h<a;h++){const d=h*o,f=n.subarray(d,d+o);let m=new Array(f.length);f.forEach((A,x)=>m[x]={value:A,index:x}),r<m.length&&(hv(m,r),m=m.slice(0,r)),s&&m.sort(eo);const y=h*r,p=l.subarray(y,y+r),g=u.subarray(y,y+r);for(let A=0;A<r;A++)p[A]=m[A].value,g[A]=m[A].index}const c=e.slice();return c[c.length-1]=r,[Bt(c,t,l),Bt(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e,t,r){const s=cr(e,t)[0],i=[1,t[0],1];for(let m=0;m<s;m++)i[0]*=t[m];i[1]=t[s];for(let m=s+1;m<t.length;m++)i[2]*=t[m];const a=new Map,o=new Int32Array(t[s]),l=new pa(i,r,n),u=[],c=i[0]===1&&i[2]===1;for(let m=0;m<t[s];m++){let y;if(c)y=n[m].toString();else{const g=[];for(let A=0;A<i[0];A++)for(let x=0;x<i[2];x++)g.push(l.get(A,m,x));y=g.join(",")}const p=a.get(y);if(p!=null)o[m]=p;else{const g=a.size;a.set(y,g),o[m]=g,u.push(m)}}const h=i.slice();h[1]=a.size;const d=new pa(h,r);u.forEach((m,y)=>{for(let p=0;p<i[0];p++)for(let g=0;g<i[2];g++)d.set(l.get(p,m,g),p,y,g)});const f=t.slice();return f[s]=h[1],{outputValues:d.values,outputShape:f,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO=Object.freeze(Object.defineProperty({__proto__:null,addImpl:t4,bincountImpl:n4,bincountReduceImpl:r4,bitwiseAndImpl:s4,castImpl:e4,ceilImpl:i4,concatImpl:a4,equalImpl:o4,expImpl:l4,expm1Impl:u4,floorDivImpl:h4,floorImpl:c4,gatherNdImpl:d4,gatherV2Impl:f4,greaterEqualImpl:m4,greaterImpl:p4,lessEqualImpl:y4,lessImpl:g4,linSpaceImpl:v4,logImpl:x4,maxImpl:b4,maximumImpl:w4,minimumImpl:A4,multiplyImpl:cv,negImpl:S4,notEqualImpl:_4,prodImpl:T4,raggedGatherImpl:D4,raggedRangeImpl:L4,raggedTensorToTensorImpl:k4,rangeImpl:F4,rsqrtImpl:O4,scatterImpl:U4,sigmoidImpl:B4,simpleAbsImpl:JF,sliceImpl:$4,sparseFillEmptyRowsImpl:z4,sparseReshapeImpl:V4,sparseSegmentReductionImpl:G4,sqrtImpl:W4,squaredDifferenceImpl:H4,staticRegexReplaceImpl:X4,stridedSliceImpl:q4,stringNGramsImpl:K4,stringSplitImpl:Q4,stringToHashBucketFastImpl:Z4,subImpl:J4,tileImpl:eO,topKImpl:tO,transposeImpl:E4,uniqueImpl:nO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:sO,castImpl:iO,ceilImpl:aO,concatImpl:oO,equalImpl:lO,expImpl:uO,expm1Impl:cO,floorImpl:hO,floorDivImpl:dO,gatherNdImpl:fO,gatherV2Impl:pO,greaterEqualImpl:mO,greaterImpl:gO,lessEqualImpl:yO,lessImpl:vO,logImpl:xO,maxImpl:bO,maximumImpl:wO,minimumImpl:AO,multiplyImpl:SO,negImpl:_O,notEqualImpl:EO,prodImpl:TO,rangeImpl:CO,rsqrtImpl:MO,scatterImpl:RO,simpleAbsImpl:IO,sliceImpl:NO,stridedSliceImpl:PO,stringNGramsImpl:DO,subImpl:LO,tileImpl:kO,topKImpl:FO,transposeImpl:OO,uniqueImpl:V7}=rO;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=vt({opType:we.ABS,cpuKernelImpl:IO}),BO={kernelName:Qm,backendName:"webgpu",kernelFunc:UO};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=vt({opType:we.ACOS}),zO={kernelName:Zm,backendName:"webgpu",kernelFunc:$O};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VO=vt({opType:we.ACOSH}),GO={kernelName:Jm,backendName:"webgpu",kernelFunc:VO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=sn({opType:Ke.ADD,cpuKernelImpl:sO,supportsComplex:!0}),HO={kernelName:Ih,backendName:"webgpu",kernelFunc:WO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XO{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,r)=>`T${r}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});const t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${_e("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Vn({inputs:{x:r[0]},backend:t});const s=r.map(o=>o.dtype).reduce((o,l)=>Ps(o,l)),i=r.map(o=>o.shape),a=new XO(i);return t.runWebGPUProgram(a,r,s)}const jO={kernelName:eg,backendName:"webgpu",kernelFunc:qO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KO{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[t[s]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){L(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${_e()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YO{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[t[s]];this.outputShape=r,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=Xt(this.outputShape.length),t=dv(this.newDim);return`
      ${_e("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function dv(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let r=0;r<n.length;r++)t[n[r]]=`coords.${ns(r)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:i}=r,a=t,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[i[c]];if(t.shouldExecuteOnCPU([s])){const h=a.tensorMap.get(s.dataId).values,d=OO(h,s.shape,s.dtype,i,l);return t.makeTensorInfo(l,s.dtype,d)}if(s.shape.length===2&&Nn(i,[1,0])){const c=new KO(s.shape,i);return a.runWebGPUProgram(c,[s],s.dtype)}const u=new YO(s.shape,i);return a.runWebGPUProgram(u,[s],s.dtype)}const QO={kernelName:Al,backendName:"webgpu",kernelFunc:Br};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZO{constructor(e,t,r){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[s]=du(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,e.inSize>=32768&&r>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const r=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const s=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${r}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${_e("index")} {
         let outputIndex = index / ${r};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${r}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${r}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${r}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${s}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO={mean:"float32",all:"bool",any:"bool"};function Ti(n,e,t,r,s){const i=n.shape.length,a=[],o=cr(e,n.shape);let l=o;const u=Fo(l,i);let c=n;u!=null&&(c=Br({inputs:{x:n},attrs:{perm:u},backend:s}),l=Oo(l.length,i),a.push(c)),Bh(r,l,i);const[h,d]=du(c.shape,l);let f=h;t&&(f=ko(h,o));let m;if((r==="max"||r==="prod")&&s.shouldExecuteOnCPU([c])){const y=s.tensorMap.get(c.dataId).values;switch(r){case"max":const p=bO(y,Te(d),f,n.dtype);m=s.makeTensorInfo(f,n.dtype,p);break;case"prod":const{outVals:g,outShape:A,outDtype:x}=TO(c.shape,c.dtype,y,l);m=s.makeTensorInfo(A,x,g);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{const y=Te(d),g=Te(c.shape)/y,A={windowSize:y,inSize:y,batchSize:g,outSize:1},x=JO[r]||LE(n.dtype),S=[{type:"int32",data:[y]}],E=new ZO(A,r,s.device.limits.maxComputeWorkgroupSizeX),M=s.runWebGPUProgram(E,[c],x,S);a.push(M),m=ze({inputs:{x:M},attrs:{shape:f},backend:s})}return a.forEach(y=>s.disposeData(y.dataId)),m}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{keepDims:i,axis:a}=r;return Ti(s,a,i,"all",t)}const tU={kernelName:tg,backendName:"webgpu",kernelFunc:eU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{keepDims:i,axis:a}=r;return Ti(s,a,i,"any",t)}const rU={kernelName:ng,backendName:"webgpu",kernelFunc:nU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fv{constructor(e,t,r){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const s=[t];this.op=r==="min"?"<":">";const[i,a]=du(e,s);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=ke(this.outputShape),Te(a)<32?(this.type="plain",this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Ce(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ns(this.inputShape.length-1)}`,r=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)s+=`outputCoords.${ns(i)},`;return s};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${_e("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${r()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${_e("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${r()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${r()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=cr(i,s.shape);const o=Fo(a,s.shape.length);let l=s;const u=[];o!=null&&(l=Br({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Oo(a.length,l.shape.length)),Bh("argMax",[a[0]],l.shape.length);const c=new fv(l.shape,a[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>t.disposeData(f.dataId)),d}const iU={kernelName:rg,backendName:"webgpu",kernelFunc:sU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=cr(i,s.shape);const o=Fo(a,s.shape.length);let l=s;const u=[];o!=null&&(l=Br({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Oo(a.length,l.shape.length)),Bh("argMin",[a[0]],l.shape.length);const c=new fv(l.shape,a[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>t.disposeData(f.dataId)),d}const oU={kernelName:sg,backendName:"webgpu",kernelFunc:aU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=vt({opType:we.ASIN}),uU={kernelName:ig,backendName:"webgpu",kernelFunc:lU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU=vt({opType:we.ASINH}),hU={kernelName:ag,backendName:"webgpu",kernelFunc:cU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=vt({opType:we.ATAN}),fU={kernelName:og,backendName:"webgpu",kernelFunc:dU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU=sn({opType:Ke.ATAN2}),mU={kernelName:ug,backendName:"webgpu",kernelFunc:pU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=vt({opType:we.ATANH}),yU={kernelName:lg,backendName:"webgpu",kernelFunc:gU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vU{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wo{constructor(e,t,r=!1,s=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=i,this.shaderKey=`pool2D_${t}_${r}_${s}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class cd{constructor(e,t,r=!1,s=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=i,this.shaderKey=`pool3D_${t}_${r}_${s}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:a}=r;return Ti(s,i,a,"max",t)}const xU={kernelName:y0,backendName:"webgpu",kernelFunc:pv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{keepDims:i,axis:a}=r;return Ti(s,a,i,"mean",t)}const bU={kernelName:A0,backendName:"webgpu",kernelFunc:mv};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(n,e,t,r){if(e.filterWidth===1&&e.filterHeight===1&&Nn(e.inShape,e.outShape))return Vn({inputs:{x:n},backend:r});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const a=n.shape.length,o=ze({inputs:{x:n},backend:r,attrs:{shape:[n.shape[a-3]*n.shape[a-2],n.shape[a-1]]}});let l;t==="avg"?l=mv({inputs:{x:o},backend:r,attrs:{axis:0,keepDims:!1}}):(L(t==="max",()=>`Invalid pool type ${t}`),l=pv({inputs:{x:o},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const u=ze({inputs:{x:l},backend:r,attrs:{shape:e.outShape}});return r.disposeData(o.dataId),r.disposeData(l.dataId),u}let s;const i=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?s=new vU(e):(t==="avg"?s=new wo(e,"avg"):(L(t==="max",()=>`Invalid pool type ${t}`),s=new wo(e,"max")),i.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),r.runWebGPUProgram(s,[n],n.dtype,i)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1,c=Sa(s.shape,i,a,u,o,l);return gv(s,c,"avg",t)}const AU={kernelName:cg,backendName:"webgpu",kernelFunc:wU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=[1,1,1],h=lu(s.shape,i,a,c,o,u,l),d=new cd(h,"avg"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[s],s.dtype,f)}const _U={kernelName:hg,backendName:"webgpu",kernelFunc:SU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EU{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class TU{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=lu(a.shape,o,l,1,u,c),d=new TU(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),m=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return t.runWebGPUProgram(d,[s],a.dtype,m)}const MU={kernelName:V_,backendName:"webgpu",kernelFunc:CU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i;lv([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Sa(a.shape,o,l,1,u),h=new EU(c),d=1/(c.filterHeight*c.filterWidth),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[s],a.dtype,f)}const IU={kernelName:z_,backendName:"webgpu",kernelFunc:RU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return bu({a:s,b:i,transposeA:a,transposeB:o,backend:t})}const PU={kernelName:dg,backendName:"webgpu",kernelFunc:NU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DU{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Xt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Xt(this.rank),t=LU(this.rank);let r;return this.start.length===1?r=this.outputShape.map((i,a)=>"sourceLoc = uniforms.start + coords;"):r=this.outputShape.map((i,a)=>`sourceLoc.${ih[a]} = uniforms.start.${ns(a)} + coords.${ih[a]};`),`
      ${_e("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${r.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}}const ih=["x","y","z","w","u","v"];function LU(n){if(n===1)return"sourceLoc";if(n<=6)return ih.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:a}=r,[o,l]=lL(s,i,a);if(sL(s,o,l),t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.tensorMap.get(s.dataId),d=NO(h.values,o,l,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,d)}if(Te(l)===0)return t.makeTensorInfo(l,s.dtype,[]);const u=new DU(o,l),c=[{type:"int32",data:o}];return t.runWebGPUProgram(u,[s],s.dtype,c)}const kU={kernelName:ny,backendName:"webgpu",kernelFunc:Ca};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:a}=r;L(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce((A,x)=>A*x),l=tv(s.shape,i,o),u=nv(l.length,i.length),c=rv(s.shape,i,o),h=yL(a,i.length),d=vL(c,a,i.length),f=[],m=ze({inputs:{x:s},backend:t,attrs:{shape:l}}),y=Br({inputs:{x:m},backend:t,attrs:{perm:u}}),p=ze({inputs:{x:y},backend:t,attrs:{shape:c}}),g=Ca({inputs:{x:p},backend:t,attrs:{begin:h,size:d}});return f.push(m),f.push(y),f.push(p),f.forEach(A=>t.disposeData(A.dataId)),g},OU={kernelName:fg,backendName:"webgpu",kernelFunc:FU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU=`
  fn bincount_write(index: i32, value: f32) {
    ${Os("&result[index]","value","float32")}
  }
`,BU=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class yv{constructor(e,t,r=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=r,r&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?BU:UU}
  ${_e("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a}=r,o=Te(s.shape),u=Te(i.shape)>0,c=[a],h=i.dtype,d=In({backend:t,attrs:{shape:c,value:0,dtype:h}}),f=new yv([o],u),m=[{type:"int32",data:[a]}],y=u?[s,i]:[s];return t.runWebGPUProgram(f,y,h,m,d)}const zU={kernelName:pg,backendName:"webgpu",kernelFunc:$U};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${_e("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e;if(t.shouldExecuteOnCPU([r,s])){const c=t.tensorMap.get(r.dataId),h=t.tensorMap.get(s.dataId),d=c.values,f=h.values,m=Rt(Array.from(d),Array.from(f));return t.makeTensorInfo([m.length],"int32",Int32Array.from(m))}const i=Te(r.shape),a=Te(s.shape),o=Math.max(i,a),l=new VU(o),u=[{type:"int32",data:[i]},{type:"int32",data:[a]}];return t.runWebGPUProgram(l,[r,s],"int32",u)}const WU={kernelName:mg,backendName:"webgpu",kernelFunc:GU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vv=sn({opType:Ke.NOT_EQUAL,dtype:"bool",cpuKernelImpl:EO}),HU={kernelName:I0,backendName:"webgpu",kernelFunc:vv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.tensorMap.get(r.dataId);return Vn({inputs:{x:s.complexTensorInfos.real},backend:t})}const XU={kernelName:z0,backendName:"webgpu",kernelFunc:$o};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(n,e){const t=new Ta(n.shape,we.TO_INT),r=e.runWebGPUProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ah(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return Vn({inputs:{x:s},backend:t});const a=mi(s.shape),o=ah({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),l=Ei({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeData(o.dataId),l}if(s.dtype==="complex64"){const a=$o({inputs:{input:s},backend:t}),o=ah({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeData(a.dataId),o}if(!N_(s.dtype,i)){const a=Vn({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(t.shouldExecuteOnCPU([s])){const a=t.tensorMap.get(s.dataId).values,[o,l,u]=iO(a,s.shape,s.dtype,i);return t.makeTensorInfo(o,l,u)}if(i==="int32")return qU(s,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",Ns("bool",1)),l=vv({inputs:{a:s,b:a},backend:t});return t.disposeData(a.dataId),l}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const jU={kernelName:Nh,backendName:"webgpu",kernelFunc:ah};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KU=vt({opType:we.CEIL,cpuKernelImpl:aO}),YU={kernelName:gg,backendName:"webgpu",kernelFunc:KU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QU{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZU{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;const l=[{type:"float32",data:[i]},{type:"float32",data:[a]}];return Te(s.shape)%4===0?o=new QU(s.shape):o=new ZU(s.shape),t.runWebGPUProgram(o,[s],s.dtype,l)}const eB={kernelName:yg,backendName:"webgpu",kernelFunc:JU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tB{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cp(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function nB(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.tensorMap.get(r.dataId),i=new tB(r.shape),a=[Cp(r,s.complexTensorInfos.real),Cp(r,s.complexTensorInfos.imag)];return t.runWebGPUProgram(i,a,a[0].dtype)}const rB={kernelName:xg,backendName:"webgpu",kernelFunc:nB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=bo(e,1),this.variableNames=e.map((t,r)=>`T${r}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)e.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);const r=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${_e("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.tensorMap.get(r.dataId);return Vn({inputs:{x:s.complexTensorInfos.imag},backend:t})}const iB={kernelName:r0,backendName:"webgpu",kernelFunc:wu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n,e,t){const r=n[0].dtype;if(r==="complex64"){const m=n.map(x=>$o({inputs:{input:x},backend:t})),y=n.map(x=>wu({inputs:{input:x},backend:t})),p=to(m,e,t),g=to(y,e,t),A=Ei({inputs:{real:p,imag:g},backend:t});return m.forEach(x=>t.disposeData(x.dataId)),y.forEach(x=>t.disposeData(x.dataId)),t.disposeData(p.dataId),t.disposeData(g.dataId),A}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const m=n.map(E=>{const R=[-1,Te(E.shape.slice(e))];return ze({inputs:{x:E},backend:t,attrs:{shape:R}})}),y=m.map(E=>({vals:t.readSync(E.dataId),shape:E.shape})),p=bo(m.map(E=>E.shape),1),g=m[0].shape[0]===1,A=oO(y,p,r,g),x=bo(n.map(E=>E.shape),e),S=t.makeTensorInfo(x,r,A);return m.forEach(E=>t.disposeData(E.dataId)),S}const i=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>i){const m=[];for(let p=0;p<n.length;p+=i){const g=n.slice(p,p+i);m.push(to(g,e,t))}const y=to(m,e,t);for(const p of m)t.disposeData(p.dataId);return y}const{tensors2D:a,outShape:o}=aB(n,e,t),l=a.map(m=>m.shape),u=new sB(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let m=1;m<h.length;m++)h[m]=h[m-1]+l[m][1],c.push({type:"int32",data:[h[m]]})}const d=t.runWebGPUProgram(u,a,a[0].dtype,c);a.forEach(m=>t.disposeData(m.dataId));const f=ze({inputs:{x:d},backend:t,attrs:{shape:o}});return t.disposeData(d.dataId),f}function aB(n,e,t){const r=bo(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>ze({inputs:{x:i},backend:t,attrs:{shape:[Te(i.shape.slice(0,e)),Te(i.shape.slice(e))]}})),outShape:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=cr(s,e[0].shape)[0],a=e.map(u=>u.shape);hL(a,i);const o=bo(e.map(u=>u.shape),i);if(Te(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>Te(u.shape)>0);return l.length===1?Vn({inputs:{x:l[0]},backend:t}):to(l,i,t)}const oB={kernelName:bg,backendName:"webgpu",kernelFunc:xv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,e,t,r,s=!1,i=null,a=!1,o=4,l=4,u=4){const c=C=>{switch(C){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${C} is not supported.`)}},h=C=>{switch(C){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${C} is not supported.`)}},d=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,f=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,m=n?"uniforms.xShape[1]":"uniforms.xShape[2]",y=n?"uniforms.xShape[2]":"uniforms.xShape[3]",p=n?"row":"col",g=n?"col":"row",A=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${p} / outWidth;
      let outCol = ${p} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${at(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${m} && xCol >= 0 && xCol < ${y}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,x=n?e&&r?`
      ${A}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${A}
      }
      return ${at(o)}(0.0);`:r&&t?`
      ${A}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${A}
      }
      return ${at(o)}(0.0);`,S=`${h(l)}`,E=at(u),M=at(n?o:l),R=at(n?l:o);return`
      ${us(i,a,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${M} {
        ${n?x:S}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${R} {
        ${n?S:x}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${E}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${f}
        ${_i(s,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class uB{constructor(e,t,r,s,i=!1,a=null,o=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=iv(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=av(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),o&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=r%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?vu(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):xu(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${lB(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cB{constructor(e,t=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=r,this.hasPreluActivationWeights=s,t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${us(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${_i(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${_e("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hB{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,r=this.isChannelsLast?"coords[1]":"coords[2]",s=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${_e("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${r};
        let col = ${s};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xl(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function dB({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.dataFormat==="channelsLast",u=!l,c=!1,h=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=[];let f,m;if(h){const g=t.inHeight*t.inWidth*t.inChannels;f=ze({inputs:{x:n},backend:r,attrs:{shape:[1,t.batchSize,g]}}),m=ze({inputs:{x:e},backend:r,attrs:{shape:[1,g,t.outChannels]}})}else f=ze({inputs:{x:n},backend:r,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),m=ze({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(d.push(f),d.push(m),i!=null){const g=Xl(i.shape,l);g!=null&&(i=ze({inputs:{x:i},backend:r,attrs:{shape:g}}),d.push(i))}if(s!=null){const g=Xl(s.shape,l);g!=null&&(s=ze({inputs:{x:s},backend:r,attrs:{shape:g}}),d.push(s))}const y=bu({a:l?f:m,b:l?m:f,transposeA:u,transposeB:c,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),p=ze({inputs:{x:y},backend:r,attrs:{shape:t.outShape}});d.push(y);for(const g of d)r.disposeData(g.dataId);return p}function fB({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:f,outWidth:m,outHeight:y,dilationWidth:p,dilationHeight:g,dataFormat:A}=t,x=A==="channelsLast",S=l*u*c,E=y*m,M=x?[t.batchSize,E,S]:[t.batchSize,S,E],R=new hB(M,x),O=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[d,h]},{type:"int32",data:[g,p]},{type:"int32",data:[m]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],C=r.runWebGPUProgram(R,[n],n.dtype,O),N=[];N.push(C);const $=ze({inputs:{x:e},backend:r,attrs:{shape:[1,S,-1]}});if(N.push($),i!=null){const Q=Xl(i.shape,x);Q!=null&&(i=ze({inputs:{x:i},backend:r,attrs:{shape:Q}}),N.push(i))}if(s!=null){const Q=Xl(s.shape,x);Q!=null&&(s=ze({inputs:{x:s},backend:r,attrs:{shape:Q}}),N.push(s))}const F=bu({a:x?C:$,b:x?$:C,transposeA:!x,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),X=ze({inputs:{x:F},backend:r,attrs:{shape:t.outShape}});N.push(F);for(const Q of N)r.disposeData(Q.dataId);return X}function bv({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=s!=null,u=i!=null,c=t.dataFormat==="channelsLast",h=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=qe().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return dB({x:n,filter:e,convInfo:t,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});const f=qe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:r.thresholdToIncreaseWorkgroups,y=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(qe().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||y<=m)return fB({x:n,filter:e,convInfo:t,backend:r,bias:s,preluActivationWeights:i,leakyreluAlpha:a,activation:o});let p;const g=[t.padInfo.top,t.padInfo.left],A=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)p=new cB(t,l,o,u);else{const M=c?t.outHeight*t.outWidth:t.outChannels,R=c?t.outChannels:t.outHeight*t.outWidth,O=t.filterHeight*t.filterWidth*t.inChannels;A.push({type:"int32",data:[M]},{type:"int32",data:[R]},{type:"int32",data:[O]});const C=r.adapterInfo.isIntel();p=new uB(t,M,R,O,l,o,u,C)}const x=[],S=[n,e];l&&(!c&&s.shape.length===1&&(s=ze({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),x.push(s)),S.push(s)),u&&(!c&&i.shape.length===1&&(i=ze({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}}),x.push(i)),S.push(i)),o==="leakyrelu"&&(A.push({type:"float32",data:[a]}),p.uniforms+=" alpha : f32,");const E=r.runWebGPUProgram(p,S,n.dtype,A);for(const M of x)r.disposeData(M.dataId);return E}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const{inputs:e,attrs:t,backend:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=t,h=_a(l),d=hr(s.shape,i.shape,a,u,o,c,!1,h);return bv({x:s,filter:i,convInfo:d,backend:r})}const mB={kernelName:wg,backendName:"webgpu",kernelFunc:pB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,r=this.isChannelsLast?3:1,s=`
    ${_e()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${s}
    `:`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${r}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class yB{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class vB{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class xB{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=_a(l),d=hr(s.shape,c,a,1,o,u,!1,h),f=new yB(d),m=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(f,[s,i],s.dtype,m)}const wB={kernelName:Ag,backendName:"webgpu",kernelFunc:bB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n=4){const e=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},r=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${at(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${at(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${at(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${at(n)} {
    ${r}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${at(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${at(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${at(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class SB{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,L(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=iv(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=av(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?vu(this.elementsPerThread,this.workgroupSize):xu(this.elementsPerThread,this.workgroupSize);return`
    ${AB(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=_a(u),d=hr(a,i.shape,o,1,l,c,!1,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let m;if(qe().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")m=new gB(d);else{m=new SB(d);const y=d.inHeight*d.inWidth,p=d.inChannels,g=d.filterHeight*d.filterWidth*d.outChannels;f.push({type:"uint32",data:[y]},{type:"uint32",data:[p]},{type:"uint32",data:[g]})}return t.runWebGPUProgram(m,[s,i],"float32",f)}const EB={kernelName:Sg,backendName:"webgpu",kernelFunc:_B};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TB{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=uu(s.shape,i.shape,a,l,o),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new TB(u),f=Ps(s.dtype,i.dtype);return t.runWebGPUProgram(d,[s,i],f,h)}const MB={kernelName:_g,backendName:"webgpu",kernelFunc:CB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=uu(s.shape,l,a,1,o),c=new vB(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(c,[s,i],i.dtype,h)}const IB={kernelName:W_,backendName:"webgpu",kernelFunc:RB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,pad:o,inputShape:l}=r,u=uu(l,i.shape,a,1,o),c=new xB(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(c,[s,i],s.dtype,h)}const PB={kernelName:Eg,backendName:"webgpu",kernelFunc:NB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB=vt({opType:we.COS}),LB={kernelName:Tg,backendName:"webgpu",kernelFunc:DB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=vt({opType:we.COSH}),FB={kernelName:Cg,backendName:"webgpu",kernelFunc:kB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OB{constructor(e,t,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[i]=t;this.outputShape=[i,r[0],r[1],e],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[r,s,i]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${r});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new OB(s.shape[3],i.shape,o,l),h=[{type:"float32",data:[u]}];return t.runWebGPUProgram(c,[s,i,a],"float32",h)},BB={kernelName:Ig,backendName:"webgpu",kernelFunc:UB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ao;(function(n){n.Prod="*",n.Sum="+"})(Ao||(Ao={}));class Mp{constructor(e,t,r,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=r,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Ao.Prod?"1.0":"0.0",r=this.exclusive?t:`getX(${Rp(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1];let i="",a="";return this.exclusive?(i=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${_e("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Ip(e,"coords",this.op)};
         var val = ${r};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${a};
           ${Ip(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${Rp(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function Rp(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Ip(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(n,e,t,r,s,i){const a=e.shape.length,o=Fo([r],a);let l=e;o!=null&&(l=Br({inputs:{x:e},backend:t,attrs:{perm:o}}));const u=Oo(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=Vn({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const f=new Mp(n,l.shape,!1,i),m=h,y=[{type:"float32",data:[d]}];h=t.runWebGPUProgram(f,[h],h.dtype,y),t.disposeData(m.dataId)}if(s){const d=new Mp(n,l.shape,s,i),f=h,m=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(d,[h],h.dtype,m),t.disposeData(f.dataId)}if(o!=null){const d=m1(o),f=Br({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeData(h.dataId),t.disposeData(l.dataId),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return wv(Ao.Prod,s,t,i,a,o)}const zB={kernelName:Mg,backendName:"webgpu",kernelFunc:$B};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return wv(Ao.Sum,s,t,i,a,o)}const GB={kernelName:Rg,backendName:"webgpu",kernelFunc:VB};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r,l=s.shape.length===1,c=Te(i.shape)>0,h=i.dtype,d=l?[s.shape[0]]:[s.shape[0],s.shape[1]],f=l?[a]:[s.shape[0],a],m=In({backend:t,attrs:{shape:f,value:0,dtype:h}}),y=new yv(d,c,o),p=[{type:"int32",data:[a]}],g=c?[s,i]:[s];return t.runWebGPUProgram(y,g,h,p,m)}const HB={kernelName:Ng,backendName:"webgpu",kernelFunc:WB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XB{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=a==="NHWC"?s.shape[1]:s.shape[2],u=a==="NHWC"?s.shape[2]:s.shape[3],c=a==="NHWC"?s.shape[3]:s.shape[1],h=l*i,d=u*i,f=c/(i*i),m=a==="NHWC"?[o,h,d,f]:[o,f,h,d],y=[{type:"int32",data:[i]}],p=new XB(m,a);return t.runWebGPUProgram(p,[s],s.dtype,y)}const jB={kernelName:Pg,backendName:"webgpu",kernelFunc:qB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KB{constructor(e,t,r,s=!1,i=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=i,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=r,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],r=this.workgroupSize[1]+this.filterHeight-1,s=this.workgroupSize[0]+this.filterWidth-1;return`
      ${us(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${r}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${_e()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${_i(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Av{constructor(e,t=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ke(i),this.dispatch=Ce(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),L(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${r}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,r=this.convInfo.strideWidth;return`
      ${us(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${_e("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${r}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${r} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${_i(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sv{constructor(e,t=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${us(this.activation,this.hasPreluActivation,!1,4)}

      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${_i(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=_a(l);let d=u;d==null&&(d=[1,1]);const f=hr(s.shape,i.shape,a,d,o,c,!0,h),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],y=f.dataFormat==="channelsLast";let p;return!y&&f.inHeight>16&&f.inWidth>16&&f.strideHeight===1&&f.strideWidth===1&&f.dilationWidth===1&&f.dilationHeight===1&&f.inChannels===f.outChannels?p=new KB(f.outShape,f.filterHeight,f.filterWidth):y&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&f.dilationHeight===1&&f.dilationWidth===1&&f.inChannels%4===0?(p=new Av(f),m.push({type:"int32",data:[p.virtualWidth]})):(p=new Sv(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),t.runWebGPUProgram(p,[s,i],s.dtype,m)}const QB={kernelName:Dg,backendName:"webgpu",kernelFunc:YB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZB{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class JB{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=hr(s.shape,c,a,o,l,u,!0),d=new ZB(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[s,i],"float32",f)}const t5={kernelName:Lg,backendName:"webgpu",kernelFunc:e5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=hr(c,i.shape,a,o,l,u,!0),d=new JB(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[s,i],s.dtype,f)}const r5={kernelName:kg,backendName:"webgpu",kernelFunc:n5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s5{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],i=Te(r.shape),a=ze({inputs:{x:r},backend:t,attrs:{shape:[i]}}),o=new s5(i),l=t.runWebGPUProgram(o,[a],a.dtype),u=ze({inputs:{x:l},backend:t,attrs:{shape:s}});return t.disposeData(a.dataId),t.disposeData(l.dataId),u}const a5={kernelName:Fg,backendName:"webgpu",kernelFunc:i5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o5{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Oh(s.shape,i.shape,a,o,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new o5(u);return t.runWebGPUProgram(d,[s,i],s.dtype,h)}const u5={kernelName:Og,backendName:"webgpu",kernelFunc:l5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c5{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(e.outShape),this.dispatch=Ce(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Os("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class h5{constructor(e,t,r){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=ke(e.outShape),this.dispatch=Ce(this.dispatchLayout,e.outShape,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${r} type.`);this.type=r,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Os("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,dy:a}=e,{strides:o,pad:l,dilations:u}=r,c=Oh(s.shape,i.shape,o,l,"NHWC",u),h=i.dtype,d=new h5(c,i.shape,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Te(c.outShape)]}],m=In({backend:t,attrs:{shape:i.shape,value:0,dtype:h}});return t.runWebGPUProgram(d,[s,i,a],h,f,m)}const f5={kernelName:X_,backendName:"webgpu",kernelFunc:d5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,dy:a}=e,{strides:o,pad:l,dilations:u}=r,c=Oh(s.shape,i.shape,o,l,"NHWC",u),h=s.dtype,d=new c5(c,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Te(c.outShape)]}],m=In({backend:t,attrs:{shape:c.inShape,value:0,dtype:h}});return t.runWebGPUProgram(d,[s,i,a],h,f,m)}const m5={kernelName:H_,backendName:"webgpu",kernelFunc:p5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g5{constructor(e,t,r){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=ya.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=r,this.shaderKey=`draw_${t}_${r}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${_e("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:i,options:a}=r,[o,l]=s.shape.slice(0,2),{imageOptions:u}=a||{},c=u?.alpha||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[o,l],f=new g5(d,s.dtype,h);i.width=l,i.height=o;const m="webgpu";let y=i.getContext(m),p;y||(p=new OffscreenCanvas(l,o),y=p.getContext(m));const g=s.shape.length===3?s.shape[2]:1;y.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const A="int32",x=t.makeTensorInfo(d,A),S=t.tensorMap.get(x.dataId);S.resource=y.getCurrentTexture(),S.external=!0;const E=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(t.runWebGPUProgram(f,[s],A,E,x),p){const M=i.getContext("2d");if(!M)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");M.drawImage(p,0,0)}return t.disposeData(x.dataId),s}const v5={kernelName:q_,backendName:"webgpu",kernelFunc:y5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _v=sn({opType:Ke.MUL,cpuKernelImpl:SO,supportsComplex:!0}),x5={kernelName:M0,backendName:"webgpu",kernelFunc:_v};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;return Ti(s,i,a,"sum",t)}const b5={kernelName:uy,backendName:"webgpu",kernelFunc:Ev};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=ML(s,i.length);IL(a.length,l,i);const{path:u,steps:c}=NL(o,l),h=c.length;let d=null,f=a.length;const m=[];for(let y=0;y<h;++y){for(const p of c[y]){const{permutationIndices:g,expandDims:A}=RL(f,l[p]);let x;PL(g)?x=i[p]:(x=Br({inputs:{x:i[p]},backend:t,attrs:{perm:g}}),m.push(x));const S=x.shape.slice();for(let E=0;E<A.length;++E)S.splice(A[E],0,1);Nn(x.shape,S)||(x=ze({inputs:{x},backend:t,attrs:{shape:S}}),m.push(x)),d===null?d=x:(d=_v({inputs:{a:x,b:d},backend:t}),m.push(d))}y<h-1&&(u[y]>=0&&(d=Ev({inputs:{x:d},backend:t,attrs:{axis:u[y]-(a.length-f),keepDims:!1}}),m.push(d)),f--)}for(const y of m)y!==d&&t.disposeData(y.dataId);return d}const A5={kernelName:Bg,backendName:"webgpu",kernelFunc:w5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5=vt({opType:we.ELU}),_5={kernelName:$g,backendName:"webgpu",kernelFunc:S5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,i=new Wl(Ke.ELU_DER,r.shape,s.shape);return t.runWebGPUProgram(i,[r,s],r.dtype)},T5={kernelName:j_,backendName:"webgpu",kernelFunc:E5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5=sn({opType:Ke.EQUAL,dtype:"bool",cpuKernelImpl:lO}),M5={kernelName:Vg,backendName:"webgpu",kernelFunc:C5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5=vt({opType:we.ERF}),I5={kernelName:zg,backendName:"webgpu",kernelFunc:R5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=vt({opType:we.EXP,cpuKernelImpl:uO,dtype:"float32"}),P5={kernelName:Gg,backendName:"webgpu",kernelFunc:N5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oh(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(L(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),ze({inputs:{x:i},backend:r,attrs:{shape:o}})}const D5={kernelName:Wg,backendName:"webgpu",kernelFunc:oh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=vt({opType:we.EXPM1,cpuKernelImpl:cO}),k5={kernelName:Hg,backendName:"webgpu",kernelFunc:L5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Np{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(n,e,t){const r=t.tensorMap.get(n.dataId),s=Te(n.shape),i=n.shape[n.shape.length-1],a=s/i,o=[],l=ze({inputs:{x:n},backend:t,attrs:{shape:[a,i]}});o.push(l);const u=l.shape,c=new Np("real",u),h=new Np("imag",u),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],f=e?2*Math.PI:-2*Math.PI,m=e?u[1]:1,y=[{type:"float32",data:[f]},{type:"float32",data:[m]}],p=t.runWebGPUProgram(c,d,"float32",y);o.push(p);const g=t.runWebGPUProgram(h,d,"float32",y);o.push(g);const A=Ei({inputs:{real:p,imag:g},backend:t});o.push(A);const x=ze({inputs:{x:A},backend:t,attrs:{shape:n.shape}});return o.forEach(S=>t.disposeData(S.dataId)),x}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:e,backend:t}=n,{input:r}=e;return Tv(r,!1,t)}const O5={kernelName:Xg,backendName:"webgpu",kernelFunc:F5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U5{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:jg,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new U5(t.shape);return r.runWebGPUProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=vt({opType:we.FLOOR,cpuKernelImpl:hO}),z5={kernelName:Kg,backendName:"webgpu",kernelFunc:$5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5=sn({opType:Ke.FLOOR_DIV,cpuKernelImpl:dO,dtype:"int32"}),G5={kernelName:Yg,backendName:"webgpu",kernelFunc:V5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W5{constructor(e,t,r=!1){this.pixelsOpType=ya.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=r,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${_e("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5={kernelName:Uc,backendName:"webgpu",kernelFunc:X5};let Hi,fc=qe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function X5(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:i}=r;if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&s instanceof ImageBitmap,[c,h]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[h,c,i],f=!1,m=a||o;if(u||l||m){let A;{if(m){const z=qe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Hi==null||z!==fc)&&(fc=z,Hi=document.createElement("canvas").getContext("2d",{willReadFrequently:fc})),Hi.canvas.width=c,Hi.canvas.height=h,Hi.drawImage(s,0,0,c,h),s=Hi.canvas}const N=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,$="rgba8unorm",q=t.textureManager.acquireTexture(d[1],d[0],$,N);t.queue.copyExternalImageToTexture({source:s},{texture:q},[d[1],d[0]]),A=q}const x=Te(d),S=gn(d),E=new W5(d,i,f),M=[{type:"uint32",data:[x]},{type:"uint32",data:[i]},{type:"uint32",data:[...S]}],R=t.makeTensorInfo([h,c],"int32"),O=t.tensorMap.get(R.dataId);O.resource=A;const C=t.runWebGPUProgram(E,[R],"int32",M);return t.disposeData(R.dataId),C}const y=s.data;let p=y;if(i!=null&&i!==4){p=new Uint8Array(s.width*s.height*i);const A=y.length;let x=0;for(let S=0;S<A;S++)S%4<i&&(p[x++]=y[S])}const g=t.makeTensorInfo(d,"int32",new Int32Array(p));return t.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q5{constructor(e,t,r,s,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Rt(e,t),Rt(e,r),this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),s!=null&&(Rt(e,s),this.variableNames.push("offset")),i!=null&&(Rt(e,i),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${_e("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5={kernelName:Qg,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r,scale:s,offset:i,mean:a,variance:o}=n,{varianceEpsilon:l}=e,u=t,c=[r,a,o];let h=null;i!=null&&(h=i.shape,c.push(i));let d=null;s!=null&&(d=s.shape,c.push(s));const f=new q5(r.shape,a.shape,o.shape,h,d),m=[{type:"float32",data:[l]}];return u.runWebGPUProgram(f,c,r.dtype,m)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,y=_a(c),p=hr(s.shape,i.shape,l,h,u,d,!1,y);return bv({x:s,filter:i,convInfo:p,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:m,activation:f})}const Y5={kernelName:$c,backendName:"webgpu",kernelFunc:K5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=c;m==null&&(m=[1,1]),L($r(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=hr(s.shape,i.shape,l,m,u,h,!0),p=[s,i],g=a!=null,A=o!=null;g&&p.push(a),A&&p.push(o);const x=[{type:"int32",data:[y.padInfo.top,y.padInfo.left]},{type:"int32",data:[y.inHeight,y.inWidth]}];let S;return y.outHeight>4&&y.outWidth>4&&y.strideWidth<=2&&y.inChannels===y.outChannels&&y.dilationHeight===1&&y.dilationWidth===1&&y.inChannels%4===0?(S=new Av(y,g,d,A),x.push({type:"int32",data:[S.virtualWidth]})):(S=new Sv(y,g,d,A),x.push({type:"int32",data:[y.filterHeight]},{type:"int32",data:[y.filterWidth]},{type:"int32",data:[y.strideHeight,y.strideWidth]},{type:"int32",data:[y.dilationHeight,y.dilationWidth]})),d==="leakyrelu"&&(x.push({type:"float32",data:[f]}),S.uniforms+=" alpha : f32,"),t.runWebGPUProgram(S,p,"float32",x)}const Z5={kernelName:zc,backendName:"webgpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J5{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Xt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],o=Te(r.shape),[l,u,c,h]=nL(r,s),d=ze({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),f=ze({inputs:{x:r},backend:t,attrs:{shape:[Te(r.shape)/c,c]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const A=t.readSync(s.dataId),x=t.bufferSync(r),S=fO(A,x,r.dtype,u,a,c,h,r.shape,o);return t.makeTensorInfo(l,r.dtype,S.values)}const m=new J5(a,[u,c]),y=[{type:"int32",data:[a]},{type:"int32",data:h}],p=t.runWebGPUProgram(m,[f,d],f.dtype,y),g=ze({inputs:{x:p},backend:t,attrs:{shape:l}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(p.dataId),g}const t$={kernelName:Jg,backendName:"webgpu",kernelFunc:e$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n${constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=r$(this.aShape);return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function r$(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let r=0;r<n.length;r++)r===2?t.push("indexZ"):t.push(`${e[r]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=cr(a,s.shape)[0],u=qL(s,i,l,o),c=Te(i.shape),h=[],d=ze({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ze({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([s,i])){const x=t.tensorMap.get(f.dataId).values,S=Bt(f.shape,f.dtype,x),M=t.tensorMap.get(d.dataId).values,R=Bt(d.shape,d.dtype,M),O=pO(R,S,m);return h.forEach(C=>t.disposeData(C.dataId)),t.makeTensorInfo(u.outputShape,O.dtype,O.values)}const y=new n$(d.shape,m),p=t.runWebGPUProgram(y,[d,f],d.dtype);h.push(p);const g=ze({inputs:{x:p},backend:t,attrs:{shape:u.outputShape}});return h.forEach(A=>t.disposeData(A.dataId)),g}const s$={kernelName:Zg,backendName:"webgpu",kernelFunc:Cv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i$=sn({opType:Ke.GREATER,cpuKernelImpl:gO,dtype:"bool"}),a$={kernelName:e0,backendName:"webgpu",kernelFunc:i$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o$=sn({opType:Ke.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:mO}),l$={kernelName:t0,backendName:"webgpu",kernelFunc:o$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const{inputs:e,backend:t}=n,{input:r}=e;return Tv(r,!0,t)}const c$={kernelName:n0,backendName:"webgpu",kernelFunc:u$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h$=vt({opType:we.IS_FINITE,dtype:"bool"}),d$={kernelName:s0,backendName:"webgpu",kernelFunc:h$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f$=vt({opType:we.IS_INF,dtype:"bool"}),p$={kernelName:i0,backendName:"webgpu",kernelFunc:f$};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m$=vt({opType:we.IS_NAN,dtype:"bool"}),g$={kernelName:a0,backendName:"webgpu",kernelFunc:m$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r,a=[{type:"float32",data:[i]}],o=new Ta(s.shape,we.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(o,[s],"float32",a)}const v$={kernelName:o0,backendName:"webgpu",kernelFunc:y$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x$=sn({opType:Ke.LESS,dtype:"bool",cpuKernelImpl:vO}),b$={kernelName:l0,backendName:"webgpu",kernelFunc:x$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$=sn({opType:Ke.LESS_EQUAL,dtype:"bool",cpuKernelImpl:yO}),A$={kernelName:u0,backendName:"webgpu",kernelFunc:w$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S${constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,a=(s-r)/(i-1),o=new S$(i),l=[{type:"float32",data:[r]},{type:"float32",data:[a]}];return e.runWebGPUProgram(o,[],"float32",l)}const E$={kernelName:c0,backendName:"webgpu",kernelFunc:_$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T$=vt({opType:we.LOG,cpuKernelImpl:xO}),C$={kernelName:h0,backendName:"webgpu",kernelFunc:T$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M$=vt({opType:we.LOG1P}),R$={kernelName:d0,backendName:"webgpu",kernelFunc:M$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=sn({opType:Ke.LOGICAL_AND,dtype:"bool"}),N$={kernelName:f0,backendName:"webgpu",kernelFunc:I$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$=vt({opType:we.LOGICAL_NOT}),D$={kernelName:p0,backendName:"webgpu",kernelFunc:P$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$=sn({opType:Ke.LOGICAL_OR}),k$={kernelName:m0,backendName:"webgpu",kernelFunc:L$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mv=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class F${constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${Mv}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class O${constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,L(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ce(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${_e()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${Mv}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;let u;i>16?u=new F$(s.shape):u=new O$(s.shape,i);const c=[{type:"int32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return t.runWebGPUProgram(u,[s],s.dtype,c)}const B$={kernelName:g0,backendName:"webgpu",kernelFunc:U$};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $${constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new $$(s.shape),d=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return t.runWebGPUProgram(h,[s,i,a],s.dtype,d)}const V$={kernelName:K_,backendName:"webgpu",kernelFunc:z$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$=sn({opType:Ke.MAX,cpuKernelImpl:wO}),W$={kernelName:v0,backendName:"webgpu",kernelFunc:G$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1,c=Sa(s.shape,i,a,u,o,l);return gv(s,c,"max",t)}const X$={kernelName:x0,backendName:"webgpu",kernelFunc:H$};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=[1,1,1],h=lu(s.shape,i,a,c,o,u,l),d=new cd(h,"max"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[s],s.dtype,f)}const j$={kernelName:b0,backendName:"webgpu",kernelFunc:q$};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K${constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Y${constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=[1,1,1],d=lu(a.shape,o,l,h,u,c),f=new cd(d,"max",!0);let m=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const y=t.runWebGPUProgram(f,[a],"int32",m),p=new Y$(d);m=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(p,[s,y],a.dtype,m);return t.disposeData(y.dataId),g}const Z$={kernelName:Q_,backendName:"webgpu",kernelFunc:Q$};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:a}=e,o=i;lv([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Sa(o.shape,l,u,1,c,h),f=new wo(d,"max",!0);let m=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const y=t.runWebGPUProgram(f,[o],"int32",m),p=new K$(d);m=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(p,[s,y],o.dtype,m);return t.disposeData(y.dataId),g}const ez={kernelName:Y_,backendName:"webgpu",kernelFunc:J$};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(n){const{inputs:e,backend:t,attrs:r}=n,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=r,{x:l}=e;L(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];L($r(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Sa(l.shape,s,i,u,a),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new wo(c,"max",!1);const f=t.runWebGPUProgram(d,[l],l.dtype,h);d=new wo(c,"max",!0,!0,o);const m=t.runWebGPUProgram(d,[l],"int32",h);return[f,m]}const nz={kernelName:w0,backendName:"webgpu",kernelFunc:tz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;return Ti(s,i,a,"min",t)}const sz={kernelName:S0,backendName:"webgpu",kernelFunc:rz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=sn({opType:Ke.MIN,cpuKernelImpl:AO}),az={kernelName:_0,backendName:"webgpu",kernelFunc:iz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oz{constructor(e,t,r){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,i)=>s[0]+e[i]+s[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((s,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=r==="reflect"?0:1,this.shaderKey=`mirrorPad_${r}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),r=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",i=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=Xt(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${r});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${i}) {
              ${a} = (${i} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz={kernelName:E0,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{paddings:s,mode:i}=e,a=t,o=s.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new oz(r.shape,s,i);return a.runWebGPUProgram(l,[r],r.dtype,o)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uz=sn({opType:Ke.MOD}),cz={kernelName:T0,backendName:"webgpu",kernelFunc:uz};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hz{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dz{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${_e("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,a=ze({inputs:{x:s},backend:t,attrs:{shape:[Te(s.shape)/s.shape[i],s.shape[i]]}}),o=new dz(a.shape),l=t.runWebGPUProgram(o,[a],s.dtype),u=ze({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeData(a.dataId),t.disposeData(l.dataId),u}const fz={kernelName:dy,backendName:"webgpu",kernelFunc:Rv};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:Rv({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new hz(u,i),d=[{type:"float32",data:[a]},{type:"int32",data:[c]}],f=t.runWebGPUProgram(h,[l],"int32",d);return o||t.disposeData(l.dataId),f}const mz={kernelName:C0,backendName:"webgpu",kernelFunc:pz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const i=t.tensorMap.get(r.dataId),[a,o]=_O(i.values,r.shape,r.dtype);return t.makeTensorInfo(o,r.dtype,a)}const s=new Ta(r.shape,we.NEG);return t.runWebGPUProgram(s,[r],r.dtype)}const yz={kernelName:R0,backendName:"webgpu",kernelFunc:gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=t.readSync(s.dataId),c=t.readSync(i.dataId),{selectedIndices:h}=H1(u,c,a,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const xz={kernelName:N0,backendName:"webgpu",kernelFunc:vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=t.readSync(s.dataId),h=t.readSync(i.dataId),d=a,f=o,m=l,y=u,{selectedIndices:p,selectedScores:g}=X1(c,h,d,f,m,y);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const wz={kernelName:P0,backendName:"webgpu",kernelFunc:bz};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Az{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=Te(s.shape),c=new Az(u,a),h=ze({inputs:{x:s},backend:t,attrs:{shape:[u]}}),d=[{type:"float32",data:[o]},{type:"float32",data:[l]}],f=t.runWebGPUProgram(c,[h],i,d);t.disposeData(h.dataId);const m=[...s.shape,a],y=ze({inputs:{x:f},backend:t,attrs:{shape:m}});return t.disposeData(f.dataId),y}const _z={kernelName:L0,backendName:"webgpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ql(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=$o({inputs:{input:r},backend:t}),i=ql({inputs:{x:s},backend:t}),a=wu({inputs:{input:r},backend:t}),o=ql({inputs:{x:a},backend:t}),l=Ei({inputs:{real:i,imag:o},backend:t});return t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),l}else return In({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const Ez={kernelName:Ty,backendName:"webgpu",kernelFunc:ql};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iv(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=$o({inputs:{input:r},backend:t}),i=Iv({inputs:{x:s},backend:t}),a=wu({inputs:{input:r},backend:t}),o=ql({inputs:{x:a},backend:t}),l=Ei({inputs:{real:i,imag:o},backend:t});return t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),l}else return In({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const Tz={kernelName:D0,backendName:"webgpu",kernelFunc:Iv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return oh({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{Yn(i,c.shape,"All tensors passed to stack must have matching shapes"),L(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=oh({inputs:{input:c},backend:t,attrs:{dim:s}});return o.push(h),h}),u=xv({inputs:l,backend:t,attrs:{axis:s}});return o.forEach(c=>t.disposeData(c.dataId)),u}const Mz={kernelName:k0,backendName:"webgpu",kernelFunc:Cz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nv(n,e=!1){const t=n.length,r=Xt(t),s=n.map((h,d)=>`uniforms.pad${d}[0]`).join(","),i=n.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${t>1?`[${d}]`:""}`).join(","),a=t>1?`${r}(${s})`:`${s}`,o=t>1?`${r}(${i})`:`${i}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",u=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${a};
        let end = ${o};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}class Rz{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,s)=>r[0]+e[s]+r[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((r,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${Nv(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:a}=r;if(i.every(u=>Nn(u,[0,0])))return Vn({inputs:{x:s},backend:t});if(Te(s.shape)===0){const u=i.map((c,h)=>c[0]+s.shape[h]+c[1]);return In({backend:t,attrs:{shape:u,value:a,dtype:s.dtype}})}const o=[{type:"float32",data:[a]}];i.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));const l=new Rz(s.shape,i);return t.runWebGPUProgram(l,[s],s.dtype,o)},Nz={kernelName:F0,backendName:"webgpu",kernelFunc:Iz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pz=sn({opType:Ke.POW}),Dz={kernelName:O0,backendName:"webgpu",kernelFunc:Pz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,i=new Wl(Ke.PRELU,r.shape,s.shape);return t.runWebGPUProgram(i,[r,s],"float32")}const kz={kernelName:U0,backendName:"webgpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;return Ti(s,i,a,"prod",t)}const Oz={kernelName:B0,backendName:"webgpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:i,dtype:a}=t,o=CO(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},Bz={kernelName:$0,backendName:"webgpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $z=sn({opType:Ke.DIV}),zz={kernelName:Ug,backendName:"webgpu",kernelFunc:$z};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz=vt({opType:we.RECIPROCAL}),Gz={kernelName:V0,backendName:"webgpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz=vt({opType:we.RELU}),Hz={kernelName:G0,backendName:"webgpu",kernelFunc:Wz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xz=vt({opType:we.RELU6}),qz={kernelName:q0,backendName:"webgpu",kernelFunc:Xz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jz{constructor(e,t,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,size:a,halfPixelCenters:o}=r,[l,u]=a,c=i&&l>1?1:0,h=i&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],m=new jz(s.shape,l,u);return t.runWebGPUProgram(m,[s],"float32",f)}const Yz={kernelName:X0,backendName:"webgpu",kernelFunc:Kz};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qz{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,[,o,l]=s.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],f=h[0]/d[0],m=h[1]/d[1],y=1/f,p=1/m,g=Math.ceil(y)*2+2,A=Math.ceil(p)*2+2,x=new Qz(s.shape,a),S=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"float32",data:[p]},{type:"int32",data:[g]},{type:"int32",data:[A]}];return t.runWebGPUProgram(x,[i],i.dtype,S)}const Jz={kernelName:rE,backendName:"webgpu",kernelFunc:Zz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e6{constructor(e,t,r,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=i&&l>1?1:0,h=i&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[i?.5:0]}],m=new e6(s.shape,l,u,a);return t.runWebGPUProgram(m,[s],s.dtype,f)}const n6={kernelName:H0,backendName:"webgpu",kernelFunc:t6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,[,o,l]=s.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],f=h[0]/d[0],m=h[1]/d[1],y=1/f,p=1/m,g=Math.ceil(y)*2+2,A=Math.ceil(p)*2+2,x=new r6(s.shape,a),S=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[y]},{type:"float32",data:[p]},{type:"int32",data:[g]},{type:"int32",data:[A]}];return t.runWebGPUProgram(x,[i],i.dtype,S)}const i6={kernelName:nE,backendName:"webgpu",kernelFunc:s6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a6{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r,a=s.shape.length;if(a===0)return Vn({inputs:{x:s},backend:t});const o=s.shape,l=[1,1,1,1];o.forEach((p,g)=>{const A=g+4-a;l[A]=p});const u=cr(i,s.shape),c=[0,0,0,0];u.forEach(p=>{const g=p+4-a;c[g]=1});const h=[{type:"int32",data:c}],d=ze({inputs:{x:s},backend:t,attrs:{shape:l}}),f=new a6(l),m=t.runWebGPUProgram(f,[d],d.dtype,h);t.disposeData(d.dataId);const y=ze({inputs:{x:m},backend:t,attrs:{shape:o}});return t.disposeData(m.dataId),y}const l6={kernelName:j0,backendName:"webgpu",kernelFunc:o6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u6{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:My,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:a}=e,o=t,l=new u6(r.shape,i),[u,c]=gL(a,r.shape[1],r.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return typeof i=="number"?h.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):h.push({type:"float32",data:i}),o.runWebGPUProgram(l,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6=vt({opType:we.ROUND}),d6={kernelName:K0,backendName:"webgpu",kernelFunc:h6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6=vt({opType:we.RSQRT,cpuKernelImpl:MO}),p6={kernelName:Y0,backendName:"webgpu",kernelFunc:f6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ao{constructor(e,t,r,s,i,a,o,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=l,this.dispatchLayout=ke(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${r}_${s}_${this.sliceDimGreaterThanOne}_${o}_${l}`;const u=Xt(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=s,this.indicesRank=r}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,r=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let s="",i="";this.dispatchLayout.x.length===1?(s="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${_e("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${r};
          }
          let updateValue =
              ${Qs(this.type)}(${o});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${this.sumDupeIndices?Os("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jh(i,s,a),d=[h/u,u];if(h===0)return t.makeTensorInfo(a,s.dtype);const f=ze({inputs:{x:s},backend:t,attrs:{shape:[l,o]}}),m=ze({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),y=m.dtype,p=In({backend:t,attrs:{shape:d,value:0,dtype:y}}),g=Te(m.shape),A=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[g]}],x=new ao(m.shape,o,f.shape.length,m.shape.length,c,d,y),S=t.runWebGPUProgram(x,[m,f],y,A,p),E=ze({inputs:{x:S},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),t.disposeData(m.dataId),t.disposeData(S.dataId),E}const g6={kernelName:Q0,backendName:"webgpu",kernelFunc:m6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y6{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:a}=r,o=new y6([i.shape[0],i.shape[1]],a),l=[{type:"int32",data:[s.shape[1]]}];return t.runWebGPUProgram(o,[s,i],"int32",l)}const x6={kernelName:J0,backendName:"webgpu",kernelFunc:v6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b6{constructor(e,t,r){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=r,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const s=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&i.push(`${s[o]}`);e=i.join(),t=a.join()}return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e,a=new b6(r.shape.length,s.shape,s.shape.length);return t.runWebGPUProgram(a,[r,s,i],Ps(s.dtype,i.dtype))}const A6={kernelName:ey,backendName:"webgpu",kernelFunc:w6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=vt({opType:we.SELU}),_6={kernelName:ty,backendName:"webgpu",kernelFunc:S6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6=vt({opType:we.SIGMOID}),T6={kernelName:ay,backendName:"webgpu",kernelFunc:E6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6=vt({opType:we.SIGN}),M6={kernelName:iy,backendName:"webgpu",kernelFunc:C6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=vt({opType:we.SIN}),I6={kernelName:ry,backendName:"webgpu",kernelFunc:R6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6=vt({opType:we.SINH}),P6={kernelName:sy,backendName:"webgpu",kernelFunc:N6};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=vt({opType:we.SOFTPLUS}),L6={kernelName:oy,backendName:"webgpu",kernelFunc:D6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k6{constructor(e,t,r,s,i,a){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const o=new Array(s.length);for(let l=0;l<o.length;l++)o[l]=s[i[l]];this.outputShape=o,this.newDim=i,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Xt(s.length)}, paddedXShapeStrides : ${Xt(a)}, `,r.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){const e=Xt(this.outputShape.length),t=dv(this.newDim);return`
      ${El(this.paddedXShape,"PaddedX")}
      ${_e("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${Nv(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:a}=r;L(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce((A,x)=>A*x),l=[[0,0]];l.push(...a);for(let A=1+i.length;A<s.shape.length;++A)l.push([0,0]);const u=l.map((A,x)=>A[0]+s.shape[x]+A[1]),c=tv(u,i,o,!1),h=nv(c.length,i.length,!1),d=rv(u,i,o,!1),f=gn(u),m=new k6(s.shape,u,l,c,h,f.length),y=[{type:"int32",data:c},{type:"int32",data:f}];l.map(A=>y.push({type:"int32",data:[A[0],A[1]]}));const p=t.runWebGPUProgram(m,[s],s.dtype,y),g=ze({inputs:{x:p},backend:t,attrs:{shape:d}});return t.disposeData(p.dataId),g},O6={kernelName:cy,backendName:"webgpu",kernelFunc:F6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U6{constructor(e,t,r){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=r,this.dispatchLayout=ke([t]),this.dispatch=Ce(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Os("&result[outIndex]","value",this.type)}
      }
    }
  `}}class B6{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=ke(t),this.dispatch=Ce(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Os("&result[segmentId]","1","int32")}
      }
    }
  `}}class $6{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=ke(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n,e,t,r=!1,s){const a=Te(n.shape)/n.shape[0],o=n.dtype,l=Te(e.shape),u=s.readSync(t.dataId),h=l>0?u[l-1]+1:0;let d;const f=n.shape.slice();f[0]=h;const m=l*a,y=In({backend:s,attrs:{shape:f,value:0,dtype:o}});d=new U6(f,m,o);let p=[{type:"int32",data:[a]},{type:"int32",data:[m]}];const g=s.runWebGPUProgram(d,[n,e,t],o,p,y);if(r)return g;const A=In({backend:s,attrs:{shape:[h],value:0,dtype:"int32"}});d=new B6(h,t.shape);const x=s.runWebGPUProgram(d,[t],"int32",null,A),S=In({backend:s,attrs:{shape:f,value:0,dtype:o}});d=new $6(f,o),p=[{type:"int32",data:[a]}];const E=s.runWebGPUProgram(d,[g,x],o,p,S);return s.disposeData(g.dataId),s.disposeData(x.dataId),E}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;return Pv(r,s,i,!1,t)}const V6={kernelName:fy,backendName:"webgpu",kernelFunc:z6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;return Pv(r,s,i,!0,t)}const W6={kernelName:py,backendName:"webgpu",kernelFunc:G6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H6{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[s]*t[s];this.outputShape=r,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=X6(this.rank,"uniforms.");return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function X6(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n;s++)r.push(`(${t[s]} % ${e}aShape[${s}])`);return r.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;if(t.shouldExecuteOnCPU([s])||s.dtype==="string"||s.shape.length>=5){const l=t.readSync(s.dataId),u=s.dtype==="string"?l.map(d=>fa(d)):l,c=Bt(s.shape,s.dtype,u),h=kO(c,i);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new H6(s.shape,i);return t.runWebGPUProgram(a,[s],s.dtype)}const q6={kernelName:Dh,backendName:"webgpu",kernelFunc:hd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Jh(i,s,o),f=!1;if(i.dtype==="string"){const O=t.bufferSync(s),C=t.bufferSync(i),N=fa(t.readSync(a.dataId)[0]),$=RO(O,C,o,d,c,u,l,h,N,f);return t.makeTensorInfo(o,$.dtype,$.values)}const m=[d/c,c],y=ze({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),p=i.shape.length?ze({inputs:{x:i},backend:t,attrs:{shape:[u,c]}}):Vn({inputs:{x:i},backend:t}),g=p.dtype,A=t.makeTensorInfo([],g,rs(1,g)),x=ze({inputs:{x:a},backend:t,attrs:{shape:Array(m.length).fill(1)}}),S=hd({inputs:{x},backend:t,attrs:{reps:m}}),E=Te([u,c]),M=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[E]}];switch(u){case 0:break;case 1:{const O=new ao([u,c],l,y.shape.length,p.shape.length,h,m,g,f);t.runWebGPUProgram(O,[p,y],g,M,S)}break;default:{const O=new ao([u,c],l,y.shape.length,A.shape.length,h,m,g,f);t.runWebGPUProgram(O,[A,y],g,M,S)}{const O=new ao([u,c],l,y.shape.length,p.shape.length,h,m,g);t.runWebGPUProgram(O,[p,y],g,M,S)}}const R=ze({inputs:{x:S},backend:t,attrs:{shape:o}});return t.disposeData(y.dataId),t.disposeData(p.dataId),t.disposeData(x.dataId),t.disposeData(A.dataId),t.disposeData(S.dataId),R}const K6={kernelName:my,backendName:"webgpu",kernelFunc:j6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=cr(a,s.shape)[0],l=LL(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map(d=>{const f=[...h];f[o]=d;const m=Ca({inputs:{x:s},backend:t,attrs:{begin:c,size:f}});return c[o]+=d,m})}const Q6={kernelName:hy,backendName:"webgpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=vt({opType:we.SQRT}),J6={kernelName:ly,backendName:"webgpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV={kernelName:aE,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e,s=new Ta(t.shape,we.SQUARE);return r.runWebGPUProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV=sn({opType:Ke.SQUARED_DIFFERENCE}),nV={kernelName:gy,backendName:"webgpu",kernelFunc:tV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=new Ta(r.shape,we.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(s,[r],r.dtype,i)}const sV={kernelName:Cy,backendName:"webgpu",kernelFunc:rV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iV{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Xt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((i,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${_e("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:y,sliceDim0:p,isSimpleSlice:g,begin:A,end:x,strides:S}=uL(s.shape,i,a,o,l,u,c,h,d);let E;if(y)E=ze({inputs:{x:s},backend:t,attrs:{shape:m}});else if(p||g){L(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const M=iL(A,x,S),R=Ca({inputs:{x:s},backend:t,attrs:{begin:A,size:M}});E=ze({inputs:{x:R},backend:t,attrs:{shape:m}}),t.disposeData(R.dataId)}else if(t.shouldExecuteOnCPU([s])){const R=t.readSync(s.dataId),O=Bt(s.shape,s.dtype,R),C=PO(f,O,S,A);E=t.makeTensorInfo(m,s.dtype,C.values)}else{const R=new iV(f),O=[{type:"int32",data:A},{type:"int32",data:S}],C=t.runWebGPUProgram(R,[s],s.dtype,O);E=ze({inputs:{x:C},backend:t,attrs:{shape:m}}),t.disposeData(C.dataId)}return E}const oV={kernelName:yy,backendName:"webgpu",kernelFunc:aV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),f=t.readSync(h.dataId),[m,y]=DO(d,f,s,i,a,o,l,u);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",y)]}const uV={kernelName:vy,backendName:"webgpu",kernelFunc:lV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV=sn({opType:Ke.SUB,cpuKernelImpl:LO,supportsComplex:!0}),hV={kernelName:xy,backendName:"webgpu",kernelFunc:cV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV=vt({opType:we.TAN}),fV={kernelName:by,backendName:"webgpu",kernelFunc:dV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pV=vt({opType:we.TANH}),mV={kernelName:wy,backendName:"webgpu",kernelFunc:pV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jh(a,i,s.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(s.shape,i.dtype);const f=[],m=ze({inputs:{x:i},backend:t,attrs:{shape:[l,o]}});f.push(m);const y=ze({inputs:{x:a},backend:t,attrs:{shape:[l,u]}});f.push(y);const p=ze({inputs:{x:s},backend:t,attrs:{shape:d}});f.push(p);const g=hd({inputs:{x:p},backend:t,attrs:{reps:Array(d.length).fill(1)}}),A=new ao([l,u],o,m.shape.length,y.shape.length,c,d,s.dtype,!1),x=Te([l,u]),S=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[x]}],E=t.runWebGPUProgram(A,[y,m],p.dtype,S,g);f.push(E);const M=ze({inputs:{x:E},backend:t,attrs:{shape:s.shape}});return f.forEach(R=>t.disposeData(R.dataId)),M}const yV={kernelName:Z0,backendName:"webgpu",kernelFunc:gV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vV{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class xV{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xi(n,e){e!==null&&n.disposeData(e.dataId)}function Pp(n){let e=1;for(;e<n;)e*=2;return e}function bV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:a}=r,o=s.shape,l=o[o.length-1];if(t.shouldExecuteOnCPU([s])){const E=t.readSync(s.dataId),[M,R]=FO(E,o,s.dtype,i,a);return[t.makeTensorInfo(M.shape,M.dtype,M.values),t.makeTensorInfo(R.shape,R.dtype,R.values)]}if(i===0)return o[o.length-1]=0,[t.makeTensorInfo(o,s.dtype,[]),t.makeTensorInfo(o,"int32",[])];if(l===1)return[s,In({attrs:{shape:o,dtype:"int32",value:0},backend:t})];const c=Te(o)/l,h=ze({inputs:{x:s},attrs:{shape:[c,l]},backend:t}),d=Pp(i),f=Pp(l);let m=null;const y=()=>m===null?[h,h]:[h,m],p=(E,M,R)=>{const O=y(),C=new vV(R),$=[{type:"int32",data:[l]},{type:"int32",data:[m===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[E]},{type:"int32",data:[M]}],q=m;m=t.runWebGPUProgram(C,O,"int32",$),Xi(t,q)};for(let E=1;E<d;E*=2){const M=E*2;for(let R=E;R>=1;R/=2)p(M,R,[c,f])}for(let E=f;E>d;E/=2){const M=y(),R=new xV([c,E/2]),C=[{type:"int32",data:[l]},{type:"int32",data:[m===null?1:0]},{type:"int32",data:[d]}],N=m;m=t.runWebGPUProgram(R,M,"int32",C),Xi(t,N);const $=d/2,q=$*2;for(let z=$;z>=1;z/=2)p(q,z,m.shape)}let g=m;m=Ca({inputs:{x:m},backend:t,attrs:{begin:0,size:[c,i]}}),Xi(t,g);let A=Cv({inputs:{x:h,indices:m},backend:t,attrs:{axis:1,batchDims:1}});Xi(t,h);const x=o.slice(0,-1);x.push(i),g=m,m=ze({inputs:{x:m},attrs:{shape:x},backend:t}),Xi(t,g);const S=A;return A=ze({inputs:{x:A},attrs:{shape:x},backend:t}),Xi(t,S),[A,m]}const wV={kernelName:Ay,backendName:"webgpu",kernelFunc:bV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AV{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=Ce(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${_e("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,f]=s.shape,[m,y]=u??[h,d],p=[c,m,y,f],g=new AV(p),A=a==="nearest"?1:2;let x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}const S=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return t.runWebGPUProgram(g,[s,i],"float32",S)}const _V={kernelName:Sy,backendName:"webgpu",kernelFunc:SV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let y=0;y<o;y++)y!==i&&(u[c++]=a.shape[y]);const h=[],d=new Array(o).fill(0),f=a.shape.slice();f[i]=1;const m=new Array(l);for(let y=0;y<m.length;y++){d[i]=y;const p=Ca({inputs:{x:a},backend:t,attrs:{begin:d,size:f}}),g=ze({inputs:{x:p},backend:t,attrs:{shape:u}});m[y]=g,h.push(p)}return h.forEach(y=>t.disposeData(y.dataId)),m}const TV={kernelName:_y,backendName:"webgpu",kernelFunc:EV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CV{constructor(e,t,r){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=ke(e),this.dispatch=Ce(this.dispatchLayout,e,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${r} type.`);this.type=r,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Os("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=Fo([u],o);let h=s;c!=null&&(h=Br({inputs:{x:s},backend:t,attrs:{perm:c}}),l.push(h),u=Oo(1,o)[0]);const d=XL(h.shape,u,a),f=Te([h.shape[u]]),m=ze({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});l.push(m);const y=s.dtype,p=[m.shape[0],a],g=In({backend:t,attrs:{shape:p,value:0,dtype:y}}),A=new CV(m.shape,p,y),x=[{type:"int32",data:[a]},{type:"int32",data:[Te(m.shape)]}],S=t.runWebGPUProgram(A,[m,i],y,x,g),E=ze({inputs:{x:S},backend:t,attrs:{shape:d}});l.push(S);let M=E;if(c!=null){l.push(E);const R=m1(c);M=Br({inputs:{x:M},backend:t,attrs:{perm:R}})}return l.forEach(R=>t.disposeData(R.dataId)),M}const RV={kernelName:Ey,backendName:"webgpu",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV=[YF,BO,zO,GO,HO,jO,tU,rU,iU,oU,uU,hU,fU,mU,yU,AU,_U,MU,IU,PU,OU,zU,WU,jU,YU,eB,ZF,rB,oB,mB,wB,EB,MB,IB,PB,LB,FB,BB,zB,GB,HB,jB,t5,r5,QB,a5,u5,f5,m5,v5,A5,_5,T5,M5,I5,P5,D5,k5,O5,qF,B5,H5,z5,G5,j5,Y5,Z5,t$,s$,a$,l$,QF,c$,iB,d$,p$,g$,v$,b$,A$,E$,R$,C$,N$,D$,k$,B$,V$,xU,W$,X$,ez,j$,Z$,nz,bU,sz,az,lz,cz,mz,x5,yz,xz,wz,HU,_z,Tz,Mz,Nz,Dz,kz,Oz,Bz,XU,zz,Gz,Hz,qz,jF,Yz,Jz,n6,i6,l6,c6,d6,p6,g6,x6,A6,_6,T6,M6,I6,P6,kU,sV,oV,uV,fz,L6,O6,V6,W6,K6,Q6,J6,eV,nV,hV,b5,fV,mV,yV,q6,wV,_V,QO,TV,RV,Ez];for(const n of IV)dE(n);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV=qe();NV.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var tr;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(tr||(tr={}));var Dp;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Dp||(Dp={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV={};function Dv(n){return PV[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,r,s){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(i.type==="tensor")return on(e.inputNames[u],t,r,s);if(i.type==="tensors"){const d=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((m,y)=>{var p;return((p=d[y])===null||p===void 0?void 0:p.op)!=="NoOp"}).map(m=>on(m,t,r,s))}const c=on(e.inputNames[u],t,r,s),h=c.dataSync();return i.type==="number"?h[0]:Fc(c.shape,h)}const a=e.attrParams[n];return a&&a.value}function on(n,e,t,r){const[s,i]=Fn(n,t);if(r!=null){const o=r.getHashTableHandleByName(s);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[jl(s,o)]);return a!==void 0?e[jl(s,a)][i]:void 0}function Lp(n,e,t){return e[jl(n,t.currentContextId)]}function Kr(n,e){const[t,r,s]=Fn(n,e);return[jl(t,e&&e.currentContextId),r,s]}function jl(n,e){return e?`${n}-${e}`:n}function Fn(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const i=r[0],a=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);s=[i,o,a]}return t&&e.parseNodeNameCache.set(n,s),s}function Tl(n,e,t){let r=w("pad",n,e,t);if(r==="explicit"){r=w("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)s[i][0]=r[i*2],s[i][1]=r[i*2+1];return s}return r}function Yr(n){return n.kept?n:Ts(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LV=Object.freeze(Object.defineProperty({__proto__:null,json:DV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FV=Object.freeze(Object.defineProperty({__proto__:null,json:kV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],UV=Object.freeze(Object.defineProperty({__proto__:null,json:OV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],$V=Object.freeze(Object.defineProperty({__proto__:null,json:BV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],VV=Object.freeze(Object.defineProperty({__proto__:null,json:zV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WV=Object.freeze(Object.defineProperty({__proto__:null,json:GV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],XV=Object.freeze(Object.defineProperty({__proto__:null,json:HV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],jV=Object.freeze(Object.defineProperty({__proto__:null,json:qV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],YV=Object.freeze(Object.defineProperty({__proto__:null,json:KV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ZV=Object.freeze(Object.defineProperty({__proto__:null,json:QV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],e8=Object.freeze(Object.defineProperty({__proto__:null,json:JV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],n8=Object.freeze(Object.defineProperty({__proto__:null,json:t8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],s8=Object.freeze(Object.defineProperty({__proto__:null,json:r8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],a8=Object.freeze(Object.defineProperty({__proto__:null,json:i8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],l8=Object.freeze(Object.defineProperty({__proto__:null,json:o8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],c8=Object.freeze(Object.defineProperty({__proto__:null,json:u8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],d8=Object.freeze(Object.defineProperty({__proto__:null,json:h8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],p8=Object.freeze(Object.defineProperty({__proto__:null,json:f8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],g8=Object.freeze(Object.defineProperty({__proto__:null,json:m8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kp{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[LV,FV,UV,$V,VV,WV,XV,jV,YV,ZV,e8,n8,s8,a8,l8,c8,d8,p8,g8],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],i=[],a=[],o=r.reduce((y,p)=>(y[p.name]=this.mapNode(p),p.op.startsWith("Placeholder")?s.push(y[p.name]):p.op==="Const"?i.push(y[p.name]):(p.input==null||p.input.length===0)&&a.push(y[p.name]),y),{});let l=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(y=>{const p=o[y];p.inputNames.forEach((g,A)=>{const[x,,S]=Kr(g),E=o[x];if(E.outputs!=null){const M=E.outputs.indexOf(S);if(M!==-1){const R=`${x}:${M}`;p.inputNames[A]=R}}p.inputs.push(E),E.children.push(p)})}),Object.keys(h).length===0?d.forEach(y=>{const p=o[y];p.children.length===0&&u.push(p)}):Object.keys(h).forEach(y=>{const[p]=Kr(y),g=o[p];g!=null&&(g.signatureKey=h[y],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(y=>{const[p]=Kr(y),g=o[p];g&&(g.signatureKey=c[y],l.push(g))}):l=s;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((y,p)=>(y[p.signature.name]=this.mapFunction(p),y),{}));const m={nodes:o,inputs:l,outputs:u,weights:i,placeholders:s,signature:t,functions:f};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=Dv(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,i)=>(s[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,i)=>{const a=i.type;let o;switch(i.type){case"string":o=lh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=lh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=mh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=mh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=ch(e.attr,i.tfName,i.defaultValue||0),o===void 0&&i.tfDeprecatedName&&(o=ch(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=ph(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=ph(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=uh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=uh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=yh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=yh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=fh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=fh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=gh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=gh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=hh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=hh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=dh(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=dh(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=Fp(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Fp(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return s[i.name]={value:o,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let i={};t!=null&&(i=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&s.push(h[d.name]),h),{}));const a=[],o=[];e.signature.inputArg.forEach(h=>{const[d]=Kr(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dd(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,a.push(f),i[d]=f}),Object.keys(i).forEach(h=>{const d=i[h];d.inputNames.forEach((f,m)=>{const[y,,p]=Kr(f),g=i[y];if(g.outputs!=null){const A=g.outputs.indexOf(p);if(A!==-1){const x=`${y}:${A}`;d.inputNames[m]=x}}d.inputs.push(g),g.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=Kr(u[h.name]),m=i[d];m!=null&&(m.defaultOutput=f,o.push(m))});const c=this.mapArgsToSignature(e);return{nodes:i,inputs:a,outputs:o,weights:s,placeholders:r,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function y8(n){const e=qe().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Lv(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):y8(n);return e?t:t.toLowerCase()}function lh(n,e,t,r=!1){const s=n[e];return s!=null?Lv(s.s,r):t}function uh(n,e,t){const r=n[e];return r?r.b:t}function ch(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function dd(n){switch(typeof n=="string"&&(n=tr[n]),n){case tr.DT_FLOAT:case tr.DT_HALF:return"float32";case tr.DT_INT32:case tr.DT_INT64:case tr.DT_INT8:case tr.DT_UINT8:return"int32";case tr.DT_BOOL:return"bool";case tr.DT_DOUBLE:return"float32";case tr.DT_STRING:return"string";default:return null}}function Fp(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function hh(n,e,t){const r=n[e];return r&&r.type?dd(r.type):t}function dh(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>dd(s)):t}function kv(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function fh(n,e,t){const r=n[e];return r&&r.shape?kv(r.shape):t}function ph(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function mh(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(i=>Lv(i,r)):t}function gh(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>kv(s)):t}function yh(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v8{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,i)=>(s[i]=this.getAttr(i),s),{}))}getInput(e){return on(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return on(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return ch(this.node.rawAttrs,e,t);if(r.s!=null)return lh(this.node.rawAttrs,e,t);if(r.b!=null)return uh(this.node.rawAttrs,e,t);if(r.shape!=null)return fh(this.node.rawAttrs,e,t);if(r.type!=null)return hh(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return ph(this.node.rawAttrs,e,t);if(r.list.s!=null)return mh(this.node.rawAttrs,e,t);if(r.list.shape!=null)return gh(this.node.rawAttrs,e,t);if(r.list.b!=null)return yh(this.node.rawAttrs,e,t);if(r.list.type!=null)return dh(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const un=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:qy,abs:jn,acos:I3,acosh:P3,add:et,addN:L3,all:F3,any:U3,argMax:$3,argMin:V3,asin:W3,asinh:X3,atan:j3,atan2:Y3,atanh:Z3,avgPool:l1,avgPool3d:aT,basicLSTMCell:fT,batchNorm:cu,batchNorm2d:vT,batchNorm3d:bT,batchNorm4d:AT,batchToSpaceND:u1,bincount:c1,bitwiseAnd:ET,booleanMaskAsync:pN,broadcastArgs:CT,broadcastTo:ro,buffer:Bt,cast:qt,ceil:IT,clipByValue:PT,clone:Ts,complex:Ds,concat:Sn,concat1d:LT,concat2d:FT,concat3d:UT,concat4d:$T,conv1d:GT,conv2d:hu,conv2dTranspose:XT,conv3d:jT,conv3dTranspose:ZT,cos:eC,cosh:nC,cosineWindow:ed,cumprod:sC,cumsum:aC,denseBincount:lC,depthToSpace:cC,depthwiseConv2d:Uh,diag:fC,dilation2d:mC,div:Mt,divNoNan:wC,dot:SC,dropout:CN,einsum:Zi,elu:f1,enclosingPowerOfTwo:V1,ensureShape:CC,equal:d1,erf:RC,euclideanNorm:BC,exp:pi,expandDims:jr,expm1:GC,eye:y1,fft:Qh,fill:Lo,floor:v1,floorDiv:a1,fused:VN,gather:x1,gatherND:_N,greater:pu,greaterEqual:b1,ifft:Vl,imag:mu,image:q1,inTopKAsync:RN,irfft:F1,isFinite:ZC,isInf:eM,isNaN:nM,leakyRelu:w1,less:th,lessEqual:$h,linalg:AD,linspace:aM,localResponseNormalization:lM,log:go,log1p:A1,logSigmoid:mM,logSoftmax:vM,logSumExp:_1,logicalAnd:Bl,logicalNot:E1,logicalOr:T1,logicalXor:_M,losses:SD,lowerBound:TM,matMul:Tt,max:oi,maxPool:C1,maxPool3d:RM,maxPoolWithArgmax:NM,maximum:M1,mean:$l,meshgrid:LM,min:Ul,minimum:zl,mirrorPad:OM,mod:BM,moments:zM,movingAverage:yN,mul:Pe,multiRNNCell:GM,multinomial:HM,neg:Or,norm:fu,notEqual:R1,oneHot:jM,ones:ti,onesLike:YM,op:V,outerProduct:ZM,pad:Uo,pad1d:tR,pad2d:rR,pad3d:iR,pad4d:oR,pool:dR,pow:mo,prelu:N1,print:i1,prod:mR,raggedGather:yR,raggedRange:xR,raggedTensorToTensor:wR,rand:SR,randomGamma:GR,randomNormal:D1,randomStandardNormal:XR,randomUniform:Yh,randomUniformInt:KR,range:yo,real:vo,reciprocal:ZR,relu:Bo,relu6:L1,reshape:pe,reverse:gi,reverse1d:rI,reverse2d:iI,reverse3d:oI,reverse4d:uI,rfft:Zh,round:k1,rsqrt:dI,scalar:yt,scatterND:xN,searchSorted:zh,selu:pI,separableConv2d:gI,setdiff1dAsync:vI,sigmoid:ia,sign:bI,signal:wD,sin:AI,sinh:_I,slice:Pt,slice1d:TI,slice2d:MI,slice3d:II,slice4d:PI,softmax:LI,softplus:S1,spaceToBatchND:I1,sparse:_D,sparseToDense:AN,spectral:bD,split:xo,sqrt:ss,square:Sr,squaredDifference:O1,squeeze:gu,stack:as,step:U1,stridedSlice:HI,string:ED,sub:ot,sum:Ft,tan:qI,tanh:eh,tensor:Fr,tensor1d:or,tensor2d:io,tensor3d:B1,tensor4d:jI,tensor5d:KI,tensor6d:YI,tensorScatterUpdate:JI,tile:so,topk:tN,transpose:nh,truncatedNormal:rN,unique:iN,unsortedSegmentSum:oN,unstack:Ai,upperBound:uN,variable:cN,where:Cs,whereAsync:z1,zeros:mi,zerosLike:Kn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8=(n,e,t,r=un)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[r.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[r.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[r.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[r.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[r.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[r.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[r.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[r.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[r.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8=(n,e,t,r=un)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(w("x",n,e,t))];case"Acos":return[r.acos(w("x",n,e,t))];case"Acosh":return[r.acosh(w("x",n,e,t))];case"Asin":return[r.asin(w("x",n,e,t))];case"Asinh":return[r.asinh(w("x",n,e,t))];case"Atan":return[r.atan(w("x",n,e,t))];case"Atan2":return[r.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[r.atanh(w("x",n,e,t))];case"Ceil":return[r.ceil(w("x",n,e,t))];case"Complex":return[r.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[r.cos(w("x",n,e,t))];case"Cosh":return[r.cosh(w("x",n,e,t))];case"Elu":return[r.elu(w("x",n,e,t))];case"Erf":return[r.erf(w("x",n,e,t))];case"Exp":return[r.exp(w("x",n,e,t))];case"Expm1":return[r.expm1(w("x",n,e,t))];case"Floor":return[r.floor(w("x",n,e,t))];case"Log":return[r.log(w("x",n,e,t))];case"Log1p":return[r.log1p(w("x",n,e,t))];case"Imag":return[r.imag(w("x",n,e,t))];case"Neg":return[r.neg(w("x",n,e,t))];case"Reciprocal":return[r.reciprocal(w("x",n,e,t))];case"Real":return[r.real(w("x",n,e,t))];case"Relu":return[r.relu(w("x",n,e,t))];case"Round":return[r.round(w("x",n,e,t))];case"Selu":return[r.selu(w("x",n,e,t))];case"Sigmoid":return[r.sigmoid(w("x",n,e,t))];case"Sin":return[r.sin(w("x",n,e,t))];case"Sign":return[r.sign(w("x",n,e,t))];case"Sinh":return[r.sinh(w("x",n,e,t))];case"Softplus":return[r.softplus(w("x",n,e,t))];case"Sqrt":return[r.sqrt(w("x",n,e,t))];case"Square":return[r.square(w("x",n,e,t))];case"Tanh":return[r.tanh(w("x",n,e,t))];case"Tan":return[r.tan(w("x",n,e,t))];case"ClipByValue":return[r.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(w("x",n,e,t))];case"Rsqrt":return[r.rsqrt(on(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[r.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[r.isNaN(on(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(on(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(on(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){L(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],i=e[r];L(s<0||i<0||s===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function Op(n){return!(typeof n=="number"||n.some(e=>e<0))}function Xa(n,e,t){let r=vh(n,t);const s=!Op(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(i=>{r=vh(i.shape,r)}),!Op(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function vh(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w8{constructor(e,t,r,s,i,a,o){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=yt(0),Dr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),nr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,Dr(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Fr([],[0].concat(this.elementShape));const r=this.readMany(e);return nr(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),as(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fr([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return nr(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Sn(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Ai(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(l=>(r+=l,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=r===0?0:t.size/r,a=[];bt(()=>{t=pe(t,[1,r,i]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:s[l-1],0],h=[1,e[l],i];a[l]=pe(Pt(t,c,h),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vi{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e?.forEach(i=>{if(r!==i.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${i.dtype}`);nr(t,i.shape,"TensorList shape mismatch: "),Dr(i)}),this.idTensor=yt(0),this.maxNumElements=s,Dr(this.idTensor)}copy(){return new vi([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);nr(e,this.elementShape,"TensorList shape mismatch: ");const s=Xa(this.elementShape,this.tensors,e);return bt(()=>{const i=this.tensors.map(a=>pe(a,s));return as(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Xa(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,nr(s.shape,e,"TensorList shape mismatch: "),pe(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(nr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Dr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new vi([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);nr(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Xa(this.elementShape,this.tensors,t);return pe(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);nr(this.elementShape,t.shape,"TensorList shape mismatch: "),Dr(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);nr(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Xa(this.elementShape,this.tensors,r);return e.length===0?Fr([],[0].concat(s)):bt(()=>{const i=e.map(a=>pe(this.tensors[a],s));return as(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);nr(this.elementShape,t,"TensorList shape mismatch: ");const r=Xa(this.elementShape,this.tensors,t);return this.size()===0?Fr([],[0].concat(r)):bt(()=>{const s=this.tensors.map(i=>pe(i,r));return Sn(s,0)})}}function A8(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);nr(s,e,"TensorList shape mismatch: ");const i=Ai(n);return new vi(i,e,r)}function S8(n,e,t,r){return new vi([],n,e,r)}function _8(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new vi([],t,n.dtype,r),a=Ai(n,0);return e.forEach((o,l)=>{i.setItem(o,a[l])}),i}function E8(n,e,t){let r=0;const s=e.map(c=>(r+=c,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),a=vh(i,t),o=r===0?0:n.size/r,l=bt(()=>{const c=[];n=pe(n,[1,r,o]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:s[h-1],0],m=[1,e[h],o];c[h]=pe(Pt(n,f,m),a)}return n.dispose(),c}),u=new vi([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=w("thenBranch",n,e,t),s=w("elseBranch",n,e,t),i=w("cond",n,e,t),a=w("args",n,e,t);return(await i.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=w("body",n,e,t),s=w("cond",n,e,t),i=w("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),o=i.map(c=>c.id);let l=await a[0].data();a.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){const c=u;u=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(f=>f.id);c.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const r=w("pred",n,e,t);return[Yr(r)]}case"Switch":{const r=w("pred",n,e,t);let s=w("data",n,e,t);return s.kept||(s=Yr(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>on(s,e,t)!==void 0);if(r){const s=on(r,e,t);return[Yr(s)]}return}case"Enter":{const r=w("frameName",n,e,t),s=w("tensor",n,e,t);return t.enterFrame(r),[Yr(s)]}case"Exit":{const r=w("tensor",n,e,t);return t.exitFrame(),[Yr(r)]}case"NextIteration":{const r=w("tensor",n,e,t);return t.nextIteration(),[Yr(r)]}case"TensorArrayV3":{const r=w("size",n,e,t),s=w("dtype",n,e,t),i=w("elementShape",n,e,t),a=w("dynamicSize",n,e,t),o=w("clearAfterRead",n,e,t),l=w("identicalElementShapes",n,e,t),u=w("name",n,e,t),c=new w8(u,s,r,i,l,a,o);return t.addTensorArray(c),[c.idTensor,yt(1)]}case"TensorArrayWriteV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t),i=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),i=w("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),i=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),i=w("dtype",n,e,t);return[s.concat(i)]}case"TensorArraySplitV3":{const r=w("tensorArrayId",n,e,t),s=w("tensor",n,e,t),i=w("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[yt(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),i=w("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),i=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=w("indices",n,e,t),s=w("tensor",n,e,t),i=w("elementShape",n,e,t),a=w("numElements",n,e,t),o=_8(s,r,i,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=w("elementShape",n,e,t),s=w("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=w(i,n,e,t),o=n.op==="TensorListReserve"?-1:a,l=S8(r,s,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=w("tensorListId",n,e,t),s=w("indices",n,e,t),i=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t),a=w("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t),a=A8(r,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id),i=w("dtype",n,e,t),a=w("elementShape",n,e,t);return[s.concat(i,a)]}case"TensorListPushBack":{const r=w("tensorListId",n,e,t),s=w("tensor",n,e,t),i=t.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),i=w("lengths",n,e,t),a=E8(r,i,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id);return[yt(s.size(),"int32")]}case"TensorListResize":{const r=w("tensorListId",n,e,t),s=w("size",n,e,t),a=t.getTensorList(r.id).resize(s);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Up(n,e,t){const[r,s]=w("fusedOps",n,e,t),i=r==="biasadd",a=!i,o=s==="prelu",l=r==="fusedbatchnorm",u=w("numArgs",n,e,t);if(i){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=w("strides",n,e,t),h=Tl(n,e,t),d=w("dataFormat",n,e,t).toUpperCase(),f=w("dilations",n,e,t);let[m,y]=w("args",n,e,t);a&&(y=m,m=void 0);const p=w("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:f,biasArg:m,preluArg:y,activationFunc:s,leakyreluAlpha:p}}const C8=(n,e,t,r=un)=>{switch(n.op){case"Conv1D":{const s=w("stride",n,e,t),i=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),o=w("dilation",n,e,t);return[r.conv1d(w("x",n,e,t),w("filter",n,e,t),s,i,a,o)]}case"Conv2D":{const s=w("strides",n,e,t),i=Tl(n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),o=w("dilations",n,e,t);return[r.conv2d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Up(n,e,t);return[r.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Up(n,e,t);return[r.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=w("outputShape",n,e,t),i=w("strides",n,e,t),a=Tl(n,e,t);return[r.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),s,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=w("strides",n,e,t),i=Tl(n,e,t),a=w("dilations",n,e,t),o=w("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[s[1],s[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),o=w("dilations",n,e,t);return[r.conv3d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2],s[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("kernelSize",n,e,t),o=w("includeBatchInIndex",n,e,t),{result:l,indexes:u}=r.maxPoolWithArgmax(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i,o);return[l,u]}case"AvgPool3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),a=w("dilations",n,e,t),o=s[1],l=s[2],u=a[1],c=a[2];return[r.dilation2d(w("x",n,e,t),w("filter",n,e,t),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8=(n,e,t,r=un)=>{switch(n.op){case"Fill":{const s=w("shape",n,e,t),i=w("dtype",n,e,t),a=w("value",n,e,t);return[r.fill(s,a,i)]}case"LinSpace":{const s=w("start",n,e,t),i=w("stop",n,e,t),a=w("num",n,e,t);return[r.linspace(s,i,a)]}case"Multinomial":{const s=w("logits",n,e,t),i=w("numSamples",n,e,t),a=w("seed",n,e,t);return[r.multinomial(s,i,a)]}case"OneHot":{const s=w("indices",n,e,t),i=w("depth",n,e,t),a=w("onValue",n,e,t),o=w("offValue",n,e,t),l=w("dtype",n,e,t);return[r.oneHot(s,i,a,o,l)]}case"Ones":return[r.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[r.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("seed",n,e,t))];case"Range":{const s=w("start",n,e,t),i=w("stop",n,e,t),a=w("step",n,e,t);return[r.range(s,i,a,w("dtype",n,e,t))]}case"TruncatedNormal":{const s=w("shape",n,e,t),i=w("mean",n,e,t),a=w("stdDev",n,e,t),o=w("seed",n,e,t);return[r.truncatedNormal(s,i,a,w("dtype",n,e,t),o)]}case"Zeros":return[r.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pc(n,e,t){const r=w("boxes",n,e,t),s=w("scores",n,e,t),i=w("maxOutputSize",n,e,t),a=w("iouThreshold",n,e,t),o=w("scoreThreshold",n,e,t),l=w("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const R8=async(n,e,t,r,s=un)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=pc(n,e,t),h=await s.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=pc(n,e,t),c=w("padToMaxOutputSize",n,e,t),h=await s.image.nonMaxSuppressionPaddedAsync(i,a,o,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=pc(n,e,t);return[await s.image.nonMaxSuppressionAsync(i,a,o,l,u)]}case"Where":{const i=s.cast(w("condition",n,e,t),"bool"),a=[await s.whereAsync(i)];return i.dispose(),a}case"ListDiff":return s.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=(n,e,t,r=un)=>{switch(n.op){case"LowerBound":{const s=w("sortedSequence",n,e,t),i=w("values",n,e,t);return[r.lowerBound(s,i)]}case"TopKV2":{const s=w("x",n,e,t),i=w("k",n,e,t),a=w("sorted",n,e,t),o=r.topk(s,i,a);return[o.values,o.indices]}case"UpperBound":{const s=w("sortedSequence",n,e,t),i=w("values",n,e,t);return[r.upperBound(s,i)]}case"Unique":{const s=w("x",n,e,t),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=w("x",n,e,t),i=w("axis",n,e,t),a=r.unique(s,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=(n,e,t,r=un)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=w("default",n,e,t);return[on(n.name,e,t)||s];case"Placeholder":return[on(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=w("x",n,e,t);return[Yr(c)]}case"IdentityN":return w("x",n,e,t).map(c=>Yr(c));case"Snapshot":const i=w("x",n,e,t);return[Yr(i)];case"Shape":return[r.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(c=>r.tensor1d(c.shape));case"Size":return[r.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=w("x",n,e,t),o=w("data",n,e,t),l=w("message",n,e,t),u=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P8{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=yt(0),this.tensorMap=new Map,Dr(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return yt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),bt(()=>{const s=Ai(t),i=r.length,a=s.length;L(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=r[o],u=s[o];Dr(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return bt(()=>{const s=[];for(let i=0;i<r.length;i++){const a=r[i],o=this.findWithDefault(a,t);s.push(o)}return as(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const i=w("keyDType",n,e,t),a=w("valueDType",n,e,t),o=new P8(i,a);return r.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=w("tableHandle",n,e,t,r),i=w("keys",n,e,t),a=w("values",n,e,t);return[await r.getHashTableById(s.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=w("tableHandle",n,e,t,r),i=w("keys",n,e,t),a=w("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=w("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8=(n,e,t,r=un)=>{switch(n.op){case"ResizeBilinear":{const s=w("images",n,e,t),i=w("size",n,e,t),a=w("alignCorners",n,e,t),o=w("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const s=w("images",n,e,t),i=w("size",n,e,t),a=w("alignCorners",n,e,t),o=w("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],a,o)]}case"CropAndResize":{const s=w("image",n,e,t),i=w("boxes",n,e,t),a=w("boxInd",n,e,t),o=w("cropSize",n,e,t),l=w("method",n,e,t),u=w("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const s=w("images",n,e,t),i=w("transforms",n,e,t),a=w("outputShape",n,e,t),o=w("fillValue",n,e,t),l=w("interpolation",n,e,t),u=w("fillMode",n,e,t);return[r.image.transform(s,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=(n,e,t,r=un)=>{switch(n.op){case"Equal":return[r.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[r.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[r.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[r.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[r.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[r.logicalNot(w("a",n,e,t))];case"LogicalOr":return[r.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[r.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=(n,e,t,r=un)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[r.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[r.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[s,i]=w("fusedOps",n,e,t),a=s==="biasadd",o=i==="prelu",l=w("numArgs",n,e,t),u=w("leakyreluAlpha",n,e,t);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=w("args",n,e,t);return[r.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(w("a",n,e,t),w("numLower",n,e,t),w("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8=(n,e,t,r=un)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[r.softmax(w("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8=(n,e,t,r=un)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:i}=r.raggedGather(w("paramsNestedSplits",n,e,t),w("paramsDenseValues",n,e,t),w("indices",n,e,t),w("outputRaggedRank",n,e,t));return s.concat(i)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:i}=r.raggedRange(w("starts",n,e,t),w("limits",n,e,t),w("splits",n,e,t));return[s,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(w("shape",n,e,t),w("values",n,e,t),w("defaultValue",n,e,t),w("rowPartitionTensors",n,e,t),w("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8=(n,e,t,r=un)=>{switch(n.op){case"Max":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.max(w("x",n,e,t),o,l)]}case"Mean":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.mean(w("x",n,e,t),o,l)]}case"Min":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.min(w("x",n,e,t),o,l)]}case"Sum":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.sum(w("x",n,e,t),o,l)]}case"All":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.all(w("x",n,e,t),o,l)]}case"Any":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.any(w("x",n,e,t),o,l)]}case"ArgMax":{const o=w("axis",n,e,t);return[r.argMax(w("x",n,e,t),o)]}case"ArgMin":{const o=w("axis",n,e,t);return[r.argMin(w("x",n,e,t),o)]}case"Prod":{const o=w("axis",n,e,t),l=w("keepDims",n,e,t);return[r.prod(w("x",n,e,t),o,l)]}case"Cumprod":{const o=w("axis",n,e,t),l=w("exclusive",n,e,t),u=w("reverse",n,e,t);return[r.cumprod(w("x",n,e,t),o,l,u)]}case"Cumsum":{const o=w("axis",n,e,t),l=w("exclusive",n,e,t),u=w("reverse",n,e,t);return[r.cumsum(w("x",n,e,t),o,l,u)]}case"Bincount":const s=w("x",n,e,t),i=w("weights",n,e,t),a=w("size",n,e,t);return[r.bincount(s,i,a)];case"DenseBincount":{const o=w("x",n,e,t),l=w("weights",n,e,t),u=w("size",n,e,t),c=w("binaryOutput",n,e,t);return[r.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=(n,e,t,r=un)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=w("n",n,e,t),i=w("axis",n,e,t);let a=w("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,i)]}case"Gather":{const s=w("x",n,e,t),i=w("indices",n,e,t);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=w("axis",n,e,t),i=w("batchDims",n,e,t),a=w("x",n,e,t),o=w("indices",n,e,t);return[r.gather(a,r.cast(o,"int32"),s,i)]}case"Reverse":{const s=w("dims",n,e,t),i=[];for(let o=0;o<s.length;o++)s[o]&&i.push(o);const a=w("x",n,e,t);return[r.reverse(a,i)]}case"ReverseV2":{const s=w("axis",n,e,t),i=w("x",n,e,t);return[r.reverse(i,s)]}case"Slice":{const s=w("begin",n,e,t),i=w("size",n,e,t);return[r.slice(w("x",n,e,t),s,i)]}case"StridedSlice":{const s=w("begin",n,e,t),i=w("end",n,e,t),a=w("strides",n,e,t),o=w("beginMask",n,e,t),l=w("endMask",n,e,t),u=w("ellipsisMask",n,e,t),c=w("newAxisMask",n,e,t),h=w("shrinkAxisMask",n,e,t),d=w("x",n,e,t);return[r.stridedSlice(d,s,i,a,o,l,u,c,h)]}case"Pack":return bt(()=>{const s=w("axis",n,e,t),i=w("tensors",n,e,t),a=i[0].shape,o=r.squeeze(i[0]).shape,l=i.map(u=>{const c=Nn(u.shape,a);if(!c&&!Nn(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:r.reshape(u,a)});return[r.stack(l,s)]});case"Unpack":{const s=w("axis",n,e,t),i=w("tensor",n,e,t);return r.unstack(i,s)}case"Tile":{const s=w("reps",n,e,t);return[r.tile(w("x",n,e,t),s)]}case"Split":case"SplitV":{const s=w("axis",n,e,t),i=w("numOrSizeSplits",n,e,t),a=w("x",n,e,t);return r.split(a,i,s)}case"ScatterNd":{const s=w("indices",n,e,t),i=w("values",n,e,t),a=w("shape",n,e,t);return[r.scatterND(s,i,a)]}case"GatherNd":{const s=w("x",n,e,t),i=w("indices",n,e,t);return[r.gatherND(s,i)]}case"SparseToDense":{const s=w("sparseIndices",n,e,t),i=w("outputShape",n,e,t),a=w("sparseValues",n,e,t),o=w("defaultValue",n,e,t);return[r.sparseToDense(s,a,i,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}case"TensorScatterUpdate":{const s=w("indices",n,e,t),i=w("values",n,e,t),a=w("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8=(n,e,t,r=un)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[s,i,a,o]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8=(n,e,t,r=un)=>{switch(n.op){case"FFT":return[r.fft(w("x",n,e,t))];case"IFFT":return[r.ifft(w("x",n,e,t))];case"RFFT":return[r.rfft(w("x",n,e,t))];case"IRFFT":return[r.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=(n,e,t,r=un)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(w("input",n,e,t),w("pattern",n,e,t),w("rewrite",n,e,t),w("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:a}=r.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[s,i,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8=(n,e,t,r=un)=>{switch(n.op){case"Cast":return[r.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const s=w("axis",n,e,t);return[r.expandDims(w("x",n,e,t),s)]}case"Squeeze":{const s=w("axis",n,e,t);return[r.squeeze(w("x",n,e,t),s)]}case"Reshape":return[r.reshape(w("x",n,e,t),w("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const s=w("blockShape",n,e,t),i=w("paddings",n,e,t);return[r.spaceToBatchND(w("x",n,e,t),s,i)]}case"BatchToSpaceND":{const s=w("blockShape",n,e,t),i=w("crops",n,e,t);return[r.batchToSpaceND(w("x",n,e,t),s,i)]}case"DepthToSpace":{const s=w("blockSize",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(w("x",n,e,t),s,i)]}case"BroadcastTo":return[r.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(n,e,t,r,s=bt){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return s(()=>x8(a,o,l));case"basic_math":return s(()=>b8(a,o,l));case"control":return T8(a,o,l);case"convolution":return s(()=>C8(a,o,l));case"creation":return s(()=>M8(a,o,l));case"dynamic":return R8(a,o,l);case"evaluation":return s(()=>I8(a,o,l));case"image":return s(()=>L8(a,o,l));case"graph":return s(()=>N8(a,o,l));case"logical":return s(()=>k8(a,o,l));case"matrices":return s(()=>F8(a,o,l));case"normalization":return s(()=>O8(a,o,l));case"ragged":return s(()=>U8(a,o,l));case"reduction":return s(()=>B8(a,o,l));case"slice_join":return s(()=>$8(a,o,l));case"sparse":return s(()=>z8(a,o,l));case"spectral":return s(()=>V8(a,o,l));case"string":return s(()=>G8(a,o,l));case"transformation":return s(()=>W8(a,o,l));case"hash_table":return D8(a,o,l,r);case"custom":const u=Dv(a.op);if(u&&u.customExecutor)return u.customExecutor(new v8(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return ci(i)?i.then(a=>[].concat(a)):[].concat(i)}class $p{constructor(e={},t={},r={},s={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zp(n,e,t,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(n).map(d=>Fn(d)[0]));r=r||[];const c=new Set(r.map(d=>Fn(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((Zs(d)||Z8(d)||J8(d))&&a==null&&(a=d,o=a.children.map(f=>f.name).filter(f=>s.has(f))),s.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),h.push(f))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}function H8(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(p=>Fn(p)[0]).map(p=>n.nodes[p]),i=n.initNodes||[],a=p=>t.has(typeof p=="string"?p:p.name);function o(p){return[...new Map(p.map(g=>[g.name,g])).values()]}const l=o([...s,...n.weights,...i]).filter(a),u=o([...l,...Object.values(n.nodes)]).filter(a),c=new Map(u.map(p=>[p.name,p])),h={};for(const p of u){h[p.name]=h[p.name]||0;for(const g of p.children)a(g)||(h[g.name]=Number.POSITIVE_INFINITY),h[g.name]=(h[g.name]||0)+1}const d=Object.entries(h).filter(([,p])=>p===0).map(([p])=>p),f=[...d];for(;d.length>0;){const p=d.pop(),g=c.get(p);for(const A of g.children.filter(a))--h[A.name]===0&&(f.push(A.name),d.push(A.name))}const m=f.map(p=>c.get(p)),y=X8(m,l);return q8(y,l),y}function X8(n,e){const t=new Map(n.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),o=t.get(a);for(const l of o.children)!t.has(l.name)||s.has(l.name)||(s.add(l.name),r.push(l.name))}return n.filter(a=>s.has(a.name))}class gl extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function q8(n,e){const t=new Map(n.map((o,l)=>[o.name,l])),r=new Set(e.map(o=>o.name)),s=o=>r.has(typeof o=="string"?o:o.name),i=new Set(n.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(a)){if(!t.has(l.name))throw new gl(`Child ${l.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(l.name))throw new gl(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!s(o))for(const l of o.inputs){if(!t.has(l.name))throw new gl(`Input ${l.name} of node ${o.name} is unreachable.`);if(t.get(l.name)>t.get(o.name))throw new gl(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function j8(n){const e=new Map(n.map((o,l)=>[o.name,l])),t=Number.MAX_SAFE_INTEGER,r=n.map((o,l)=>Zs(o)?t:l),s=o=>{const l=r[e.get(o.name)];return l??-1},i=n.map((o,l)=>o.children.map(s).reduce((u,c)=>Math.max(u,c),r[l])),a=new Map;for(let o=0;o<n.length;++o){const l=i[o];if(l===t)continue;const u=n[o],c=n[l];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const K8=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Y8=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Q8=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Zs(n){return K8.has(n.op)}function Z8(n){return Y8.has(n.op)}function J8(n){return Q8.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kl{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Kl(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(i=>i.name).sort(),s=t.map(i=>i.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=zp(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:i,syncInputs:a}=r;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${s}]`)}const o=H8(this.graph,r),l=j8(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Dr(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(d=>this.graph.nodes[Fn(d)[0]]),i=t.map(d=>Fn(d)[0]),a=new Set(i);let o=i.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(s,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=qe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return bt(()=>{const d=new $p(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[A,x]=Fn(g,d),S=[];S[x]=e[g],f[A]=S,this.keepIntermediateTensors&&(this.clonedTensorsMap[A]=this.cloneTensorList(S))});const m=this.getFrozenTensorIds(f),{orderedNodes:y,nodeLiveUntilMap:p}=u;for(const g of y){if(f[g.name])continue;const A=Bp(g,f,d,this._resourceManager);if(ci(A))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);f[g.name]=A,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(A)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,f,d,m,a,p.get(g.name))}return this.parent==null&&d.dispose(m),t.map(g=>on(g,f,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,i,a,o){if(!(Zs(t)||a.has(e))){for(const l of r[e])l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length);for(const l of t.inputs){if(Zs(l))continue;const u=Lp(l.name,r,s);if(u!=null)for(const c of u){if(!c||c.kept||i.has(c.id))continue;const h=o[c.id];h===1?(c.dispose(),delete o[c.id]):h!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,i,a){function o(l){return Zs(l)||i.has(l.name)}if(!(Zs(e)||a==null))for(const l of a){if(o(l))continue;const u=Lp(l.name,t,r);for(const c of u)!c||c.kept||s.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},i={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=qe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new $p(this.weightMap,s,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,r),l=t.map(d=>on(d,o,a)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(e,t,r){const s=e.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const i=Object.keys(e),a=i.map(S=>this.graph.nodes[Fn(S)[0]]),o=r.map(S=>Fn(S)[0]),l=new Set(o);let u=o.map(S=>this.graph.nodes[S]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:f}=zp(e,u,this.weightMap,this._initNodes),m=[...a,...this.graph.weights,...this._initNodes||[]].map(S=>({node:S,contexts:t.currentContext})),y=Object.assign({},this.weightMap);Object.keys(e).forEach(S=>{const[E,M]=Fn(S),R=[];R[M]=e[S],y[E]=R});const p={},g=this.getFrozenTensorIds(y),A={};for(;m.length>0;){const S=this.processStack(a,m,t,y,A,g,l,p,c);await Promise.all(S)}d==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=u.filter(S=>!Zs(S)&&!on(S.name,y,t)).map(S=>S.name);if(x.length>0){let S="";throw d!=null&&(S=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${i}]. Consider providing the following inputs: [${h}]. ${S}`)}return y}processStack(e,t,r,s,i,a,o,l,u){const c=[];for(;t.length>0;){const h=t.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&w("isConstant",h.node,s,r)&&([d]=Kr(h.node.name,r)),s[h.node.name]==null){const f=Bp(h.node,s,r,this._resourceManager);d||([d]=Kr(h.node.name,r));const m=r.currentContext;ci(f)?c.push(f.then(y=>(s[d]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(y)),r.currentContext=m,this.checkTensorForDisposal(d,h.node,s,r,a,o,l),this.processChildNodes(h.node,t,r,s,i,u),y))):(s[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,s,r,a,o,l),this.processChildNodes(h.node,t,r,s,i,u))}else this.processChildNodes(h.node,t,r,s,i,u)}return c}processChildNodes(e,t,r,s,i,a){e.children.forEach(o=>{const[l]=Kr(o.name,r);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!on(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!on(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=Fn(t),i=this.graph.nodes[s];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===r.shape.length&&r.shape.every((l,u)=>a[u]===-1||a[u]===l);L(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&L(r.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const i in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[i];a!=null?s[a.name]=e[i]:s[i]=e[i]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=Fn(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const i=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=Fn(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class eG{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG="?tfjs-format=file",nG="model.json";class rG{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=ev){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new eG}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ci(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Kl(kp.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=kp.Instance.transformGraph(e.modelInitializer);this.initializer=new Kl(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof fn?[e]:e,r={};return t.forEach((s,i)=>r[this.structuredOutputKeys[i]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof fn)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((i,a)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return c!=null?i[a]=this.resourceIdToCapturedInput[c]:i[a]=e[s++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const i=r[s],a=t[i];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Rn(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function sG(n,e={},t=ev){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=iG(n));const r=new rG(n,e,t);return await r.load(),r}function iG(n){return n.endsWith("/")||(n=n+"/"),`${n}${nG}${tG}`}const qa=Symbol("@@webxr-polyfill/EventTarget");let fd=class{constructor(){this[qa]={listeners:new Map}}addEventListener(e,t){if(typeof e!="string")throw new Error("`type` must be a string");if(typeof t!="function")throw new Error("`listener` must be a function");const r=this[qa].listeners.get(e)||[];r.push(t),this[qa].listeners.set(e,r)}removeEventListener(e,t){if(typeof e!="string")throw new Error("`type` must be a string");if(typeof t!="function")throw new Error("`listener` must be a function");const r=this[qa].listeners.get(e)||[];for(let s=r.length;s>=0;s--)r[s]===t&&r.pop()}dispatchEvent(e,t){const r=this[qa].listeners.get(e)||[],s=[];for(let i=0;i<r.length;i++)s[i]=r[i];for(let i of s)i(t);typeof this[`on${e}`]=="function"&&this[`on${e}`](t)}};const aG=1e-6;let Gn=typeof Float32Array<"u"?Float32Array:Array;function xi(){let n=new Gn(16);return Gn!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0),n[0]=1,n[5]=1,n[10]=1,n[15]=1,n}function oG(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n}function aa(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function Yl(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],m=e[12],y=e[13],p=e[14],g=e[15],A=t*o-r*a,x=t*l-s*a,S=t*u-i*a,E=r*l-s*o,M=r*u-i*o,R=s*u-i*l,O=c*y-h*m,C=c*p-d*m,N=c*g-f*m,$=h*p-d*y,q=h*g-f*y,z=d*g-f*p,F=A*z-x*q+S*$+E*N-M*C+R*O;return F?(F=1/F,n[0]=(o*z-l*q+u*$)*F,n[1]=(s*q-r*z-i*$)*F,n[2]=(y*R-p*M+g*E)*F,n[3]=(d*M-h*R-f*E)*F,n[4]=(l*N-a*z-u*C)*F,n[5]=(t*z-s*N+i*C)*F,n[6]=(p*S-m*R-g*x)*F,n[7]=(c*R-d*S+f*x)*F,n[8]=(a*q-o*N+u*O)*F,n[9]=(r*N-t*q-i*O)*F,n[10]=(m*M-y*S+g*A)*F,n[11]=(h*S-c*M-f*A)*F,n[12]=(o*C-a*$-l*O)*F,n[13]=(t*$-r*C+s*O)*F,n[14]=(y*x-m*E-p*A)*F,n[15]=(c*E-h*x+d*A)*F,n):null}function oa(n,e,t){let r=e[0],s=e[1],i=e[2],a=e[3],o=e[4],l=e[5],u=e[6],c=e[7],h=e[8],d=e[9],f=e[10],m=e[11],y=e[12],p=e[13],g=e[14],A=e[15],x=t[0],S=t[1],E=t[2],M=t[3];return n[0]=x*r+S*o+E*h+M*y,n[1]=x*s+S*l+E*d+M*p,n[2]=x*i+S*u+E*f+M*g,n[3]=x*a+S*c+E*m+M*A,x=t[4],S=t[5],E=t[6],M=t[7],n[4]=x*r+S*o+E*h+M*y,n[5]=x*s+S*l+E*d+M*p,n[6]=x*i+S*u+E*f+M*g,n[7]=x*a+S*c+E*m+M*A,x=t[8],S=t[9],E=t[10],M=t[11],n[8]=x*r+S*o+E*h+M*y,n[9]=x*s+S*l+E*d+M*p,n[10]=x*i+S*u+E*f+M*g,n[11]=x*a+S*c+E*m+M*A,x=t[12],S=t[13],E=t[14],M=t[15],n[12]=x*r+S*o+E*h+M*y,n[13]=x*s+S*l+E*d+M*p,n[14]=x*i+S*u+E*f+M*g,n[15]=x*a+S*c+E*m+M*A,n}function So(n,e,t){let r=e[0],s=e[1],i=e[2],a=e[3],o=r+r,l=s+s,u=i+i,c=r*o,h=r*l,d=r*u,f=s*l,m=s*u,y=i*u,p=a*o,g=a*l,A=a*u;return n[0]=1-(f+y),n[1]=h+A,n[2]=d-g,n[3]=0,n[4]=h-A,n[5]=1-(c+y),n[6]=m+p,n[7]=0,n[8]=d+g,n[9]=m-p,n[10]=1-(c+f),n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n}function Fv(n,e){return n[0]=e[12],n[1]=e[13],n[2]=e[14],n}function Ov(n,e){let t=e[0]+e[5]+e[10],r=0;return t>0?(r=Math.sqrt(t+1)*2,n[3]=.25*r,n[0]=(e[6]-e[9])/r,n[1]=(e[8]-e[2])/r,n[2]=(e[1]-e[4])/r):e[0]>e[5]&&e[0]>e[10]?(r=Math.sqrt(1+e[0]-e[5]-e[10])*2,n[3]=(e[6]-e[9])/r,n[0]=.25*r,n[1]=(e[1]+e[4])/r,n[2]=(e[8]+e[2])/r):e[5]>e[10]?(r=Math.sqrt(1+e[5]-e[0]-e[10])*2,n[3]=(e[8]-e[2])/r,n[0]=(e[1]+e[4])/r,n[1]=.25*r,n[2]=(e[6]+e[9])/r):(r=Math.sqrt(1+e[10]-e[0]-e[5])*2,n[3]=(e[1]-e[4])/r,n[0]=(e[8]+e[2])/r,n[1]=(e[6]+e[9])/r,n[2]=.25*r),n}function Uv(n,e,t,r,s){let i=1/Math.tan(e/2),a;return n[0]=i/t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=i,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=-1,n[12]=0,n[13]=0,n[15]=0,s!=null&&s!==1/0?(a=1/(r-s),n[10]=(s+r)*a,n[14]=2*s*r*a):(n[10]=-1,n[14]=-2*r),n}function Zr(){let n=new Gn(3);return Gn!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0),n}function Vp(n){var e=new Gn(3);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e}function lG(n){let e=n[0],t=n[1],r=n[2];return Math.sqrt(e*e+t*t+r*r)}function _r(n,e,t){let r=new Gn(3);return r[0]=n,r[1]=e,r[2]=t,r}function Gp(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n}function ja(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n}function Wp(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n}function xh(n,e){let t=e[0],r=e[1],s=e[2],i=t*t+r*r+s*s;return i>0&&(i=1/Math.sqrt(i),n[0]=e[0]*i,n[1]=e[1]*i,n[2]=e[2]*i),n}function pd(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function mc(n,e,t){let r=e[0],s=e[1],i=e[2],a=t[0],o=t[1],l=t[2];return n[0]=s*l-i*o,n[1]=i*a-r*l,n[2]=r*o-s*a,n}function qi(n,e,t){let r=t[0],s=t[1],i=t[2],a=t[3],o=e[0],l=e[1],u=e[2],c=s*u-i*l,h=i*o-r*u,d=r*l-s*o,f=s*d-i*h,m=i*c-r*d,y=r*h-s*c,p=a*2;return c*=p,h*=p,d*=p,f*=2,m*=2,y*=2,n[0]=o+c+f,n[1]=l+h+m,n[2]=u+d+y,n}function uG(n,e){let t=_r(n[0],n[1],n[2]),r=_r(e[0],e[1],e[2]);xh(t,t),xh(r,r);let s=pd(t,r);return s>1?0:s<-1?Math.PI:Math.acos(s)}const cG=lG;(function(){let n=Zr();return function(e,t,r,s,i,a){let o,l;for(t||(t=3),r||(r=0),s?l=Math.min(s*t+r,e.length):l=e.length,o=r;o<l;o+=t)n[0]=e[o],n[1]=e[o+1],n[2]=e[o+2],i(n,n,a),e[o]=n[0],e[o+1]=n[1],e[o+2]=n[2];return e}})();function hG(){let n=new Gn(9);return Gn!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[5]=0,n[6]=0,n[7]=0),n[0]=1,n[4]=1,n[8]=1,n}function dG(){let n=new Gn(4);return Gn!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0,n[3]=0),n}function fG(n){let e=new Gn(4);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e}function pG(n,e,t,r){let s=new Gn(4);return s[0]=n,s[1]=e,s[2]=t,s[3]=r,s}function mG(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n}function gG(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],a=t*t+r*r+s*s+i*i;return a>0&&(a=1/Math.sqrt(a),n[0]=t*a,n[1]=r*a,n[2]=s*a,n[3]=i*a),n}(function(){let n=dG();return function(e,t,r,s,i,a){let o,l;for(t||(t=4),r||(r=0),s?l=Math.min(s*t+r,e.length):l=e.length,o=r;o<l;o+=t)n[0]=e[o],n[1]=e[o+1],n[2]=e[o+2],n[3]=e[o+3],i(n,n,a),e[o]=n[0],e[o+1]=n[1],e[o+2]=n[2],e[o+3]=n[3];return e}})();function yr(){let n=new Gn(4);return Gn!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0),n[3]=1,n}function yG(n,e,t){t=t*.5;let r=Math.sin(t);return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=Math.cos(t),n}function Hp(n,e,t){let r=e[0],s=e[1],i=e[2],a=e[3],o=t[0],l=t[1],u=t[2],c=t[3];return n[0]=r*c+a*o+s*u-i*l,n[1]=s*c+a*l+i*o-r*u,n[2]=i*c+a*u+r*l-s*o,n[3]=a*c-r*o-s*l-i*u,n}function oo(n,e,t,r){let s=e[0],i=e[1],a=e[2],o=e[3],l=t[0],u=t[1],c=t[2],h=t[3],d,f,m,y,p;return f=s*l+i*u+a*c+o*h,f<0&&(f=-f,l=-l,u=-u,c=-c,h=-h),1-f>aG?(d=Math.acos(f),m=Math.sin(d),y=Math.sin((1-r)*d)/m,p=Math.sin(r*d)/m):(y=1-r,p=r),n[0]=y*s+p*l,n[1]=y*i+p*u,n[2]=y*a+p*c,n[3]=y*o+p*h,n}function Xp(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],a=t*t+r*r+s*s+i*i,o=a?1/a:0;return n[0]=-t*o,n[1]=-r*o,n[2]=-s*o,n[3]=i*o,n}function vG(n,e){let t=e[0]+e[4]+e[8],r;if(t>0)r=Math.sqrt(t+1),n[3]=.5*r,r=.5/r,n[0]=(e[5]-e[7])*r,n[1]=(e[6]-e[2])*r,n[2]=(e[1]-e[3])*r;else{let s=0;e[4]>e[0]&&(s=1),e[8]>e[s*3+s]&&(s=2);let i=(s+1)%3,a=(s+2)%3;r=Math.sqrt(e[s*3+s]-e[i*3+i]-e[a*3+a]+1),n[s]=.5*r,r=.5/r,n[3]=(e[i*3+a]-e[a*3+i])*r,n[i]=(e[i*3+s]+e[s*3+i])*r,n[a]=(e[a*3+s]+e[s*3+a])*r}return n}function xG(n,e,t,r){let s=.5*Math.PI/180;e*=s,t*=s,r*=s;let i=Math.sin(e),a=Math.cos(e),o=Math.sin(t),l=Math.cos(t),u=Math.sin(r),c=Math.cos(r);return n[0]=i*l*c-a*o*u,n[1]=a*o*c+i*l*u,n[2]=a*l*u-i*o*c,n[3]=a*l*c+i*o*u,n}const qp=fG,bG=pG,gc=mG,Ql=gG;(function(){let n=Zr(),e=_r(1,0,0),t=_r(0,1,0);return function(r,s,i){let a=pd(s,i);return a<-.999999?(mc(n,e,s),cG(n)<1e-6&&mc(n,t,s),xh(n,n),yG(r,n,Math.PI),r):a>.999999?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(mc(n,s,i),r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=1+a,Ql(r,r))}})();(function(){let n=yr(),e=yr();return function(t,r,s,i,a,o){return oo(n,r,a,o),oo(e,s,i,o),oo(t,n,e,2*o*(1-o)),t}})();(function(){let n=hG();return function(e,t,r,s){return n[0]=r[0],n[3]=r[1],n[6]=r[2],n[1]=s[0],n[4]=s[1],n[7]=s[2],n[2]=-t[0],n[5]=-t[1],n[8]=-t[2],Ql(e,vG(e,n))}})();const _t=Symbol("@@webxr-polyfill/XRRigidTransform");let Bv=class $v{constructor(){if(this[_t]={matrix:null,position:null,orientation:null,inverse:null},arguments.length===0)this[_t].matrix=aa(new Float32Array(16));else if(arguments.length===1)arguments[0]instanceof Float32Array?this[_t].matrix=arguments[0]:(this[_t].position=this._getPoint(arguments[0]),this[_t].orientation=DOMPointReadOnly.fromPoint({x:0,y:0,z:0,w:1}));else if(arguments.length===2)this[_t].position=this._getPoint(arguments[0]),this[_t].orientation=this._getPoint(arguments[1]);else throw new Error("Too many arguments!");if(this[_t].matrix){let e=Zr();Fv(e,this[_t].matrix),this[_t].position=DOMPointReadOnly.fromPoint({x:e[0],y:e[1],z:e[2]});let t=yr();Ov(t,this[_t].matrix),this[_t].orientation=DOMPointReadOnly.fromPoint({x:t[0],y:t[1],z:t[2],w:t[3]})}else this[_t].matrix=aa(new Float32Array(16)),So(this[_t].matrix,bG(this[_t].orientation.x,this[_t].orientation.y,this[_t].orientation.z,this[_t].orientation.w),_r(this[_t].position.x,this[_t].position.y,this[_t].position.z))}_getPoint(e){return e instanceof DOMPointReadOnly?e:DOMPointReadOnly.fromPoint(e)}get matrix(){return this[_t].matrix}get position(){return this[_t].position}get orientation(){return this[_t].orientation}get inverse(){if(this[_t].inverse===null){let e=aa(new Float32Array(16));Yl(e,this[_t].matrix),this[_t].inverse=new $v(e),this[_t].inverse[_t].inverse=this}return this[_t].inverse}};const Ht=Symbol("@@webxr-polyfill/XRSpace");class va{constructor(e=null,t=null){this[Ht]={specialType:e,inputSource:t,baseMatrix:null,inverseBaseMatrix:null,lastFrameId:-1}}get _specialType(){return this[Ht].specialType}get _inputSource(){return this[Ht].inputSource}_ensurePoseUpdated(e,t){t!=this[Ht].lastFrameId&&(this[Ht].lastFrameId=t,this._onPoseUpdate(e))}_onPoseUpdate(e){this[Ht].specialType=="viewer"&&(this._baseMatrix=e.getBasePoseMatrix())}set _baseMatrix(e){this[Ht].baseMatrix=e,this[Ht].inverseBaseMatrix=null}get _baseMatrix(){return this[Ht].baseMatrix||this[Ht].inverseBaseMatrix&&(this[Ht].baseMatrix=new Float32Array(16),Yl(this[Ht].baseMatrix,this[Ht].inverseBaseMatrix)),this[Ht].baseMatrix}set _inverseBaseMatrix(e){this[Ht].inverseBaseMatrix=e,this[Ht].baseMatrix=null}get _inverseBaseMatrix(){return this[Ht].inverseBaseMatrix||this[Ht].baseMatrix&&(this[Ht].inverseBaseMatrix=new Float32Array(16),Yl(this[Ht].inverseBaseMatrix,this[Ht].baseMatrix)),this[Ht].inverseBaseMatrix}_getSpaceRelativeTransform(e){if(!this._inverseBaseMatrix||!e._baseMatrix)return null;let t=new Float32Array(16);return oa(t,this._inverseBaseMatrix,e._baseMatrix),new Bv(t)}}const wG=1.6,gs=Symbol("@@webxr-polyfill/XRReferenceSpace"),Zl=["viewer","local","local-floor","bounded-floor","unbounded"];function AG(n){return n==="bounded-floor"||n==="local-floor"}class _o extends va{constructor(e,t=null){if(!Zl.includes(e))throw new Error(`XRReferenceSpaceType must be one of ${Zl}`);if(super(e),e==="bounded-floor"&&!t)throw new Error("XRReferenceSpace cannot use 'bounded-floor' type if the platform does not provide the floor level");AG(e)&&!t&&(t=aa(new Float32Array(16)),t[13]=wG),this._inverseBaseMatrix=t||aa(new Float32Array(16)),this[gs]={type:e,transform:t,originOffset:aa(new Float32Array(16))}}_transformBasePoseMatrix(e,t){oa(e,this._inverseBaseMatrix,t)}_originOffsetMatrix(){return this[gs].originOffset}_adjustForOriginOffset(e){let t=new Float32Array(16);Yl(t,this[gs].originOffset),oa(e,t,e)}_getSpaceRelativeTransform(e){let t=super._getSpaceRelativeTransform(e);return this._adjustForOriginOffset(t.matrix),new XRRigidTransform(t.matrix)}getOffsetReferenceSpace(e){let t=new _o(this[gs].type,this[gs].transform,this[gs].bounds);return oa(t[gs].originOffset,this[gs].originOffset,e.matrix),t}}const En=Symbol("@@webxr-polyfill/XR"),SG=["inline","immersive-vr","immersive-ar"],_G={inline:{requiredFeatures:["viewer"],optionalFeatures:[]},"immersive-vr":{requiredFeatures:["viewer","local"],optionalFeatures:[]},"immersive-ar":{requiredFeatures:["viewer","local"],optionalFeatures:[]}},EG=`Polyfill Error: Must call navigator.xr.isSessionSupported() with any XRSessionMode
or navigator.xr.requestSession('inline') prior to requesting an immersive
session. This is a limitation specific to the WebXR Polyfill and does not apply
to native implementations of the API.`;class zv extends fd{constructor(e){super(),this[En]={device:null,devicePromise:e,immersiveSession:null,inlineSessions:new Set},e.then(t=>{this[En].device=t})}async isSessionSupported(e){return this[En].device||await this[En].devicePromise,e!="inline"?Promise.resolve(this[En].device.isSessionSupported(e)):Promise.resolve(!0)}async requestSession(e,t){if(!this[En].device){if(e!="inline")throw new Error(EG);await this[En].devicePromise}if(!SG.includes(e))throw new TypeError(`The provided value '${e}' is not a valid enum value of type XRSessionMode`);const r=_G[e],s=r.requiredFeatures.concat(t&&t.requiredFeatures?t.requiredFeatures:[]),i=r.optionalFeatures.concat(t&&t.optionalFeatures?t.optionalFeatures:[]),a=new Set;let o=!1;for(let h of s)this[En].device.isFeatureSupported(h)?a.add(h):(console.error(`The required feature '${h}' is not supported`),o=!0);if(o)throw new DOMException("Session does not support some required features","NotSupportedError");for(let h of i)this[En].device.isFeatureSupported(h)?a.add(h):console.log(`The optional feature '${h}' is not supported`);const l=await this[En].device.requestSession(e,a),u=new XRSession(this[En].device,e,l);e=="inline"?this[En].inlineSessions.add(u):this[En].immersiveSession=u;const c=()=>{e=="inline"?this[En].inlineSessions.delete(u):this[En].immersiveSession=null,u.removeEventListener("end",c)};return u.addEventListener("end",c),u}}const Vv=typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:{};let bh;if("performance"in Vv)bh=()=>performance.now();else{let n=Date.now();bh=()=>Date.now()-n}const Gv=bh,yc=Symbol("@@webxr-polyfill/XRPose");let Wv=class{constructor(e,t){this[yc]={transform:e,emulatedPosition:t}}get transform(){return this[yc].transform}get emulatedPosition(){return this[yc].emulatedPosition}};const jp=Symbol("@@webxr-polyfill/XRViewerPose");class Hv extends Wv{constructor(e,t,r=!1){super(e,r),this[jp]={views:t}}get views(){return this[jp].views}}const Ka=Symbol("@@webxr-polyfill/XRViewport");class Xv{constructor(e){this[Ka]={target:e}}get x(){return this[Ka].target.x}get y(){return this[Ka].target.y}get width(){return this[Ka].target.width}get height(){return this[Ka].target.height}}const Kp=["left","right","none"],Mr=Symbol("@@webxr-polyfill/XRView");class qv{constructor(e,t,r,s,i){if(!Kp.includes(r))throw new Error(`XREye must be one of: ${Kp}`);const a=Object.create(null),o=new Xv(a);this[Mr]={device:e,eye:r,viewport:o,temp:a,sessionId:s,transform:t,viewIndex:i}}get eye(){return this[Mr].eye}get projectionMatrix(){return this[Mr].device.getProjectionMatrix(this.eye,this[Mr].viewIndex)}get transform(){return this[Mr].transform}_getViewport(e){if(this[Mr].device.getViewport(this[Mr].sessionId,this.eye,e,this[Mr].temp,this[Mr].viewIndex))return this[Mr].viewport}}const Jt=Symbol("@@webxr-polyfill/XRFrame"),Yp="XRFrame access outside the callback that produced it is invalid.",TG="getViewerPose can only be called on XRFrame objects passed to XRSession.requestAnimationFrame callbacks.";let CG=0;class wh{constructor(e,t,r){this[Jt]={id:++CG,active:!1,animationFrame:!1,device:e,session:t,sessionId:r}}get session(){return this[Jt].session}getViewerPose(e){if(!this[Jt].animationFrame)throw new DOMException(TG,"InvalidStateError");if(!this[Jt].active)throw new DOMException(Yp,"InvalidStateError");const t=this[Jt].device,r=this[Jt].session;r[me].viewerSpace._ensurePoseUpdated(t,this[Jt].id),e._ensurePoseUpdated(t,this[Jt].id);let s=e._getSpaceRelativeTransform(r[me].viewerSpace);const i=[];for(const o of r[me].viewSpaces){o._ensurePoseUpdated(t,this[Jt].id);let l=e._getSpaceRelativeTransform(o),u=new qv(t,l,o.eye,this[Jt].sessionId,o.viewIndex);i.push(u)}return new Hv(s,i,!1)}getPose(e,t){if(!this[Jt].active)throw new DOMException(Yp,"InvalidStateError");const r=this[Jt].device;if(e._specialType==="target-ray"||e._specialType==="grip")return r.getInputPose(e._inputSource,t,e._specialType);{e._ensurePoseUpdated(r,this[Jt].id),t._ensurePoseUpdated(r,this[Jt].id);let s=t._getSpaceRelativeTransform(e);return s?new XRPose(s,!1):null}}}const Ya=Symbol("@@webxr-polyfill/XRRenderState"),MG=Object.freeze({depthNear:.1,depthFar:1e3,inlineVerticalFieldOfView:null,baseLayer:null});class Ah{constructor(e={}){const t=Object.assign({},MG,e);this[Ya]={config:t}}get depthNear(){return this[Ya].config.depthNear}get depthFar(){return this[Ya].config.depthFar}get inlineVerticalFieldOfView(){return this[Ya].config.inlineVerticalFieldOfView}get baseLayer(){return this[Ya].config.baseLayer}}const vc=Symbol("@@webxr-polyfill/XRInputSourceEvent");class Au extends Event{constructor(e,t){super(e,t),this[vc]={frame:t.frame,inputSource:t.inputSource},Object.setPrototypeOf(this,Au.prototype)}get frame(){return this[vc].frame}get inputSource(){return this[vc].inputSource}}const Qp=Symbol("@@webxr-polyfill/XRSessionEvent");class Eo extends Event{constructor(e,t){super(e,t),this[Qp]={session:t.session},Object.setPrototypeOf(this,Eo.prototype)}get session(){return this[Qp].session}}const yl=Symbol("@@webxr-polyfill/XRInputSourcesChangeEvent");class Su extends Event{constructor(e,t){super(e,t),this[yl]={session:t.session,added:t.added,removed:t.removed},Object.setPrototypeOf(this,Su.prototype)}get session(){return this[yl].session}get added(){return this[yl].added}get removed(){return this[yl].removed}}const me=Symbol("@@webxr-polyfill/XRSession");class xc extends va{constructor(e){super(e)}get eye(){return this._specialType}_onPoseUpdate(e){this._inverseBaseMatrix=e.getBaseViewMatrix(this._specialType)}}let jv=class extends fd{constructor(e,t,r){super();let s=t!="inline",i=new Ah({inlineVerticalFieldOfView:s?null:Math.PI*.5});const a=s?[new xc("left"),new xc("right")]:[new xc("none")];Object.freeze(a),this[me]={device:e,mode:t,immersive:s,ended:!1,suspended:!1,frameCallbacks:[],currentFrameCallbacks:null,frameHandle:0,deviceFrameHandle:null,id:r,activeRenderState:i,pendingRenderState:null,viewerSpace:new _o("viewer"),get viewSpaces(){return e.getViewSpaces(t)||a},currentInputSources:[]},this[me].onDeviceFrame=()=>{if(this[me].ended||this[me].suspended||(this[me].deviceFrameHandle=null,this[me].startDeviceFrameLoop(),this[me].pendingRenderState!==null&&(this[me].activeRenderState=new Ah(this[me].pendingRenderState),this[me].pendingRenderState=null,this[me].activeRenderState.baseLayer&&this[me].device.onBaseLayerSet(this[me].id,this[me].activeRenderState.baseLayer)),this[me].activeRenderState.baseLayer===null))return;const o=new wh(e,this,this[me].id),l=this[me].currentFrameCallbacks=this[me].frameCallbacks;this[me].frameCallbacks=[],o[Jt].active=!0,o[Jt].animationFrame=!0,this[me].device.onFrameStart(this[me].id,this[me].activeRenderState),this._checkInputSourcesChange();const u=Gv();for(let c=0;c<l.length;c++)try{!l[c].cancelled&&typeof l[c].callback=="function"&&l[c].callback(u,o)}catch(h){console.error(h)}this[me].currentFrameCallbacks=null,o[Jt].active=!1,this[me].device.onFrameEnd(this[me].id)},this[me].startDeviceFrameLoop=()=>{this[me].deviceFrameHandle===null&&(this[me].deviceFrameHandle=this[me].device.requestAnimationFrame(this[me].onDeviceFrame))},this[me].stopDeviceFrameLoop=()=>{const o=this[me].deviceFrameHandle;o!==null&&(this[me].device.cancelAnimationFrame(o),this[me].deviceFrameHandle=null)},this[me].onPresentationEnd=o=>{if(o!==this[me].id){this[me].suspended=!1,this[me].startDeviceFrameLoop(),this.dispatchEvent("focus",{session:this});return}this[me].ended=!0,this[me].stopDeviceFrameLoop(),e.removeEventListener("@@webxr-polyfill/vr-present-end",this[me].onPresentationEnd),e.removeEventListener("@@webxr-polyfill/vr-present-start",this[me].onPresentationStart),e.removeEventListener("@@webxr-polyfill/input-select-start",this[me].onSelectStart),e.removeEventListener("@@webxr-polyfill/input-select-end",this[me].onSelectEnd),this.dispatchEvent("end",new Eo("end",{session:this}))},e.addEventListener("@@webxr-polyfill/vr-present-end",this[me].onPresentationEnd),this[me].onPresentationStart=o=>{o!==this[me].id&&(this[me].suspended=!0,this[me].stopDeviceFrameLoop(),this.dispatchEvent("blur",{session:this}))},e.addEventListener("@@webxr-polyfill/vr-present-start",this[me].onPresentationStart),this[me].onSelectStart=o=>{o.sessionId===this[me].id&&this[me].dispatchInputSourceEvent("selectstart",o.inputSource)},e.addEventListener("@@webxr-polyfill/input-select-start",this[me].onSelectStart),this[me].onSelectEnd=o=>{o.sessionId===this[me].id&&(this[me].dispatchInputSourceEvent("selectend",o.inputSource),this[me].dispatchInputSourceEvent("select",o.inputSource))},e.addEventListener("@@webxr-polyfill/input-select-end",this[me].onSelectEnd),this[me].onSqueezeStart=o=>{o.sessionId===this[me].id&&this[me].dispatchInputSourceEvent("squeezestart",o.inputSource)},e.addEventListener("@@webxr-polyfill/input-squeeze-start",this[me].onSqueezeStart),this[me].onSqueezeEnd=o=>{o.sessionId===this[me].id&&(this[me].dispatchInputSourceEvent("squeezeend",o.inputSource),this[me].dispatchInputSourceEvent("squeeze",o.inputSource))},e.addEventListener("@@webxr-polyfill/input-squeeze-end",this[me].onSqueezeEnd),this[me].dispatchInputSourceEvent=(o,l)=>{const u=new wh(e,this,this[me].id),c=new Au(o,{frame:u,inputSource:l});u[Jt].active=!0,this.dispatchEvent(o,c),u[Jt].active=!1},this[me].startDeviceFrameLoop(),this.onblur=void 0,this.onfocus=void 0,this.onresetpose=void 0,this.onend=void 0,this.onselect=void 0,this.onselectstart=void 0,this.onselectend=void 0}get renderState(){return this[me].activeRenderState}get environmentBlendMode(){return this[me].device.environmentBlendMode||"opaque"}async requestReferenceSpace(e){if(this[me].ended)return;if(!Zl.includes(e))throw new TypeError(`XRReferenceSpaceType must be one of ${Zl}`);if(!this[me].device.doesSessionSupportReferenceSpace(this[me].id,e))throw new DOMException(`The ${e} reference space is not supported by this session.`,"NotSupportedError");if(e==="viewer")return this[me].viewerSpace;let t=await this[me].device.requestFrameOfReferenceTransform(e);if(e==="bounded-floor")throw t?this[me].device.requestStageBounds()?new DOMException(`The WebXR polyfill does not support the ${e} reference space yet.`,"NotSupportedError"):new DOMException(`${e} XRReferenceSpace not supported by this device.`,"NotSupportedError"):new DOMException(`${e} XRReferenceSpace not supported by this device.`,"NotSupportedError");return new _o(e,t)}requestAnimationFrame(e){if(this[me].ended)return;const t=++this[me].frameHandle;return this[me].frameCallbacks.push({handle:t,callback:e,cancelled:!1}),t}cancelAnimationFrame(e){let t=this[me].frameCallbacks,r=t.findIndex(s=>s&&s.handle===e);r>-1&&(t[r].cancelled=!0,t.splice(r,1)),t=this[me].currentFrameCallbacks,t&&(r=t.findIndex(s=>s&&s.handle===e),r>-1&&(t[r].cancelled=!0))}get inputSources(){return this[me].device.getInputSources()}async end(){if(!this[me].ended)return this[me].immersive&&(this[me].ended=!0,this[me].device.removeEventListener("@@webxr-polyfill/vr-present-start",this[me].onPresentationStart),this[me].device.removeEventListener("@@webxr-polyfill/vr-present-end",this[me].onPresentationEnd),this[me].device.removeEventListener("@@webxr-polyfill/input-select-start",this[me].onSelectStart),this[me].device.removeEventListener("@@webxr-polyfill/input-select-end",this[me].onSelectEnd),this.dispatchEvent("end",new Eo("end",{session:this}))),this[me].stopDeviceFrameLoop(),this[me].device.endSession(this[me].id)}updateRenderState(e){if(this[me].ended){const r="Can't call updateRenderState on an XRSession that has already ended.";throw new Error(r)}if(e.baseLayer&&e.baseLayer._session!==this){const r="Called updateRenderState with a base layer that was created by a different session.";throw new Error(r)}if(e.inlineVerticalFieldOfView!==null&&e.inlineVerticalFieldOfView!==void 0)if(this[me].immersive){const r="inlineVerticalFieldOfView must not be set for an XRRenderState passed to updateRenderState for an immersive session.";throw new Error(r)}else e.inlineVerticalFieldOfView=Math.min(3.13,Math.max(.01,e.inlineVerticalFieldOfView));if(this[me].pendingRenderState===null){const r=this[me].activeRenderState;this[me].pendingRenderState={depthNear:r.depthNear,depthFar:r.depthFar,inlineVerticalFieldOfView:r.inlineVerticalFieldOfView,baseLayer:r.baseLayer}}Object.assign(this[me].pendingRenderState,e)}_checkInputSourcesChange(){const e=[],t=[],r=this.inputSources,s=this[me].currentInputSources;for(const i of r)s.includes(i)||e.push(i);for(const i of s)r.includes(i)||t.push(i);(e.length>0||t.length>0)&&this.dispatchEvent("inputsourceschange",new Su("inputsourceschange",{session:this,added:e,removed:t})),this[me].currentInputSources.length=0;for(const i of r)this[me].currentInputSources.push(i)}};const ys=Symbol("@@webxr-polyfill/XRInputSource");class Kv{constructor(e){this[ys]={impl:e,gripSpace:new va("grip",this),targetRaySpace:new va("target-ray",this)}}get handedness(){return this[ys].impl.handedness}get targetRayMode(){return this[ys].impl.targetRayMode}get gripSpace(){let e=this[ys].impl.targetRayMode;return e==="gaze"||e==="screen"?null:this[ys].gripSpace}get targetRaySpace(){return this[ys].targetRaySpace}get profiles(){return this[ys].impl.profiles}get gamepad(){return this[ys].impl.gamepad}}const Yv=Symbol("@@webxr-polyfill/polyfilled-xr-compatible"),md=Symbol("@@webxr-polyfill/xr-compatible"),qs=Symbol("@@webxr-polyfill/XRWebGLLayer"),RG=Object.freeze({antialias:!0,depth:!0,stencil:!1,alpha:!0,multiview:!1,ignoreDepthValues:!1,framebufferScaleFactor:1});let Qv=class{constructor(e,t,r={}){const s=Object.assign({},RG,r);if(!(e instanceof jv))throw new Error("session must be a XRSession");if(e.ended)throw new Error("InvalidStateError");if(t[Yv]&&t[md]!==!0)throw new Error("InvalidStateError");this[qs]={context:t,config:s,session:e}}get context(){return this[qs].context}get antialias(){return this[qs].config.antialias}get ignoreDepthValues(){return!0}get framebuffer(){return null}get framebufferWidth(){return this[qs].context.drawingBufferWidth}get framebufferHeight(){return this[qs].context.drawingBufferHeight}get _session(){return this[qs].session}getViewport(e){return e._getViewport(this)}static getNativeFramebufferScaleFactor(e){if(!e)throw new TypeError("getNativeFramebufferScaleFactor must be passed a session.");return e[me].ended?0:1}};const bc=Symbol("@@webxr-polyfill/XRReferenceSpaceEvent");class gd extends Event{constructor(e,t){super(e,t),this[bc]={referenceSpace:t.referenceSpace,transform:t.transform||null},Object.setPrototypeOf(this,gd.prototype)}get referenceSpace(){return this[bc].referenceSpace}get transform(){return this[bc].transform}}const lo={XRSystem:zv,XRSession:jv,XRSessionEvent:Eo,XRFrame:wh,XRView:qv,XRViewport:Xv,XRViewerPose:Hv,XRWebGLLayer:Qv,XRSpace:va,XRReferenceSpace:_o,XRReferenceSpaceEvent:gd,XRInputSource:Kv,XRInputSourceEvent:Au,XRInputSourcesChangeEvent:Su,XRRenderState:Ah,XRRigidTransform:Bv,XRPose:Wv},Zp=n=>(n.prototype.makeXRCompatible,n.prototype.makeXRCompatible=function(){return this[md]=!0,Promise.resolve()},!0),Jp=n=>{const e=n.prototype.getContext;n.prototype.getContext=function(t,r){const s=e.call(this,t,r);return s&&(s[Yv]=!0,r&&"xrCompatible"in r&&(s[md]=r.xrCompatible)),s}},IG=n=>!!(n.ImageBitmapRenderingContext&&n.createImageBitmap),NG=n=>{var e=!1;return function(t){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0)}(n.navigator.userAgent||n.navigator.vendor||n.opera),e},PG=n=>{n.style.display="block",n.style.position="absolute",n.style.width=n.style.height="1px",n.style.top=n.style.left="0px"};var Zv={exports:{}};/**
 * @license
 * cardboard-vr-display
 * Copyright (c) 2015-2017 Google
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(function(n,e){/**
 * @license
 * gl-preserve-state
 * Copyright (c) 2016, Brandon Jones.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *//**
 * @license
 * webvr-polyfill-dpdb
 * Copyright (c) 2015-2017 Google
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * nosleep.js
 * Copyright (c) 2017, Rich Tibbett
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */(function(t,r){n.exports=r()})(kr,function(){var t=function(v,b){if(!(v instanceof b))throw new TypeError("Cannot call a class as a function")},r=function(){function v(b,_){for(var T=0;T<_.length;T++){var P=_[T];P.enumerable=P.enumerable||!1,P.configurable=!0,"value"in P&&(P.writable=!0),Object.defineProperty(b,P.key,P)}}return function(b,_,T){return _&&v(b.prototype,_),T&&v(b,T),b}}(),s=function(){function v(b,_){var T=[],P=!0,U=!1,G=void 0;try{for(var he=b[Symbol.iterator](),ue;!(P=(ue=he.next()).done)&&(T.push(ue.value),!(_&&T.length===_));P=!0);}catch(Y){U=!0,G=Y}finally{try{!P&&he.return&&he.return()}finally{if(U)throw G}}return T}return function(b,_){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return v(b,_);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=.001,a=1,o=function(b,_){return"data:"+b+","+encodeURIComponent(_)},l=function(b,_,T){return b+(_-b)*T},u=function(){var v=/iPad|iPhone|iPod/.test(navigator.platform);return function(){return v}}(),c=function(){var v=navigator.userAgent.indexOf("Version")!==-1&&navigator.userAgent.indexOf("Android")!==-1&&navigator.userAgent.indexOf("Chrome")!==-1;return function(){return v}}(),h=function(){var v=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);return function(){return v}}(),d=function(){var v=navigator.userAgent.indexOf("Firefox")!==-1&&navigator.userAgent.indexOf("Android")!==-1;return function(){return v}}(),f=function(){var v=navigator.userAgent.match(/.*Chrome\/([0-9]+)/),b=v?parseInt(v[1],10):null;return function(){return b}}(),m=function(){var v=!1;return v=u()&&h()&&navigator.userAgent.indexOf("13_4")!==-1,function(){return v}}(),y=function(){var v=!1;if(f()===65){var b=navigator.userAgent.match(/.*Chrome\/([0-9\.]*)/);if(b){var _=b[1].split("."),T=s(_,4);T[0],T[1];var P=T[2],U=T[3];v=parseInt(P,10)===3325&&parseInt(U,10)<148}}return function(){return v}}(),p=function(){var v=navigator.userAgent.indexOf("R7 Build")!==-1;return function(){return v}}(),g=function(){var b=window.orientation==90||window.orientation==-90;return p()?!b:b},A=function(b){return!(isNaN(b)||b<=i||b>a)},x=function(){return Math.max(window.screen.width,window.screen.height)*window.devicePixelRatio},S=function(){return Math.min(window.screen.width,window.screen.height)*window.devicePixelRatio},E=function(b){if(c())return!1;if(b.requestFullscreen)b.requestFullscreen();else if(b.webkitRequestFullscreen)b.webkitRequestFullscreen();else if(b.mozRequestFullScreen)b.mozRequestFullScreen();else if(b.msRequestFullscreen)b.msRequestFullscreen();else return!1;return!0},M=function(){if(document.exitFullscreen)document.exitFullscreen();else if(document.webkitExitFullscreen)document.webkitExitFullscreen();else if(document.mozCancelFullScreen)document.mozCancelFullScreen();else if(document.msExitFullscreen)document.msExitFullscreen();else return!1;return!0},R=function(){return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement},O=function(b,_,T,P){var U=b.createShader(b.VERTEX_SHADER);b.shaderSource(U,_),b.compileShader(U);var G=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(G,T),b.compileShader(G);var he=b.createProgram();b.attachShader(he,U),b.attachShader(he,G);for(var ue in P)b.bindAttribLocation(he,P[ue],ue);return b.linkProgram(he),b.deleteShader(U),b.deleteShader(G),he},C=function(b,_){for(var T={},P=b.getProgramParameter(_,b.ACTIVE_UNIFORMS),U="",G=0;G<P;G++){var he=b.getActiveUniform(_,G);U=he.name.replace("[0]",""),T[U]=b.getUniformLocation(_,U)}return T},N=function(b,_,T,P,U,G,he){var ue=1/(_-T),Y=1/(P-U),ae=1/(G-he);return b[0]=-2*ue,b[1]=0,b[2]=0,b[3]=0,b[4]=0,b[5]=-2*Y,b[6]=0,b[7]=0,b[8]=0,b[9]=0,b[10]=2*ae,b[11]=0,b[12]=(_+T)*ue,b[13]=(U+P)*Y,b[14]=(he+G)*ae,b[15]=1,b},$=function(){var b=!1;return function(_){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(_)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(_.substr(0,4)))&&(b=!0)}(navigator.userAgent||navigator.vendor||window.opera),b},q=function(b,_){for(var T in _)_.hasOwnProperty(T)&&(b[T]=_[T]);return b},z=function(b){if(u()){var _=b.style.width,T=b.style.height;b.style.width=parseInt(_)+1+"px",b.style.height=parseInt(T)+"px",setTimeout(function(){b.style.width=_,b.style.height=T},100)}window.canvas=b},F=function(){var v=Math.PI/180,b=Math.PI*.25;function _(Y,ae,ye,be){var He=Math.tan(ae?ae.upDegrees*v:b),Ue=Math.tan(ae?ae.downDegrees*v:b),st=Math.tan(ae?ae.leftDegrees*v:b),rt=Math.tan(ae?ae.rightDegrees*v:b),Je=2/(st+rt),Et=2/(He+Ue);return Y[0]=Je,Y[1]=0,Y[2]=0,Y[3]=0,Y[4]=0,Y[5]=Et,Y[6]=0,Y[7]=0,Y[8]=-((st-rt)*Je*.5),Y[9]=(He-Ue)*Et*.5,Y[10]=be/(ye-be),Y[11]=-1,Y[12]=0,Y[13]=0,Y[14]=be*ye/(ye-be),Y[15]=0,Y}function T(Y,ae,ye){var be=ae[0],He=ae[1],Ue=ae[2],st=ae[3],rt=be+be,Je=He+He,Et=Ue+Ue,gt=be*rt,Lt=be*Je,kt=be*Et,St=He*Je,hn=He*Et,_n=Ue*Et,yn=st*rt,Hn=st*Je,hs=st*Et;return Y[0]=1-(St+_n),Y[1]=Lt+hs,Y[2]=kt-Hn,Y[3]=0,Y[4]=Lt-hs,Y[5]=1-(gt+_n),Y[6]=hn+yn,Y[7]=0,Y[8]=kt+Hn,Y[9]=hn-yn,Y[10]=1-(gt+St),Y[11]=0,Y[12]=ye[0],Y[13]=ye[1],Y[14]=ye[2],Y[15]=1,Y}function P(Y,ae,ye){var be=ye[0],He=ye[1],Ue=ye[2],st,rt,Je,Et,gt,Lt,kt,St,hn,_n,yn,Hn;return ae===Y?(Y[12]=ae[0]*be+ae[4]*He+ae[8]*Ue+ae[12],Y[13]=ae[1]*be+ae[5]*He+ae[9]*Ue+ae[13],Y[14]=ae[2]*be+ae[6]*He+ae[10]*Ue+ae[14],Y[15]=ae[3]*be+ae[7]*He+ae[11]*Ue+ae[15]):(st=ae[0],rt=ae[1],Je=ae[2],Et=ae[3],gt=ae[4],Lt=ae[5],kt=ae[6],St=ae[7],hn=ae[8],_n=ae[9],yn=ae[10],Hn=ae[11],Y[0]=st,Y[1]=rt,Y[2]=Je,Y[3]=Et,Y[4]=gt,Y[5]=Lt,Y[6]=kt,Y[7]=St,Y[8]=hn,Y[9]=_n,Y[10]=yn,Y[11]=Hn,Y[12]=st*be+gt*He+hn*Ue+ae[12],Y[13]=rt*be+Lt*He+_n*Ue+ae[13],Y[14]=Je*be+kt*He+yn*Ue+ae[14],Y[15]=Et*be+St*He+Hn*Ue+ae[15]),Y}function U(Y,ae){var ye=ae[0],be=ae[1],He=ae[2],Ue=ae[3],st=ae[4],rt=ae[5],Je=ae[6],Et=ae[7],gt=ae[8],Lt=ae[9],kt=ae[10],St=ae[11],hn=ae[12],_n=ae[13],yn=ae[14],Hn=ae[15],hs=ye*rt-be*st,Ma=ye*Je-He*st,Ra=ye*Et-Ue*st,Ia=be*Je-He*rt,Na=be*Et-Ue*rt,Pa=He*Et-Ue*Je,Da=gt*_n-Lt*hn,La=gt*yn-kt*hn,ka=gt*Hn-St*hn,Fa=Lt*yn-kt*_n,Oa=Lt*Hn-St*_n,Ua=kt*Hn-St*yn,Qt=hs*Ua-Ma*Oa+Ra*Fa+Ia*ka-Na*La+Pa*Da;return Qt?(Qt=1/Qt,Y[0]=(rt*Ua-Je*Oa+Et*Fa)*Qt,Y[1]=(He*Oa-be*Ua-Ue*Fa)*Qt,Y[2]=(_n*Pa-yn*Na+Hn*Ia)*Qt,Y[3]=(kt*Na-Lt*Pa-St*Ia)*Qt,Y[4]=(Je*ka-st*Ua-Et*La)*Qt,Y[5]=(ye*Ua-He*ka+Ue*La)*Qt,Y[6]=(yn*Ra-hn*Pa-Hn*Ma)*Qt,Y[7]=(gt*Pa-kt*Ra+St*Ma)*Qt,Y[8]=(st*Oa-rt*ka+Et*Da)*Qt,Y[9]=(be*ka-ye*Oa-Ue*Da)*Qt,Y[10]=(hn*Na-_n*Ra+Hn*hs)*Qt,Y[11]=(Lt*Ra-gt*Na-St*hs)*Qt,Y[12]=(rt*La-st*Fa-Je*Da)*Qt,Y[13]=(ye*Fa-be*La+He*Da)*Qt,Y[14]=(_n*Ma-hn*Ia-yn*hs)*Qt,Y[15]=(gt*Ia-Lt*Ma+kt*hs)*Qt,Y):null}var G=new Float32Array([0,0,0,1]),he=new Float32Array([0,0,0]);function ue(Y,ae,ye,be,He,Ue){_(Y,be||null,Ue.depthNear,Ue.depthFar);var st=ye.orientation||G,rt=ye.position||he;T(ae,st,rt),He&&P(ae,ae,He),U(ae,ae)}return function(Y,ae,ye){return!Y||!ae?!1:(Y.pose=ae,Y.timestamp=ae.timestamp,ue(Y.leftProjectionMatrix,Y.leftViewMatrix,ae,ye._getFieldOfView("left"),ye._getEyeOffset("left"),ye),ue(Y.rightProjectionMatrix,Y.rightViewMatrix,ae,ye._getFieldOfView("right"),ye._getEyeOffset("right"),ye),!0)}}(),X=function(){var b=window.self!==window.top,_=Q(document.referrer),T=Q(window.location.href);return b&&_!==T},Q=function(b){var _,T=b.indexOf("://");T!==-1?_=T+3:_=0;var P=b.indexOf("/",_);return P===-1&&(P=b.length),b.substring(0,P)},Z=function(b){if(b.w>1)return console.warn("getQuaternionAngle: w > 1"),0;var _=2*Math.acos(b.w);return _},ie=function(){var v={};return function(b,_){v[b]===void 0&&(console.warn("webvr-polyfill: "+_),v[b]=!0)}}(),de=function(b,_){var T=_?"Please use "+_+" instead.":"";ie(b,b+" has been deprecated. This may not work on native WebVR displays. "+T)};function ve(v,b,_){if(!b){_(v);return}for(var T=[],P=null,U=0;U<b.length;++U){var G=b[U];switch(G){case v.TEXTURE_BINDING_2D:case v.TEXTURE_BINDING_CUBE_MAP:var he=b[++U];if(he<v.TEXTURE0||he>v.TEXTURE31){console.error("TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit"),T.push(null,null);break}P||(P=v.getParameter(v.ACTIVE_TEXTURE)),v.activeTexture(he),T.push(v.getParameter(G),null);break;case v.ACTIVE_TEXTURE:P=v.getParameter(v.ACTIVE_TEXTURE),T.push(null);break;default:T.push(v.getParameter(G));break}}_(v);for(var U=0;U<b.length;++U){var G=b[U],ue=T[U];switch(G){case v.ACTIVE_TEXTURE:break;case v.ARRAY_BUFFER_BINDING:v.bindBuffer(v.ARRAY_BUFFER,ue);break;case v.COLOR_CLEAR_VALUE:v.clearColor(ue[0],ue[1],ue[2],ue[3]);break;case v.COLOR_WRITEMASK:v.colorMask(ue[0],ue[1],ue[2],ue[3]);break;case v.CURRENT_PROGRAM:v.useProgram(ue);break;case v.ELEMENT_ARRAY_BUFFER_BINDING:v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,ue);break;case v.FRAMEBUFFER_BINDING:v.bindFramebuffer(v.FRAMEBUFFER,ue);break;case v.RENDERBUFFER_BINDING:v.bindRenderbuffer(v.RENDERBUFFER,ue);break;case v.TEXTURE_BINDING_2D:var he=b[++U];if(he<v.TEXTURE0||he>v.TEXTURE31)break;v.activeTexture(he),v.bindTexture(v.TEXTURE_2D,ue);break;case v.TEXTURE_BINDING_CUBE_MAP:var he=b[++U];if(he<v.TEXTURE0||he>v.TEXTURE31)break;v.activeTexture(he),v.bindTexture(v.TEXTURE_CUBE_MAP,ue);break;case v.VIEWPORT:v.viewport(ue[0],ue[1],ue[2],ue[3]);break;case v.BLEND:case v.CULL_FACE:case v.DEPTH_TEST:case v.SCISSOR_TEST:case v.STENCIL_TEST:ue?v.enable(G):v.disable(G);break;default:console.log("No GL restore behavior for 0x"+G.toString(16));break}P&&v.activeTexture(P)}}var J=ve,fe=["attribute vec2 position;","attribute vec3 texCoord;","varying vec2 vTexCoord;","uniform vec4 viewportOffsetScale[2];","void main() {","  vec4 viewport = viewportOffsetScale[int(texCoord.z)];","  vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;","  gl_Position = vec4( position, 1.0, 1.0 );","}"].join(`
`),K=["precision mediump float;","uniform sampler2D diffuse;","varying vec2 vTexCoord;","void main() {","  gl_FragColor = texture2D(diffuse, vTexCoord);","}"].join(`
`);function xe(v,b,_,T){this.gl=v,this.cardboardUI=b,this.bufferScale=_,this.dirtySubmitFrameBindings=T,this.ctxAttribs=v.getContextAttributes(),this.instanceExt=v.getExtension("ANGLE_instanced_arrays"),this.meshWidth=20,this.meshHeight=20,this.bufferWidth=v.drawingBufferWidth,this.bufferHeight=v.drawingBufferHeight,this.realBindFramebuffer=v.bindFramebuffer,this.realEnable=v.enable,this.realDisable=v.disable,this.realColorMask=v.colorMask,this.realClearColor=v.clearColor,this.realViewport=v.viewport,u()||(this.realCanvasWidth=Object.getOwnPropertyDescriptor(v.canvas.__proto__,"width"),this.realCanvasHeight=Object.getOwnPropertyDescriptor(v.canvas.__proto__,"height")),this.isPatched=!1,this.lastBoundFramebuffer=null,this.cullFace=!1,this.depthTest=!1,this.blend=!1,this.scissorTest=!1,this.stencilTest=!1,this.viewport=[0,0,0,0],this.colorMask=[!0,!0,!0,!0],this.clearColor=[0,0,0,0],this.attribs={position:0,texCoord:1},this.program=O(v,fe,K,this.attribs),this.uniforms=C(v,this.program),this.viewportOffsetScale=new Float32Array(8),this.setTextureBounds(),this.vertexBuffer=v.createBuffer(),this.indexBuffer=v.createBuffer(),this.indexCount=0,this.renderTarget=v.createTexture(),this.framebuffer=v.createFramebuffer(),this.depthStencilBuffer=null,this.depthBuffer=null,this.stencilBuffer=null,this.ctxAttribs.depth&&this.ctxAttribs.stencil?this.depthStencilBuffer=v.createRenderbuffer():this.ctxAttribs.depth?this.depthBuffer=v.createRenderbuffer():this.ctxAttribs.stencil&&(this.stencilBuffer=v.createRenderbuffer()),this.patch(),this.onResize()}xe.prototype.destroy=function(){var v=this.gl;this.unpatch(),v.deleteProgram(this.program),v.deleteBuffer(this.vertexBuffer),v.deleteBuffer(this.indexBuffer),v.deleteTexture(this.renderTarget),v.deleteFramebuffer(this.framebuffer),this.depthStencilBuffer&&v.deleteRenderbuffer(this.depthStencilBuffer),this.depthBuffer&&v.deleteRenderbuffer(this.depthBuffer),this.stencilBuffer&&v.deleteRenderbuffer(this.stencilBuffer),this.cardboardUI&&this.cardboardUI.destroy()},xe.prototype.onResize=function(){var v=this.gl,b=this,_=[v.RENDERBUFFER_BINDING,v.TEXTURE_BINDING_2D,v.TEXTURE0];J(v,_,function(T){b.realBindFramebuffer.call(T,T.FRAMEBUFFER,null),b.scissorTest&&b.realDisable.call(T,T.SCISSOR_TEST),b.realColorMask.call(T,!0,!0,!0,!0),b.realViewport.call(T,0,0,T.drawingBufferWidth,T.drawingBufferHeight),b.realClearColor.call(T,0,0,0,1),T.clear(T.COLOR_BUFFER_BIT),b.realBindFramebuffer.call(T,T.FRAMEBUFFER,b.framebuffer),T.bindTexture(T.TEXTURE_2D,b.renderTarget),T.texImage2D(T.TEXTURE_2D,0,b.ctxAttribs.alpha?T.RGBA:T.RGB,b.bufferWidth,b.bufferHeight,0,b.ctxAttribs.alpha?T.RGBA:T.RGB,T.UNSIGNED_BYTE,null),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.LINEAR),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.LINEAR),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,b.renderTarget,0),b.ctxAttribs.depth&&b.ctxAttribs.stencil?(T.bindRenderbuffer(T.RENDERBUFFER,b.depthStencilBuffer),T.renderbufferStorage(T.RENDERBUFFER,T.DEPTH_STENCIL,b.bufferWidth,b.bufferHeight),T.framebufferRenderbuffer(T.FRAMEBUFFER,T.DEPTH_STENCIL_ATTACHMENT,T.RENDERBUFFER,b.depthStencilBuffer)):b.ctxAttribs.depth?(T.bindRenderbuffer(T.RENDERBUFFER,b.depthBuffer),T.renderbufferStorage(T.RENDERBUFFER,T.DEPTH_COMPONENT16,b.bufferWidth,b.bufferHeight),T.framebufferRenderbuffer(T.FRAMEBUFFER,T.DEPTH_ATTACHMENT,T.RENDERBUFFER,b.depthBuffer)):b.ctxAttribs.stencil&&(T.bindRenderbuffer(T.RENDERBUFFER,b.stencilBuffer),T.renderbufferStorage(T.RENDERBUFFER,T.STENCIL_INDEX8,b.bufferWidth,b.bufferHeight),T.framebufferRenderbuffer(T.FRAMEBUFFER,T.STENCIL_ATTACHMENT,T.RENDERBUFFER,b.stencilBuffer)),!T.checkFramebufferStatus(T.FRAMEBUFFER)===T.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer incomplete!"),b.realBindFramebuffer.call(T,T.FRAMEBUFFER,b.lastBoundFramebuffer),b.scissorTest&&b.realEnable.call(T,T.SCISSOR_TEST),b.realColorMask.apply(T,b.colorMask),b.realViewport.apply(T,b.viewport),b.realClearColor.apply(T,b.clearColor)}),this.cardboardUI&&this.cardboardUI.onResize()},xe.prototype.patch=function(){if(!this.isPatched){var v=this,b=this.gl.canvas,_=this.gl;u()||(b.width=x()*this.bufferScale,b.height=S()*this.bufferScale,Object.defineProperty(b,"width",{configurable:!0,enumerable:!0,get:function(){return v.bufferWidth},set:function(P){v.bufferWidth=P,v.realCanvasWidth.set.call(b,P),v.onResize()}}),Object.defineProperty(b,"height",{configurable:!0,enumerable:!0,get:function(){return v.bufferHeight},set:function(P){v.bufferHeight=P,v.realCanvasHeight.set.call(b,P),v.onResize()}})),this.lastBoundFramebuffer=_.getParameter(_.FRAMEBUFFER_BINDING),this.lastBoundFramebuffer==null&&(this.lastBoundFramebuffer=this.framebuffer,this.gl.bindFramebuffer(_.FRAMEBUFFER,this.framebuffer)),this.gl.bindFramebuffer=function(T,P){v.lastBoundFramebuffer=P||v.framebuffer,v.realBindFramebuffer.call(_,T,v.lastBoundFramebuffer)},this.cullFace=_.getParameter(_.CULL_FACE),this.depthTest=_.getParameter(_.DEPTH_TEST),this.blend=_.getParameter(_.BLEND),this.scissorTest=_.getParameter(_.SCISSOR_TEST),this.stencilTest=_.getParameter(_.STENCIL_TEST),_.enable=function(T){switch(T){case _.CULL_FACE:v.cullFace=!0;break;case _.DEPTH_TEST:v.depthTest=!0;break;case _.BLEND:v.blend=!0;break;case _.SCISSOR_TEST:v.scissorTest=!0;break;case _.STENCIL_TEST:v.stencilTest=!0;break}v.realEnable.call(_,T)},_.disable=function(T){switch(T){case _.CULL_FACE:v.cullFace=!1;break;case _.DEPTH_TEST:v.depthTest=!1;break;case _.BLEND:v.blend=!1;break;case _.SCISSOR_TEST:v.scissorTest=!1;break;case _.STENCIL_TEST:v.stencilTest=!1;break}v.realDisable.call(_,T)},this.colorMask=_.getParameter(_.COLOR_WRITEMASK),_.colorMask=function(T,P,U,G){v.colorMask[0]=T,v.colorMask[1]=P,v.colorMask[2]=U,v.colorMask[3]=G,v.realColorMask.call(_,T,P,U,G)},this.clearColor=_.getParameter(_.COLOR_CLEAR_VALUE),_.clearColor=function(T,P,U,G){v.clearColor[0]=T,v.clearColor[1]=P,v.clearColor[2]=U,v.clearColor[3]=G,v.realClearColor.call(_,T,P,U,G)},this.viewport=_.getParameter(_.VIEWPORT),_.viewport=function(T,P,U,G){v.viewport[0]=T,v.viewport[1]=P,v.viewport[2]=U,v.viewport[3]=G,v.realViewport.call(_,T,P,U,G)},this.isPatched=!0,z(b)}},xe.prototype.unpatch=function(){if(this.isPatched){var v=this.gl,b=this.gl.canvas;u()||(Object.defineProperty(b,"width",this.realCanvasWidth),Object.defineProperty(b,"height",this.realCanvasHeight)),b.width=this.bufferWidth,b.height=this.bufferHeight,v.bindFramebuffer=this.realBindFramebuffer,v.enable=this.realEnable,v.disable=this.realDisable,v.colorMask=this.realColorMask,v.clearColor=this.realClearColor,v.viewport=this.realViewport,this.lastBoundFramebuffer==this.framebuffer&&v.bindFramebuffer(v.FRAMEBUFFER,null),this.isPatched=!1,setTimeout(function(){z(b)},1)}},xe.prototype.setTextureBounds=function(v,b){v||(v=[0,0,.5,1]),b||(b=[.5,0,.5,1]),this.viewportOffsetScale[0]=v[0],this.viewportOffsetScale[1]=v[1],this.viewportOffsetScale[2]=v[2],this.viewportOffsetScale[3]=v[3],this.viewportOffsetScale[4]=b[0],this.viewportOffsetScale[5]=b[1],this.viewportOffsetScale[6]=b[2],this.viewportOffsetScale[7]=b[3]},xe.prototype.submitFrame=function(){var v=this.gl,b=this,_=[];if(this.dirtySubmitFrameBindings||_.push(v.CURRENT_PROGRAM,v.ARRAY_BUFFER_BINDING,v.ELEMENT_ARRAY_BUFFER_BINDING,v.TEXTURE_BINDING_2D,v.TEXTURE0),J(v,_,function(P){b.realBindFramebuffer.call(P,P.FRAMEBUFFER,null);var U=0,G=0;b.instanceExt&&(U=P.getVertexAttrib(b.attribs.position,b.instanceExt.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE),G=P.getVertexAttrib(b.attribs.texCoord,b.instanceExt.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE)),b.cullFace&&b.realDisable.call(P,P.CULL_FACE),b.depthTest&&b.realDisable.call(P,P.DEPTH_TEST),b.blend&&b.realDisable.call(P,P.BLEND),b.scissorTest&&b.realDisable.call(P,P.SCISSOR_TEST),b.stencilTest&&b.realDisable.call(P,P.STENCIL_TEST),b.realColorMask.call(P,!0,!0,!0,!0),b.realViewport.call(P,0,0,P.drawingBufferWidth,P.drawingBufferHeight),(b.ctxAttribs.alpha||u())&&(b.realClearColor.call(P,0,0,0,1),P.clear(P.COLOR_BUFFER_BIT)),P.useProgram(b.program),P.bindBuffer(P.ELEMENT_ARRAY_BUFFER,b.indexBuffer),P.bindBuffer(P.ARRAY_BUFFER,b.vertexBuffer),P.enableVertexAttribArray(b.attribs.position),P.enableVertexAttribArray(b.attribs.texCoord),P.vertexAttribPointer(b.attribs.position,2,P.FLOAT,!1,20,0),P.vertexAttribPointer(b.attribs.texCoord,3,P.FLOAT,!1,20,8),b.instanceExt&&(U!=0&&b.instanceExt.vertexAttribDivisorANGLE(b.attribs.position,0),G!=0&&b.instanceExt.vertexAttribDivisorANGLE(b.attribs.texCoord,0)),P.activeTexture(P.TEXTURE0),P.uniform1i(b.uniforms.diffuse,0),P.bindTexture(P.TEXTURE_2D,b.renderTarget),P.uniform4fv(b.uniforms.viewportOffsetScale,b.viewportOffsetScale),P.drawElements(P.TRIANGLES,b.indexCount,P.UNSIGNED_SHORT,0),b.cardboardUI&&b.cardboardUI.renderNoState(),b.realBindFramebuffer.call(b.gl,P.FRAMEBUFFER,b.framebuffer),b.ctxAttribs.preserveDrawingBuffer||(b.realClearColor.call(P,0,0,0,0),P.clear(P.COLOR_BUFFER_BIT)),b.dirtySubmitFrameBindings||b.realBindFramebuffer.call(P,P.FRAMEBUFFER,b.lastBoundFramebuffer),b.cullFace&&b.realEnable.call(P,P.CULL_FACE),b.depthTest&&b.realEnable.call(P,P.DEPTH_TEST),b.blend&&b.realEnable.call(P,P.BLEND),b.scissorTest&&b.realEnable.call(P,P.SCISSOR_TEST),b.stencilTest&&b.realEnable.call(P,P.STENCIL_TEST),b.realColorMask.apply(P,b.colorMask),b.realViewport.apply(P,b.viewport),(b.ctxAttribs.alpha||!b.ctxAttribs.preserveDrawingBuffer)&&b.realClearColor.apply(P,b.clearColor),b.instanceExt&&(U!=0&&b.instanceExt.vertexAttribDivisorANGLE(b.attribs.position,U),G!=0&&b.instanceExt.vertexAttribDivisorANGLE(b.attribs.texCoord,G))}),u()){var T=v.canvas;(T.width!=b.bufferWidth||T.height!=b.bufferHeight)&&(b.bufferWidth=T.width,b.bufferHeight=T.height,b.onResize())}},xe.prototype.updateDeviceInfo=function(v){var b=this.gl,_=this,T=[b.ARRAY_BUFFER_BINDING,b.ELEMENT_ARRAY_BUFFER_BINDING];J(b,T,function(P){var U=_.computeMeshVertices_(_.meshWidth,_.meshHeight,v);if(P.bindBuffer(P.ARRAY_BUFFER,_.vertexBuffer),P.bufferData(P.ARRAY_BUFFER,U,P.STATIC_DRAW),!_.indexCount){var G=_.computeMeshIndices_(_.meshWidth,_.meshHeight);P.bindBuffer(P.ELEMENT_ARRAY_BUFFER,_.indexBuffer),P.bufferData(P.ELEMENT_ARRAY_BUFFER,G,P.STATIC_DRAW),_.indexCount=G.length}})},xe.prototype.computeMeshVertices_=function(v,b,_){for(var T=new Float32Array(2*v*b*5),P=_.getLeftEyeVisibleTanAngles(),U=_.getLeftEyeNoLensTanAngles(),G=_.getLeftEyeVisibleScreenRect(U),he=0,ue=0;ue<2;ue++){for(var Y=0;Y<b;Y++)for(var ae=0;ae<v;ae++,he++){var ye=ae/(v-1),be=Y/(b-1),He=ye,Ue=be,st=l(P[0],P[2],ye),rt=l(P[3],P[1],be),Je=Math.sqrt(st*st+rt*rt),Et=_.distortion.distortInverse(Je),gt=st*Et/Je,Lt=rt*Et/Je;ye=(gt-U[0])/(U[2]-U[0]),be=(Lt-U[3])/(U[1]-U[3]),ye=(G.x+ye*G.width-.5)*2,be=(G.y+be*G.height-.5)*2,T[he*5+0]=ye,T[he*5+1]=be,T[he*5+2]=He,T[he*5+3]=Ue,T[he*5+4]=ue}var kt=P[2]-P[0];P[0]=-(kt+P[0]),P[2]=kt-P[2],kt=U[2]-U[0],U[0]=-(kt+U[0]),U[2]=kt-U[2],G.x=1-(G.x+G.width)}return T},xe.prototype.computeMeshIndices_=function(v,b){for(var _=new Uint16Array(2*(v-1)*(b-1)*6),T=v/2,P=b/2,U=0,G=0,he=0;he<2;he++)for(var ue=0;ue<b;ue++)for(var Y=0;Y<v;Y++,U++)Y==0||ue==0||(Y<=T==ue<=P?(_[G++]=U,_[G++]=U-v-1,_[G++]=U-v,_[G++]=U-v-1,_[G++]=U,_[G++]=U-1):(_[G++]=U-1,_[G++]=U-v,_[G++]=U,_[G++]=U-v,_[G++]=U-1,_[G++]=U-v-1));return _},xe.prototype.getOwnPropertyDescriptor_=function(v,b){var _=Object.getOwnPropertyDescriptor(v,b);return(_.get===void 0||_.set===void 0)&&(_.configurable=!0,_.enumerable=!0,_.get=function(){return this.getAttribute(b)},_.set=function(T){this.setAttribute(b,T)}),_};var Me=["attribute vec2 position;","uniform mat4 projectionMat;","void main() {","  gl_Position = projectionMat * vec4( position, -1.0, 1.0 );","}"].join(`
`),De=["precision mediump float;","uniform vec4 color;","void main() {","  gl_FragColor = color;","}"].join(`
`),Ve=Math.PI/180,Be=60,mt=12,Kt=20,it=1,te=.75,Yt=.3125,Ye=4,Ze=28,tt=1.5;function wt(v){this.gl=v,this.attribs={position:0},this.program=O(v,Me,De,this.attribs),this.uniforms=C(v,this.program),this.vertexBuffer=v.createBuffer(),this.gearOffset=0,this.gearVertexCount=0,this.arrowOffset=0,this.arrowVertexCount=0,this.projMat=new Float32Array(16),this.listener=null,this.onResize()}wt.prototype.destroy=function(){var v=this.gl;this.listener&&v.canvas.removeEventListener("click",this.listener,!1),v.deleteProgram(this.program),v.deleteBuffer(this.vertexBuffer)},wt.prototype.listen=function(v,b){var _=this.gl.canvas;this.listener=function(T){var P=_.clientWidth/2,U=Ze*tt;T.clientX>P-U&&T.clientX<P+U&&T.clientY>_.clientHeight-U?v(T):T.clientX<U&&T.clientY<U&&b(T)},_.addEventListener("click",this.listener,!1)},wt.prototype.onResize=function(){var v=this.gl,b=this,_=[v.ARRAY_BUFFER_BINDING];J(v,_,function(T){var P=[],U=T.drawingBufferWidth/2,G=Math.max(screen.width,screen.height)*window.devicePixelRatio,he=T.drawingBufferWidth/G,ue=he*window.devicePixelRatio,Y=Ye*ue/2,ae=Ze*tt*ue,ye=Ze*ue/2,be=(Ze*tt-Ze)*ue;P.push(U-Y,ae),P.push(U-Y,T.drawingBufferHeight),P.push(U+Y,ae),P.push(U+Y,T.drawingBufferHeight),b.gearOffset=P.length/2;function He(Et,gt){var Lt=(90-Et)*Ve,kt=Math.cos(Lt),St=Math.sin(Lt);P.push(Yt*kt*ye+U,Yt*St*ye+ye),P.push(gt*kt*ye+U,gt*St*ye+ye)}for(var Ue=0;Ue<=6;Ue++){var st=Ue*Be;He(st,it),He(st+mt,it),He(st+Kt,te),He(st+(Be-Kt),te),He(st+(Be-mt),it)}b.gearVertexCount=P.length/2-b.gearOffset,b.arrowOffset=P.length/2;function rt(Et,gt){P.push(be+Et,T.drawingBufferHeight-be-gt)}var Je=Y/Math.sin(45*Ve);rt(0,ye),rt(ye,0),rt(ye+Je,Je),rt(Je,ye+Je),rt(Je,ye-Je),rt(0,ye),rt(ye,ye*2),rt(ye+Je,ye*2-Je),rt(Je,ye-Je),rt(0,ye),rt(Je,ye-Y),rt(Ze*ue,ye-Y),rt(Je,ye+Y),rt(Ze*ue,ye+Y),b.arrowVertexCount=P.length/2-b.arrowOffset,T.bindBuffer(T.ARRAY_BUFFER,b.vertexBuffer),T.bufferData(T.ARRAY_BUFFER,new Float32Array(P),T.STATIC_DRAW)})},wt.prototype.render=function(){var v=this.gl,b=this,_=[v.CULL_FACE,v.DEPTH_TEST,v.BLEND,v.SCISSOR_TEST,v.STENCIL_TEST,v.COLOR_WRITEMASK,v.VIEWPORT,v.CURRENT_PROGRAM,v.ARRAY_BUFFER_BINDING];J(v,_,function(T){T.disable(T.CULL_FACE),T.disable(T.DEPTH_TEST),T.disable(T.BLEND),T.disable(T.SCISSOR_TEST),T.disable(T.STENCIL_TEST),T.colorMask(!0,!0,!0,!0),T.viewport(0,0,T.drawingBufferWidth,T.drawingBufferHeight),b.renderNoState()})},wt.prototype.renderNoState=function(){var v=this.gl;v.useProgram(this.program),v.bindBuffer(v.ARRAY_BUFFER,this.vertexBuffer),v.enableVertexAttribArray(this.attribs.position),v.vertexAttribPointer(this.attribs.position,2,v.FLOAT,!1,8,0),v.uniform4f(this.uniforms.color,1,1,1,1),N(this.projMat,0,v.drawingBufferWidth,0,v.drawingBufferHeight,.1,1024),v.uniformMatrix4fv(this.uniforms.projectionMat,!1,this.projMat),v.drawArrays(v.TRIANGLE_STRIP,0,4),v.drawArrays(v.TRIANGLE_STRIP,this.gearOffset,this.gearVertexCount),v.drawArrays(v.TRIANGLE_STRIP,this.arrowOffset,this.arrowVertexCount)};function lt(v){this.coefficients=v}lt.prototype.distortInverse=function(v){for(var b=0,_=1,T=v-this.distort(b);Math.abs(_-b)>1e-4;){var P=v-this.distort(_),U=_-P*((_-b)/(P-T));b=_,_=U,T=P}return _},lt.prototype.distort=function(v){for(var b=v*v,_=0,T=0;T<this.coefficients.length;T++)_=b*(_+this.coefficients[T]);return(_+1)*v};var Qe=Math.PI/180,ft=180/Math.PI,ut=function(b,_,T){this.x=b||0,this.y=_||0,this.z=T||0};ut.prototype={constructor:ut,set:function(b,_,T){return this.x=b,this.y=_,this.z=T,this},copy:function(b){return this.x=b.x,this.y=b.y,this.z=b.z,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},normalize:function(){var b=this.length();if(b!==0){var _=1/b;this.multiplyScalar(_)}else this.x=0,this.y=0,this.z=0;return this},multiplyScalar:function(b){this.x*=b,this.y*=b,this.z*=b},applyQuaternion:function(b){var _=this.x,T=this.y,P=this.z,U=b.x,G=b.y,he=b.z,ue=b.w,Y=ue*_+G*P-he*T,ae=ue*T+he*_-U*P,ye=ue*P+U*T-G*_,be=-U*_-G*T-he*P;return this.x=Y*ue+be*-U+ae*-he-ye*-G,this.y=ae*ue+be*-G+ye*-U-Y*-he,this.z=ye*ue+be*-he+Y*-G-ae*-U,this},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},crossVectors:function(b,_){var T=b.x,P=b.y,U=b.z,G=_.x,he=_.y,ue=_.z;return this.x=P*ue-U*he,this.y=U*G-T*ue,this.z=T*he-P*G,this}};var nt=function(b,_,T,P){this.x=b||0,this.y=_||0,this.z=T||0,this.w=P!==void 0?P:1};nt.prototype={constructor:nt,set:function(b,_,T,P){return this.x=b,this.y=_,this.z=T,this.w=P,this},copy:function(b){return this.x=b.x,this.y=b.y,this.z=b.z,this.w=b.w,this},setFromEulerXYZ:function(b,_,T){var P=Math.cos(b/2),U=Math.cos(_/2),G=Math.cos(T/2),he=Math.sin(b/2),ue=Math.sin(_/2),Y=Math.sin(T/2);return this.x=he*U*G+P*ue*Y,this.y=P*ue*G-he*U*Y,this.z=P*U*Y+he*ue*G,this.w=P*U*G-he*ue*Y,this},setFromEulerYXZ:function(b,_,T){var P=Math.cos(b/2),U=Math.cos(_/2),G=Math.cos(T/2),he=Math.sin(b/2),ue=Math.sin(_/2),Y=Math.sin(T/2);return this.x=he*U*G+P*ue*Y,this.y=P*ue*G-he*U*Y,this.z=P*U*Y-he*ue*G,this.w=P*U*G+he*ue*Y,this},setFromAxisAngle:function(b,_){var T=_/2,P=Math.sin(T);return this.x=b.x*P,this.y=b.y*P,this.z=b.z*P,this.w=Math.cos(T),this},multiply:function(b){return this.multiplyQuaternions(this,b)},multiplyQuaternions:function(b,_){var T=b.x,P=b.y,U=b.z,G=b.w,he=_.x,ue=_.y,Y=_.z,ae=_.w;return this.x=T*ae+G*he+P*Y-U*ue,this.y=P*ae+G*ue+U*he-T*Y,this.z=U*ae+G*Y+T*ue-P*he,this.w=G*ae-T*he-P*ue-U*Y,this},inverse:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this.normalize(),this},normalize:function(){var b=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return b===0?(this.x=0,this.y=0,this.z=0,this.w=1):(b=1/b,this.x=this.x*b,this.y=this.y*b,this.z=this.z*b,this.w=this.w*b),this},slerp:function(b,_){if(_===0)return this;if(_===1)return this.copy(b);var T=this.x,P=this.y,U=this.z,G=this.w,he=G*b.w+T*b.x+P*b.y+U*b.z;if(he<0?(this.w=-b.w,this.x=-b.x,this.y=-b.y,this.z=-b.z,he=-he):this.copy(b),he>=1)return this.w=G,this.x=T,this.y=P,this.z=U,this;var ue=Math.acos(he),Y=Math.sqrt(1-he*he);if(Math.abs(Y)<.001)return this.w=.5*(G+this.w),this.x=.5*(T+this.x),this.y=.5*(P+this.y),this.z=.5*(U+this.z),this;var ae=Math.sin((1-_)*ue)/Y,ye=Math.sin(_*ue)/Y;return this.w=G*ae+this.w*ye,this.x=T*ae+this.x*ye,this.y=P*ae+this.y*ye,this.z=U*ae+this.z*ye,this},setFromUnitVectors:function(){var v,b,_=1e-6;return function(T,P){return v===void 0&&(v=new ut),b=T.dot(P)+1,b<_?(b=0,Math.abs(T.x)>Math.abs(T.z)?v.set(-T.y,T.x,0):v.set(0,-T.z,T.y)):v.crossVectors(T,P),this.x=v.x,this.y=v.y,this.z=v.z,this.w=b,this.normalize(),this}}()};function B(v){this.width=v.width||x(),this.height=v.height||S(),this.widthMeters=v.widthMeters,this.heightMeters=v.heightMeters,this.bevelMeters=v.bevelMeters}var D=new B({widthMeters:.11,heightMeters:.062,bevelMeters:.004}),se=new B({widthMeters:.1038,heightMeters:.0584,bevelMeters:.004}),Ae={CardboardV1:new Se({id:"CardboardV1",label:"Cardboard I/O 2014",fov:40,interLensDistance:.06,baselineLensDistance:.035,screenLensDistance:.042,distortionCoefficients:[.441,.156],inverseCoefficients:[-.4410035,.42756155,-.4804439,.5460139,-.58821183,.5733938,-.48303202,.33299083,-.17573841,.0651772,-.01488963,.001559834]}),CardboardV2:new Se({id:"CardboardV2",label:"Cardboard I/O 2015",fov:60,interLensDistance:.064,baselineLensDistance:.035,screenLensDistance:.039,distortionCoefficients:[.34,.55],inverseCoefficients:[-.33836704,-.18162185,.862655,-1.2462051,1.0560602,-.58208317,.21609078,-.05444823,.009177956,-.0009904169,6183535e-11,-16981803e-13]})};function ge(v,b){this.viewer=Ae.CardboardV2,this.updateDeviceParams(v),this.distortion=new lt(this.viewer.distortionCoefficients);for(var _=0;_<b.length;_++){var T=b[_];Ae[T.id]=new Se(T)}}ge.prototype.updateDeviceParams=function(v){this.device=this.determineDevice_(v)||this.device},ge.prototype.getDevice=function(){return this.device},ge.prototype.setViewer=function(v){this.viewer=v,this.distortion=new lt(this.viewer.distortionCoefficients)},ge.prototype.determineDevice_=function(v){if(!v)return u()?(console.warn("Using fallback iOS device measurements."),se):(console.warn("Using fallback Android device measurements."),D);var b=.0254,_=b/v.xdpi,T=b/v.ydpi,P=x(),U=S();return new B({widthMeters:_*P,heightMeters:T*U,bevelMeters:v.bevelMm*.001})},ge.prototype.getDistortedFieldOfViewLeftEye=function(){var v=this.viewer,b=this.device,_=this.distortion,T=v.screenLensDistance,P=(b.widthMeters-v.interLensDistance)/2,U=v.interLensDistance/2,G=v.baselineLensDistance-b.bevelMeters,he=b.heightMeters-G,ue=ft*Math.atan(_.distort(P/T)),Y=ft*Math.atan(_.distort(U/T)),ae=ft*Math.atan(_.distort(G/T)),ye=ft*Math.atan(_.distort(he/T));return{leftDegrees:Math.min(ue,v.fov),rightDegrees:Math.min(Y,v.fov),downDegrees:Math.min(ae,v.fov),upDegrees:Math.min(ye,v.fov)}},ge.prototype.getLeftEyeVisibleTanAngles=function(){var v=this.viewer,b=this.device,_=this.distortion,T=Math.tan(-Qe*v.fov),P=Math.tan(Qe*v.fov),U=Math.tan(Qe*v.fov),G=Math.tan(-Qe*v.fov),he=b.widthMeters/4,ue=b.heightMeters/2,Y=v.baselineLensDistance-b.bevelMeters-ue,ae=v.interLensDistance/2-he,ye=-Y,be=v.screenLensDistance,He=_.distort((ae-he)/be),Ue=_.distort((ye+ue)/be),st=_.distort((ae+he)/be),rt=_.distort((ye-ue)/be),Je=new Float32Array(4);return Je[0]=Math.max(T,He),Je[1]=Math.min(P,Ue),Je[2]=Math.min(U,st),Je[3]=Math.max(G,rt),Je},ge.prototype.getLeftEyeNoLensTanAngles=function(){var v=this.viewer,b=this.device,_=this.distortion,T=new Float32Array(4),P=_.distortInverse(Math.tan(-Qe*v.fov)),U=_.distortInverse(Math.tan(Qe*v.fov)),G=_.distortInverse(Math.tan(Qe*v.fov)),he=_.distortInverse(Math.tan(-Qe*v.fov)),ue=b.widthMeters/4,Y=b.heightMeters/2,ae=v.baselineLensDistance-b.bevelMeters-Y,ye=v.interLensDistance/2-ue,be=-ae,He=v.screenLensDistance,Ue=(ye-ue)/He,st=(be+Y)/He,rt=(ye+ue)/He,Je=(be-Y)/He;return T[0]=Math.max(P,Ue),T[1]=Math.min(U,st),T[2]=Math.min(G,rt),T[3]=Math.max(he,Je),T},ge.prototype.getLeftEyeVisibleScreenRect=function(v){var b=this.viewer,_=this.device,T=b.screenLensDistance,P=(_.widthMeters-b.interLensDistance)/2,U=b.baselineLensDistance-_.bevelMeters,G=(v[0]*T+P)/_.widthMeters,he=(v[1]*T+U)/_.heightMeters,ue=(v[2]*T+P)/_.widthMeters,Y=(v[3]*T+U)/_.heightMeters;return{x:G,y:Y,width:ue-G,height:he-Y}},ge.prototype.getFieldOfViewLeftEye=function(v){return v?this.getUndistortedFieldOfViewLeftEye():this.getDistortedFieldOfViewLeftEye()},ge.prototype.getFieldOfViewRightEye=function(v){var b=this.getFieldOfViewLeftEye(v);return{leftDegrees:b.rightDegrees,rightDegrees:b.leftDegrees,upDegrees:b.upDegrees,downDegrees:b.downDegrees}},ge.prototype.getUndistortedFieldOfViewLeftEye=function(){var v=this.getUndistortedParams_();return{leftDegrees:ft*Math.atan(v.outerDist),rightDegrees:ft*Math.atan(v.innerDist),downDegrees:ft*Math.atan(v.bottomDist),upDegrees:ft*Math.atan(v.topDist)}},ge.prototype.getUndistortedViewportLeftEye=function(){var v=this.getUndistortedParams_(),b=this.viewer,_=this.device,T=b.screenLensDistance,P=_.widthMeters/T,U=_.heightMeters/T,G=_.width/P,he=_.height/U,ue=Math.round((v.eyePosX-v.outerDist)*G),Y=Math.round((v.eyePosY-v.bottomDist)*he);return{x:ue,y:Y,width:Math.round((v.eyePosX+v.innerDist)*G)-ue,height:Math.round((v.eyePosY+v.topDist)*he)-Y}},ge.prototype.getUndistortedParams_=function(){var v=this.viewer,b=this.device,_=this.distortion,T=v.screenLensDistance,P=v.interLensDistance/2/T,U=b.widthMeters/T,G=b.heightMeters/T,he=U/2-P,ue=(v.baselineLensDistance-b.bevelMeters)/T,Y=v.fov,ae=_.distortInverse(Math.tan(Qe*Y)),ye=Math.min(he,ae),be=Math.min(P,ae),He=Math.min(ue,ae),Ue=Math.min(G-ue,ae);return{outerDist:ye,innerDist:be,topDist:Ue,bottomDist:He,eyePosX:he,eyePosY:ue}};function Se(v){this.id=v.id,this.label=v.label,this.fov=v.fov,this.interLensDistance=v.interLensDistance,this.baselineLensDistance=v.baselineLensDistance,this.screenLensDistance=v.screenLensDistance,this.distortionCoefficients=v.distortionCoefficients,this.inverseCoefficients=v.inverseCoefficients}ge.Viewers=Ae;var We=1,Re="2019-11-09T17:36:14Z",le=[{type:"android",rules:[{mdmh:"asus/*/Nexus 7/*"},{ua:"Nexus 7"}],dpi:[320.8,323],bw:3,ac:500},{type:"android",rules:[{mdmh:"asus/*/ASUS_X00PD/*"},{ua:"ASUS_X00PD"}],dpi:245,bw:3,ac:500},{type:"android",rules:[{mdmh:"asus/*/ASUS_X008D/*"},{ua:"ASUS_X008D"}],dpi:282,bw:3,ac:500},{type:"android",rules:[{mdmh:"asus/*/ASUS_Z00AD/*"},{ua:"ASUS_Z00AD"}],dpi:[403,404.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google/*/Pixel 2 XL/*"},{ua:"Pixel 2 XL"}],dpi:537.9,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google/*/Pixel 3 XL/*"},{ua:"Pixel 3 XL"}],dpi:[558.5,553.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google/*/Pixel XL/*"},{ua:"Pixel XL"}],dpi:[537.9,533],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google/*/Pixel 3/*"},{ua:"Pixel 3"}],dpi:442.4,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google/*/Pixel 2/*"},{ua:"Pixel 2"}],dpi:441,bw:3,ac:500},{type:"android",rules:[{mdmh:"Google/*/Pixel/*"},{ua:"Pixel"}],dpi:[432.6,436.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC6435LVW/*"},{ua:"HTC6435LVW"}],dpi:[449.7,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC One XL/*"},{ua:"HTC One XL"}],dpi:[315.3,314.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"htc/*/Nexus 9/*"},{ua:"Nexus 9"}],dpi:289,bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One M9/*"},{ua:"HTC One M9"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One_M8/*"},{ua:"HTC One_M8"}],dpi:[449.7,447.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One/*"},{ua:"HTC One"}],dpi:472.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Huawei/*/Nexus 6P/*"},{ua:"Nexus 6P"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Huawei/*/BLN-L24/*"},{ua:"HONORBLN-L24"}],dpi:480,bw:4,ac:500},{type:"android",rules:[{mdmh:"Huawei/*/BKL-L09/*"},{ua:"BKL-L09"}],dpi:403,bw:3.47,ac:500},{type:"android",rules:[{mdmh:"LENOVO/*/Lenovo PB2-690Y/*"},{ua:"Lenovo PB2-690Y"}],dpi:[457.2,454.713],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5X/*"},{ua:"Nexus 5X"}],dpi:[422,419.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS345/*"},{ua:"LGMS345"}],dpi:[221.7,219.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D800/*"},{ua:"LG-D800"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D850/*"},{ua:"LG-D850"}],dpi:[537.9,541.9],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/VS985 4G/*"},{ua:"VS985 4G"}],dpi:[537.9,535.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5/*"},{ua:"Nexus 5 B"}],dpi:[442.4,444.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 4/*"},{ua:"Nexus 4"}],dpi:[319.8,318.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LG-P769/*"},{ua:"LG-P769"}],dpi:[240.6,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS323/*"},{ua:"LGMS323"}],dpi:[206.6,204.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGLS996/*"},{ua:"LGLS996"}],dpi:[403.4,401.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/4560MMX/*"},{ua:"4560MMX"}],dpi:[240,219.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/A250/*"},{ua:"Micromax A250"}],dpi:[480,446.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/Micromax AQ4501/*"},{ua:"Micromax AQ4501"}],dpi:240,bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/G5/*"},{ua:"Moto G (5) Plus"}],dpi:[403.4,403],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/DROID RAZR/*"},{ua:"DROID RAZR"}],dpi:[368.1,256.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT830C/*"},{ua:"XT830C"}],dpi:[254,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1021/*"},{ua:"XT1021"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1023/*"},{ua:"XT1023"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1028/*"},{ua:"XT1028"}],dpi:[326.6,327.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1034/*"},{ua:"XT1034"}],dpi:[326.6,328.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1053/*"},{ua:"XT1053"}],dpi:[315.3,316.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1562/*"},{ua:"XT1562"}],dpi:[403.4,402.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/Nexus 6/*"},{ua:"Nexus 6 B"}],dpi:[494.3,489.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1063/*"},{ua:"XT1063"}],dpi:[295,296.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1064/*"},{ua:"XT1064"}],dpi:[295,295.6],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1092/*"},{ua:"XT1092"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1095/*"},{ua:"XT1095"}],dpi:[422,423.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/G4/*"},{ua:"Moto G (4)"}],dpi:401,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/A0001/*"},{ua:"A0001"}],dpi:[403.4,401],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE E1001/*"},{ua:"ONE E1001"}],dpi:[442.4,441.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE E1003/*"},{ua:"ONE E1003"}],dpi:[442.4,441.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE E1005/*"},{ua:"ONE E1005"}],dpi:[442.4,441.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A2001/*"},{ua:"ONE A2001"}],dpi:[391.9,405.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A2003/*"},{ua:"ONE A2003"}],dpi:[391.9,405.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A2005/*"},{ua:"ONE A2005"}],dpi:[391.9,405.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A3000/*"},{ua:"ONEPLUS A3000"}],dpi:401,bw:3,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A3003/*"},{ua:"ONEPLUS A3003"}],dpi:401,bw:3,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A3010/*"},{ua:"ONEPLUS A3010"}],dpi:401,bw:3,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A5000/*"},{ua:"ONEPLUS A5000 "}],dpi:[403.411,399.737],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A5010/*"},{ua:"ONEPLUS A5010"}],dpi:[403,400],bw:2,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A6000/*"},{ua:"ONEPLUS A6000"}],dpi:401,bw:3,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A6003/*"},{ua:"ONEPLUS A6003"}],dpi:401,bw:3,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A6010/*"},{ua:"ONEPLUS A6010"}],dpi:401,bw:2,ac:500},{type:"android",rules:[{mdmh:"OnePlus/*/ONEPLUS A6013/*"},{ua:"ONEPLUS A6013"}],dpi:401,bw:2,ac:500},{type:"android",rules:[{mdmh:"OPPO/*/X909/*"},{ua:"X909"}],dpi:[442.4,444.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9082/*"},{ua:"GT-I9082"}],dpi:[184.7,185.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G360P/*"},{ua:"SM-G360P"}],dpi:[196.7,205.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Nexus S/*"},{ua:"Nexus S"}],dpi:[234.5,229.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[304.8,303.9],bw:5,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-T230NU/*"},{ua:"SM-T230NU"}],dpi:216,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SGH-T399/*"},{ua:"SGH-T399"}],dpi:[217.7,231.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SGH-M919/*"},{ua:"SGH-M919"}],dpi:[440.8,437.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N9005/*"},{ua:"SM-N9005"}],dpi:[386.4,387],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SM-N900A/*"},{ua:"SAMSUNG-SM-N900A"}],dpi:[386.4,387.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9500/*"},{ua:"GT-I9500"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/GT-I9505/*"},{ua:"GT-I9505"}],dpi:439.4,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900F/*"},{ua:"SM-G900F"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900M/*"},{ua:"SM-G900M"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G800F/*"},{ua:"SM-G800F"}],dpi:326.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G906S/*"},{ua:"SM-G906S"}],dpi:[562.7,572.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[306.7,304.8],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-T535/*"},{ua:"SM-T535"}],dpi:[142.6,136.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-N920C/*"},{ua:"SM-N920C"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N920P/*"},{ua:"SM-N920P"}],dpi:[386.3655,390.144],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N920W8/*"},{ua:"SM-N920W8"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300I/*"},{ua:"GT-I9300I"}],dpi:[304.8,305.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9195/*"},{ua:"GT-I9195"}],dpi:[249.4,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SPH-L520/*"},{ua:"SPH-L520"}],dpi:[249.4,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SGH-I717/*"},{ua:"SAMSUNG-SGH-I717"}],dpi:285.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SPH-D710/*"},{ua:"SPH-D710"}],dpi:[217.7,204.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-N7100/*"},{ua:"GT-N7100"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SCH-I605/*"},{ua:"SCH-I605"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Galaxy Nexus/*"},{ua:"Galaxy Nexus"}],dpi:[315.3,314.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910H/*"},{ua:"SM-N910H"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910C/*"},{ua:"SM-N910C"}],dpi:[515.2,520.2],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G130M/*"},{ua:"SM-G130M"}],dpi:[165.9,164.8],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G928I/*"},{ua:"SM-G928I"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G920F/*"},{ua:"SM-G920F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G920P/*"},{ua:"SM-G920P"}],dpi:[522.5,577],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G925F/*"},{ua:"SM-G925F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G925V/*"},{ua:"SM-G925V"}],dpi:[522.5,576.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G930F/*"},{ua:"SM-G930F"}],dpi:576.6,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G935F/*"},{ua:"SM-G935F"}],dpi:533,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G950F/*"},{ua:"SM-G950F"}],dpi:[562.707,565.293],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G955U/*"},{ua:"SM-G955U"}],dpi:[522.514,525.762],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G955F/*"},{ua:"SM-G955F"}],dpi:[522.514,525.762],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G960F/*"},{ua:"SM-G960F"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G9600/*"},{ua:"SM-G9600"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G960T/*"},{ua:"SM-G960T"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G960N/*"},{ua:"SM-G960N"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G960U/*"},{ua:"SM-G960U"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G9608/*"},{ua:"SM-G9608"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G960FD/*"},{ua:"SM-G960FD"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G960W/*"},{ua:"SM-G960W"}],dpi:[569.575,571.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G965F/*"},{ua:"SM-G965F"}],dpi:529,bw:2,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/C6903/*"},{ua:"C6903"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"Sony/*/D6653/*"},{ua:"D6653"}],dpi:[428.6,427.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6653/*"},{ua:"E6653"}],dpi:[428.6,425.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6853/*"},{ua:"E6853"}],dpi:[403.4,401.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/SGP321/*"},{ua:"SGP321"}],dpi:[224.7,224.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"TCT/*/ALCATEL ONE TOUCH Fierce/*"},{ua:"ALCATEL ONE TOUCH Fierce"}],dpi:[240,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"THL/*/thl 5000/*"},{ua:"thl 5000"}],dpi:[480,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Fly/*/IQ4412/*"},{ua:"IQ4412"}],dpi:307.9,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"ZTE/*/ZTE Blade L2/*"},{ua:"ZTE Blade L2"}],dpi:240,bw:3,ac:500},{type:"android",rules:[{mdmh:"BENEVE/*/VR518/*"},{ua:"VR518"}],dpi:480,bw:3,ac:500},{type:"ios",rules:[{res:[640,960]}],dpi:[325.1,328.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[640,1136]}],dpi:[317.1,320.2],bw:3,ac:1e3},{type:"ios",rules:[{res:[750,1334]}],dpi:326.4,bw:4,ac:1e3},{type:"ios",rules:[{res:[1242,2208]}],dpi:[453.6,458.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[1125,2001]}],dpi:[410.9,415.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[1125,2436]}],dpi:458,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"Huawei/*/EML-L29/*"},{ua:"EML-L29"}],dpi:428,bw:3.45,ac:500},{type:"android",rules:[{mdmh:"Nokia/*/Nokia 7.1/*"},{ua:"Nokia 7.1"}],dpi:[432,431.9],bw:3,ac:500},{type:"ios",rules:[{res:[1242,2688]}],dpi:458,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G570M/*"},{ua:"SM-G570M"}],dpi:320,bw:3.684,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G970F/*"},{ua:"SM-G970F"}],dpi:438,bw:2.281,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G973F/*"},{ua:"SM-G973F"}],dpi:550,bw:2.002,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G975F/*"},{ua:"SM-G975F"}],dpi:522,bw:2.054,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G977F/*"},{ua:"SM-G977F"}],dpi:505,bw:2.334,ac:500},{type:"ios",rules:[{res:[828,1792]}],dpi:326,bw:5,ac:500}],je={format:We,last_updated:Re,devices:le};function Ge(v,b){if(this.dpdb=je,this.recalculateDeviceParams_(),v){this.onDeviceParamsUpdated=b;var _=new XMLHttpRequest,T=this;_.open("GET",v,!0),_.addEventListener("load",function(){T.loading=!1,_.status>=200&&_.status<=299?(T.dpdb=JSON.parse(_.response),T.recalculateDeviceParams_()):console.error("Error loading online DPDB!")}),_.send()}}Ge.prototype.getDeviceParams=function(){return this.deviceParams},Ge.prototype.recalculateDeviceParams_=function(){var v=this.calcDeviceParams_();v?(this.deviceParams=v,this.onDeviceParamsUpdated&&this.onDeviceParamsUpdated(this.deviceParams)):console.error("Failed to recalculate device parameters.")},Ge.prototype.calcDeviceParams_=function(){var v=this.dpdb;if(!v)return console.error("DPDB not available."),null;if(v.format!=1)return console.error("DPDB has unexpected format version."),null;if(!v.devices||!v.devices.length)return console.error("DPDB does not have a devices section."),null;var b=navigator.userAgent||navigator.vendor||window.opera,_=x(),T=S();if(!v.devices)return console.error("DPDB has no devices section."),null;for(var P=0;P<v.devices.length;P++){var U=v.devices[P];if(!U.rules){console.warn("Device["+P+"] has no rules section.");continue}if(U.type!="ios"&&U.type!="android"){console.warn("Device["+P+"] has invalid type.");continue}if(u()==(U.type=="ios")){for(var G=!1,he=0;he<U.rules.length;he++){var ue=U.rules[he];if(this.ruleMatches_(ue,b,_,T)){G=!0;break}}if(G){var Y=U.dpi[0]||U.dpi,ae=U.dpi[1]||U.dpi;return new Xe({xdpi:Y,ydpi:ae,bevelMm:U.bw})}}}return console.warn("No DPDB device match."),null},Ge.prototype.ruleMatches_=function(v,b,_,T){if(!v.ua&&!v.res||(v.ua&&v.ua.substring(0,2)==="SM"&&(v.ua=v.ua.substring(0,7)),v.ua&&b.indexOf(v.ua)<0))return!1;if(v.res){if(!v.res[0]||!v.res[1])return!1;var P=v.res[0],U=v.res[1];if(Math.min(_,T)!=Math.min(P,U)||Math.max(_,T)!=Math.max(P,U))return!1}return!0};function Xe(v){this.xdpi=v.xdpi,this.ydpi=v.ydpi,this.bevelMm=v.bevelMm}function $e(v,b){this.set(v,b)}$e.prototype.set=function(v,b){this.sample=v,this.timestampS=b},$e.prototype.copy=function(v){this.set(v.sample,v.timestampS)};function Oe(v,b){this.kFilter=v,this.isDebug=b,this.currentAccelMeasurement=new $e,this.currentGyroMeasurement=new $e,this.previousGyroMeasurement=new $e,u()?this.filterQ=new nt(-1,0,0,1):this.filterQ=new nt(1,0,0,1),this.previousFilterQ=new nt,this.previousFilterQ.copy(this.filterQ),this.accelQ=new nt,this.isOrientationInitialized=!1,this.estimatedGravity=new ut,this.measuredGravity=new ut,this.gyroIntegralQ=new nt}Oe.prototype.addAccelMeasurement=function(v,b){this.currentAccelMeasurement.set(v,b)},Oe.prototype.addGyroMeasurement=function(v,b){this.currentGyroMeasurement.set(v,b);var _=b-this.previousGyroMeasurement.timestampS;A(_)&&this.run_(),this.previousGyroMeasurement.copy(this.currentGyroMeasurement)},Oe.prototype.run_=function(){if(!this.isOrientationInitialized){this.accelQ=this.accelToQuaternion_(this.currentAccelMeasurement.sample),this.previousFilterQ.copy(this.accelQ),this.isOrientationInitialized=!0;return}var v=this.currentGyroMeasurement.timestampS-this.previousGyroMeasurement.timestampS,b=this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample,v);this.gyroIntegralQ.multiply(b),this.filterQ.copy(this.previousFilterQ),this.filterQ.multiply(b);var _=new nt;_.copy(this.filterQ),_.inverse(),this.estimatedGravity.set(0,0,-1),this.estimatedGravity.applyQuaternion(_),this.estimatedGravity.normalize(),this.measuredGravity.copy(this.currentAccelMeasurement.sample),this.measuredGravity.normalize();var T=new nt;T.setFromUnitVectors(this.estimatedGravity,this.measuredGravity),T.inverse(),this.isDebug&&console.log("Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)",ft*Z(T),this.estimatedGravity.x.toFixed(1),this.estimatedGravity.y.toFixed(1),this.estimatedGravity.z.toFixed(1),this.measuredGravity.x.toFixed(1),this.measuredGravity.y.toFixed(1),this.measuredGravity.z.toFixed(1));var P=new nt;P.copy(this.filterQ),P.multiply(T),this.filterQ.slerp(P,1-this.kFilter),this.previousFilterQ.copy(this.filterQ)},Oe.prototype.getOrientation=function(){return this.filterQ},Oe.prototype.accelToQuaternion_=function(v){var b=new ut;b.copy(v),b.normalize();var _=new nt;return _.setFromUnitVectors(new ut(0,0,-1),b),_.inverse(),_},Oe.prototype.gyroToQuaternionDelta_=function(v,b){var _=new nt,T=new ut;return T.copy(v),T.normalize(),_.setFromAxisAngle(T,v.length()*b),_};function ct(v,b){this.predictionTimeS=v,this.isDebug=b,this.previousQ=new nt,this.previousTimestampS=null,this.deltaQ=new nt,this.outQ=new nt}ct.prototype.getPrediction=function(v,b,_){if(!this.previousTimestampS)return this.previousQ.copy(v),this.previousTimestampS=_,v;var T=new ut;T.copy(b),T.normalize();var P=b.length();if(P<Qe*20)return this.isDebug&&console.log("Moving slowly, at %s deg/s: no prediction",(ft*P).toFixed(1)),this.outQ.copy(v),this.previousQ.copy(v),this.outQ;var U=P*this.predictionTimeS;return this.deltaQ.setFromAxisAngle(T,U),this.outQ.copy(this.previousQ),this.outQ.multiply(this.deltaQ),this.previousQ.copy(v),this.previousTimestampS=_,this.outQ};function dt(v,b,_,T){this.yawOnly=_,this.accelerometer=new ut,this.gyroscope=new ut,this.filter=new Oe(v,T),this.posePredictor=new ct(b,T),this.isFirefoxAndroid=d(),this.isIOS=u();var P=f();this.isDeviceMotionInRadians=!this.isIOS&&P&&P<66,this.isWithoutDeviceMotion=y()||m(),this.filterToWorldQ=new nt,u()?this.filterToWorldQ.setFromAxisAngle(new ut(1,0,0),Math.PI/2):this.filterToWorldQ.setFromAxisAngle(new ut(1,0,0),-Math.PI/2),this.inverseWorldToScreenQ=new nt,this.worldToScreenQ=new nt,this.originalPoseAdjustQ=new nt,this.originalPoseAdjustQ.setFromAxisAngle(new ut(0,0,1),-window.orientation*Math.PI/180),this.setScreenTransform_(),g()&&this.filterToWorldQ.multiply(this.inverseWorldToScreenQ),this.resetQ=new nt,this.orientationOut_=new Float32Array(4),this.start()}dt.prototype.getPosition=function(){return null},dt.prototype.getOrientation=function(){var v=void 0;if(this.isWithoutDeviceMotion&&this._deviceOrientationQ){this.deviceOrientationFixQ=this.deviceOrientationFixQ||function(){var P=new nt().setFromAxisAngle(new ut(0,0,-1),0),U=new nt;return window.orientation===-90?U.setFromAxisAngle(new ut(0,1,0),Math.PI/-2):U.setFromAxisAngle(new ut(0,1,0),Math.PI/2),P.multiply(U)}(),this.deviceOrientationFilterToWorldQ=this.deviceOrientationFilterToWorldQ||function(){var P=new nt;return P.setFromAxisAngle(new ut(1,0,0),-Math.PI/2),P}(),v=this._deviceOrientationQ;var _=new nt;return _.copy(v),_.multiply(this.deviceOrientationFilterToWorldQ),_.multiply(this.resetQ),_.multiply(this.worldToScreenQ),_.multiplyQuaternions(this.deviceOrientationFixQ,_),this.yawOnly&&(_.x=0,_.z=0,_.normalize()),this.orientationOut_[0]=_.x,this.orientationOut_[1]=_.y,this.orientationOut_[2]=_.z,this.orientationOut_[3]=_.w,this.orientationOut_}else{var b=this.filter.getOrientation();v=this.posePredictor.getPrediction(b,this.gyroscope,this.previousTimestampS)}var _=new nt;return _.copy(this.filterToWorldQ),_.multiply(this.resetQ),_.multiply(v),_.multiply(this.worldToScreenQ),this.yawOnly&&(_.x=0,_.z=0,_.normalize()),this.orientationOut_[0]=_.x,this.orientationOut_[1]=_.y,this.orientationOut_[2]=_.z,this.orientationOut_[3]=_.w,this.orientationOut_},dt.prototype.resetPose=function(){this.resetQ.copy(this.filter.getOrientation()),this.resetQ.x=0,this.resetQ.y=0,this.resetQ.z*=-1,this.resetQ.normalize(),g()&&this.resetQ.multiply(this.inverseWorldToScreenQ),this.resetQ.multiply(this.originalPoseAdjustQ)},dt.prototype.onDeviceOrientation_=function(v){this._deviceOrientationQ=this._deviceOrientationQ||new nt;var b=v.alpha,_=v.beta,T=v.gamma;b=(b||0)*Math.PI/180,_=(_||0)*Math.PI/180,T=(T||0)*Math.PI/180,this._deviceOrientationQ.setFromEulerYXZ(_,b,-T)},dt.prototype.onDeviceMotion_=function(v){this.updateDeviceMotion_(v)},dt.prototype.updateDeviceMotion_=function(v){var b=v.accelerationIncludingGravity,_=v.rotationRate,T=v.timeStamp/1e3,P=T-this.previousTimestampS;if(P<0){ie("fusion-pose-sensor:invalid:non-monotonic","Invalid timestamps detected: non-monotonic timestamp from devicemotion"),this.previousTimestampS=T;return}else if(P<=i||P>a){ie("fusion-pose-sensor:invalid:outside-threshold","Invalid timestamps detected: Timestamp from devicemotion outside expected range."),this.previousTimestampS=T;return}this.accelerometer.set(-b.x,-b.y,-b.z),_&&(p()?this.gyroscope.set(-_.beta,_.alpha,_.gamma):this.gyroscope.set(_.alpha,_.beta,_.gamma),this.isDeviceMotionInRadians||this.gyroscope.multiplyScalar(Math.PI/180),this.filter.addGyroMeasurement(this.gyroscope,T)),this.filter.addAccelMeasurement(this.accelerometer,T),this.previousTimestampS=T},dt.prototype.onOrientationChange_=function(v){this.setScreenTransform_()},dt.prototype.onMessage_=function(v){var b=v.data;if(!(!b||!b.type)){var _=b.type.toLowerCase();_==="devicemotion"&&this.updateDeviceMotion_(b.deviceMotionEvent)}},dt.prototype.setScreenTransform_=function(){switch(this.worldToScreenQ.set(0,0,0,1),window.orientation){case 0:break;case 90:this.worldToScreenQ.setFromAxisAngle(new ut(0,0,1),-Math.PI/2);break;case-90:this.worldToScreenQ.setFromAxisAngle(new ut(0,0,1),Math.PI/2);break}this.inverseWorldToScreenQ.copy(this.worldToScreenQ),this.inverseWorldToScreenQ.inverse()},dt.prototype.start=function(){this.onDeviceMotionCallback_=this.onDeviceMotion_.bind(this),this.onOrientationChangeCallback_=this.onOrientationChange_.bind(this),this.onMessageCallback_=this.onMessage_.bind(this),this.onDeviceOrientationCallback_=this.onDeviceOrientation_.bind(this),u()&&X()&&window.addEventListener("message",this.onMessageCallback_),window.addEventListener("orientationchange",this.onOrientationChangeCallback_),this.isWithoutDeviceMotion?window.addEventListener("deviceorientation",this.onDeviceOrientationCallback_):window.addEventListener("devicemotion",this.onDeviceMotionCallback_)},dt.prototype.stop=function(){window.removeEventListener("devicemotion",this.onDeviceMotionCallback_),window.removeEventListener("deviceorientation",this.onDeviceOrientationCallback_),window.removeEventListener("orientationchange",this.onOrientationChangeCallback_),window.removeEventListener("message",this.onMessageCallback_)};var H=60,Le=new ut(1,0,0),oe=new ut(0,0,1),Ee=new nt;Ee.setFromAxisAngle(Le,-Math.PI/2),Ee.multiply(new nt().setFromAxisAngle(oe,Math.PI/2));var Fe=function(){function v(b){t(this,v),this.config=b,this.sensor=null,this.fusionSensor=null,this._out=new Float32Array(4),this.api=null,this.errors=[],this._sensorQ=new nt,this._outQ=new nt,this._onSensorRead=this._onSensorRead.bind(this),this._onSensorError=this._onSensorError.bind(this),this.init()}return r(v,[{key:"init",value:function(){var _=null;try{_=new RelativeOrientationSensor({frequency:H,referenceFrame:"screen"}),_.addEventListener("error",this._onSensorError)}catch(T){this.errors.push(T),T.name==="SecurityError"?(console.error("Cannot construct sensors due to the Feature Policy"),console.warn('Attempting to fall back using "devicemotion"; however this will fail in the future without correct permissions.'),this.useDeviceMotion()):T.name==="ReferenceError"?this.useDeviceMotion():console.error(T)}_&&(this.api="sensor",this.sensor=_,this.sensor.addEventListener("reading",this._onSensorRead),this.sensor.start())}},{key:"useDeviceMotion",value:function(){this.api="devicemotion",this.fusionSensor=new dt(this.config.K_FILTER,this.config.PREDICTION_TIME_S,this.config.YAW_ONLY,this.config.DEBUG),this.sensor&&(this.sensor.removeEventListener("reading",this._onSensorRead),this.sensor.removeEventListener("error",this._onSensorError),this.sensor=null)}},{key:"getOrientation",value:function(){if(this.fusionSensor)return this.fusionSensor.getOrientation();if(!this.sensor||!this.sensor.quaternion)return this._out[0]=this._out[1]=this._out[2]=0,this._out[3]=1,this._out;var _=this.sensor.quaternion;this._sensorQ.set(_[0],_[1],_[2],_[3]);var T=this._outQ;return T.copy(Ee),T.multiply(this._sensorQ),this.config.YAW_ONLY&&(T.x=T.z=0,T.normalize()),this._out[0]=T.x,this._out[1]=T.y,this._out[2]=T.z,this._out[3]=T.w,this._out}},{key:"_onSensorError",value:function(_){this.errors.push(_.error),_.error.name==="NotAllowedError"?console.error("Permission to access sensor was denied"):_.error.name==="NotReadableError"?console.error("Sensor could not be read"):console.error(_.error),this.useDeviceMotion()}},{key:"_onSensorRead",value:function(){}}]),v}(),xt="<svg width='198' height='240' viewBox='0 0 198 240' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd'><path d='M149.625 109.527l6.737 3.891v.886c0 .177.013.36.038.549.01.081.02.162.027.242.14 1.415.974 2.998 2.105 3.999l5.72 5.062.081-.09s4.382-2.53 5.235-3.024l25.97 14.993v54.001c0 .771-.386 1.217-.948 1.217-.233 0-.495-.076-.772-.236l-23.967-13.838-.014.024-27.322 15.775-.85-1.323c-4.731-1.529-9.748-2.74-14.951-3.61a.27.27 0 0 0-.007.024l-5.067 16.961-7.891 4.556-.037-.063v27.59c0 .772-.386 1.217-.948 1.217-.232 0-.495-.076-.772-.236l-42.473-24.522c-.95-.549-1.72-1.877-1.72-2.967v-1.035l-.021.047a5.111 5.111 0 0 0-1.816-.399 5.682 5.682 0 0 0-.546.001 13.724 13.724 0 0 1-1.918-.041c-1.655-.153-3.2-.6-4.404-1.296l-46.576-26.89.005.012-10.278-18.75c-1.001-1.827-.241-4.216 1.698-5.336l56.011-32.345a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.659 3.227 1.853l.005-.003.227.413-.006.004a9.63 9.63 0 0 0 1.477 2.018l.277.27c1.914 1.85 4.468 2.801 7.113 2.801 1.949 0 3.948-.517 5.775-1.572.013 0 7.319-4.219 7.319-4.219a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.658 3.226 1.853l3.25 5.928.022-.018 6.785 3.917-.105-.182 46.881-26.965m0-1.635c-.282 0-.563.073-.815.218l-46.169 26.556-5.41-3.124-3.005-5.481c-.913-1.667-2.699-2.702-4.66-2.703-1.011 0-2.02.274-2.917.792a3825 3825 0 0 1-7.275 4.195l-.044.024a9.937 9.937 0 0 1-4.957 1.353c-2.292 0-4.414-.832-5.976-2.342l-.252-.245a7.992 7.992 0 0 1-1.139-1.534 1.379 1.379 0 0 0-.06-.122l-.227-.414a1.718 1.718 0 0 0-.095-.154c-.938-1.574-2.673-2.545-4.571-2.545-1.011 0-2.02.274-2.917.792L3.125 155.502c-2.699 1.559-3.738 4.94-2.314 7.538l10.278 18.75c.177.323.448.563.761.704l46.426 26.804c1.403.81 3.157 1.332 5.072 1.508a15.661 15.661 0 0 0 2.146.046 4.766 4.766 0 0 1 .396 0c.096.004.19.011.283.022.109 1.593 1.159 3.323 2.529 4.114l42.472 24.522c.524.302 1.058.455 1.59.455 1.497 0 2.583-1.2 2.583-2.852v-26.562l7.111-4.105a1.64 1.64 0 0 0 .749-.948l4.658-15.593c4.414.797 8.692 1.848 12.742 3.128l.533.829a1.634 1.634 0 0 0 2.193.531l26.532-15.317L193 192.433c.523.302 1.058.455 1.59.455 1.497 0 2.583-1.199 2.583-2.852v-54.001c0-.584-.312-1.124-.818-1.416l-25.97-14.993a1.633 1.633 0 0 0-1.636.001c-.606.351-2.993 1.73-4.325 2.498l-4.809-4.255c-.819-.725-1.461-1.933-1.561-2.936a7.776 7.776 0 0 0-.033-.294 2.487 2.487 0 0 1-.023-.336v-.886c0-.584-.312-1.123-.817-1.416l-6.739-3.891a1.633 1.633 0 0 0-.817-.219' fill='#455A64'/><path d='M96.027 132.636l46.576 26.891c1.204.695 1.979 1.587 2.242 2.541l-.01.007-81.374 46.982h-.001c-1.654-.152-3.199-.6-4.403-1.295l-46.576-26.891 83.546-48.235' fill='#FAFAFA'/><path d='M63.461 209.174c-.008 0-.015 0-.022-.002-1.693-.156-3.228-.609-4.441-1.309l-46.576-26.89a.118.118 0 0 1 0-.203l83.546-48.235a.117.117 0 0 1 .117 0l46.576 26.891c1.227.708 2.021 1.612 2.296 2.611a.116.116 0 0 1-.042.124l-.021.016-81.375 46.981a.11.11 0 0 1-.058.016zm-50.747-28.303l46.401 26.79c1.178.68 2.671 1.121 4.32 1.276l81.272-46.922c-.279-.907-1.025-1.73-2.163-2.387l-46.517-26.857-83.313 48.1z' fill='#607D8B'/><path d='M148.327 165.471a5.85 5.85 0 0 1-.546.001c-1.894-.083-3.302-1.038-3.145-2.132a2.693 2.693 0 0 0-.072-1.105l-81.103 46.822c.628.058 1.272.073 1.918.042.182-.009.364-.009.546-.001 1.894.083 3.302 1.038 3.145 2.132l79.257-45.759' fill='#FFF'/><path d='M69.07 211.347a.118.118 0 0 1-.115-.134c.045-.317-.057-.637-.297-.925-.505-.61-1.555-1.022-2.738-1.074a5.966 5.966 0 0 0-.535.001 14.03 14.03 0 0 1-1.935-.041.117.117 0 0 1-.103-.092.116.116 0 0 1 .055-.126l81.104-46.822a.117.117 0 0 1 .171.07c.104.381.129.768.074 1.153-.045.316.057.637.296.925.506.61 1.555 1.021 2.739 1.073.178.008.357.008.535-.001a.117.117 0 0 1 .064.218l-79.256 45.759a.114.114 0 0 1-.059.016zm-3.405-2.372c.089 0 .177.002.265.006 1.266.056 2.353.488 2.908 1.158.227.274.35.575.36.882l78.685-45.429c-.036 0-.072-.001-.107-.003-1.267-.056-2.354-.489-2.909-1.158-.282-.34-.402-.724-.347-1.107a2.604 2.604 0 0 0-.032-.91L63.846 208.97a13.91 13.91 0 0 0 1.528.012c.097-.005.194-.007.291-.007z' fill='#607D8B'/><path d='M2.208 162.134c-1.001-1.827-.241-4.217 1.698-5.337l56.011-32.344c1.939-1.12 4.324-.546 5.326 1.281l.232.41a9.344 9.344 0 0 0 1.47 2.021l.278.27c3.325 3.214 8.583 3.716 12.888 1.23l7.319-4.22c1.94-1.119 4.324-.546 5.325 1.282l3.25 5.928-83.519 48.229-10.278-18.75z' fill='#FAFAFA'/><path d='M12.486 181.001a.112.112 0 0 1-.031-.005.114.114 0 0 1-.071-.056L2.106 162.19c-1.031-1.88-.249-4.345 1.742-5.494l56.01-32.344a4.328 4.328 0 0 1 2.158-.588c1.415 0 2.65.702 3.311 1.882.01.008.018.017.024.028l.227.414a.122.122 0 0 1 .013.038 9.508 9.508 0 0 0 1.439 1.959l.275.266c1.846 1.786 4.344 2.769 7.031 2.769 1.977 0 3.954-.538 5.717-1.557a.148.148 0 0 1 .035-.013l7.284-4.206a4.321 4.321 0 0 1 2.157-.588c1.427 0 2.672.716 3.329 1.914l3.249 5.929a.116.116 0 0 1-.044.157l-83.518 48.229a.116.116 0 0 1-.059.016zm49.53-57.004c-.704 0-1.41.193-2.041.557l-56.01 32.345c-1.882 1.086-2.624 3.409-1.655 5.179l10.221 18.645 83.317-48.112-3.195-5.829c-.615-1.122-1.783-1.792-3.124-1.792a4.08 4.08 0 0 0-2.04.557l-7.317 4.225a.148.148 0 0 1-.035.013 11.7 11.7 0 0 1-5.801 1.569c-2.748 0-5.303-1.007-7.194-2.835l-.278-.27a9.716 9.716 0 0 1-1.497-2.046.096.096 0 0 1-.013-.037l-.191-.347a.11.11 0 0 1-.023-.029c-.615-1.123-1.783-1.793-3.124-1.793z' fill='#607D8B'/><path d='M42.434 155.808c-2.51-.001-4.697-1.258-5.852-3.365-1.811-3.304-.438-7.634 3.059-9.654l12.291-7.098a7.599 7.599 0 0 1 3.789-1.033c2.51 0 4.697 1.258 5.852 3.365 1.811 3.304.439 7.634-3.059 9.654l-12.291 7.098a7.606 7.606 0 0 1-3.789 1.033zm13.287-20.683a7.128 7.128 0 0 0-3.555.971l-12.291 7.098c-3.279 1.893-4.573 5.942-2.883 9.024 1.071 1.955 3.106 3.122 5.442 3.122a7.13 7.13 0 0 0 3.556-.97l12.291-7.098c3.279-1.893 4.572-5.942 2.883-9.024-1.072-1.955-3.106-3.123-5.443-3.123z' fill='#607D8B'/><path d='M149.588 109.407l6.737 3.89v.887c0 .176.013.36.037.549.011.081.02.161.028.242.14 1.415.973 2.998 2.105 3.999l7.396 6.545c.177.156.358.295.541.415 1.579 1.04 2.95.466 3.062-1.282.049-.784.057-1.595.023-2.429l-.003-.16v-1.151l25.987 15.003v54c0 1.09-.77 1.53-1.72.982l-42.473-24.523c-.95-.548-1.72-1.877-1.72-2.966v-34.033' fill='#FAFAFA'/><path d='M194.553 191.25c-.257 0-.54-.085-.831-.253l-42.472-24.521c-.981-.567-1.779-1.943-1.779-3.068v-34.033h.234v34.033c0 1.051.745 2.336 1.661 2.866l42.473 24.521c.424.245.816.288 1.103.122.285-.164.442-.52.442-1.002v-53.933l-25.753-14.868.003 1.106c.034.832.026 1.654-.024 2.439-.054.844-.396 1.464-.963 1.746-.619.309-1.45.173-2.28-.373a5.023 5.023 0 0 1-.553-.426l-7.397-6.544c-1.158-1.026-1.999-2.625-2.143-4.076a9.624 9.624 0 0 0-.027-.238 4.241 4.241 0 0 1-.038-.564v-.82l-6.68-3.856.117-.202 6.738 3.89.058.034v.954c0 .171.012.351.036.533.011.083.021.165.029.246.138 1.395.948 2.935 2.065 3.923l7.397 6.545c.173.153.35.289.527.406.758.499 1.504.63 2.047.359.49-.243.786-.795.834-1.551.05-.778.057-1.591.024-2.417l-.004-.163v-1.355l.175.1 25.987 15.004.059.033v54.068c0 .569-.198.996-.559 1.204a1.002 1.002 0 0 1-.506.131' fill='#607D8B'/><path d='M145.685 163.161l24.115 13.922-25.978 14.998-1.462-.307c-6.534-2.17-13.628-3.728-21.019-4.616-4.365-.524-8.663 1.096-9.598 3.62a2.746 2.746 0 0 0-.011 1.928c1.538 4.267 4.236 8.363 7.995 12.135l.532.845-25.977 14.997-24.115-13.922 75.518-43.6' fill='#FFF'/><path d='M94.282 220.818l-.059-.033-24.29-14.024.175-.101 75.577-43.634.058.033 24.29 14.024-26.191 15.122-.045-.01-1.461-.307c-6.549-2.174-13.613-3.725-21.009-4.614a13.744 13.744 0 0 0-1.638-.097c-3.758 0-7.054 1.531-7.837 3.642a2.62 2.62 0 0 0-.01 1.848c1.535 4.258 4.216 8.326 7.968 12.091l.016.021.526.835.006.01.064.102-.105.061-25.977 14.998-.058.033zm-23.881-14.057l23.881 13.788 24.802-14.32c.546-.315.846-.489 1.017-.575l-.466-.74c-3.771-3.787-6.467-7.881-8.013-12.168a2.851 2.851 0 0 1 .011-2.008c.815-2.199 4.203-3.795 8.056-3.795.557 0 1.117.033 1.666.099 7.412.891 14.491 2.445 21.041 4.621.836.175 1.215.254 1.39.304l25.78-14.884-23.881-13.788-75.284 43.466z' fill='#607D8B'/><path d='M167.23 125.979v50.871l-27.321 15.773-6.461-14.167c-.91-1.996-3.428-1.738-5.624.574a10.238 10.238 0 0 0-2.33 4.018l-6.46 21.628-27.322 15.774v-50.871l75.518-43.6' fill='#FFF'/><path d='M91.712 220.567a.127.127 0 0 1-.059-.016.118.118 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.519-43.6a.117.117 0 0 1 .175.101v50.871c0 .041-.023.08-.059.1l-27.321 15.775a.118.118 0 0 1-.094.01.12.12 0 0 1-.071-.063l-6.46-14.168c-.375-.822-1.062-1.275-1.934-1.275-1.089 0-2.364.686-3.5 1.881a10.206 10.206 0 0 0-2.302 3.972l-6.46 21.627a.118.118 0 0 1-.054.068L91.77 220.551a.12.12 0 0 1-.058.016zm.117-50.92v50.601l27.106-15.65 6.447-21.583a10.286 10.286 0 0 1 2.357-4.065c1.18-1.242 2.517-1.954 3.669-1.954.969 0 1.731.501 2.146 1.411l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M168.543 126.213v50.87l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.624.574a10.248 10.248 0 0 0-2.33 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6' fill='#FFF'/><path d='M93.025 220.8a.123.123 0 0 1-.059-.015.12.12 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.518-43.6a.112.112 0 0 1 .117 0c.036.02.059.059.059.1v50.871a.116.116 0 0 1-.059.101l-27.321 15.774a.111.111 0 0 1-.094.01.115.115 0 0 1-.071-.062l-6.46-14.168c-.375-.823-1.062-1.275-1.935-1.275-1.088 0-2.363.685-3.499 1.881a10.19 10.19 0 0 0-2.302 3.971l-6.461 21.628a.108.108 0 0 1-.053.067l-27.322 15.775a.12.12 0 0 1-.058.015zm.117-50.919v50.6l27.106-15.649 6.447-21.584a10.293 10.293 0 0 1 2.357-4.065c1.179-1.241 2.516-1.954 3.668-1.954.969 0 1.732.502 2.147 1.412l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M169.8 177.083l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.625.574a10.246 10.246 0 0 0-2.329 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6v50.87z' fill='#FAFAFA'/><path d='M94.282 220.917a.234.234 0 0 1-.234-.233v-50.871c0-.083.045-.161.117-.202l75.518-43.601a.234.234 0 1 1 .35.202v50.871a.233.233 0 0 1-.116.202l-27.322 15.775a.232.232 0 0 1-.329-.106l-6.461-14.168c-.36-.789-.992-1.206-1.828-1.206-1.056 0-2.301.672-3.415 1.844a10.099 10.099 0 0 0-2.275 3.924l-6.46 21.628a.235.235 0 0 1-.107.136l-27.322 15.774a.23.23 0 0 1-.116.031zm.233-50.969v50.331l26.891-15.525 6.434-21.539a10.41 10.41 0 0 1 2.384-4.112c1.201-1.265 2.569-1.991 3.753-1.991 1.018 0 1.818.526 2.253 1.48l6.354 13.934 26.982-15.578v-50.331l-75.051 43.331z' fill='#607D8B'/><path d='M109.894 199.943c-1.774 0-3.241-.725-4.244-2.12a.224.224 0 0 1 .023-.294.233.233 0 0 1 .301-.023c.78.547 1.705.827 2.75.827 1.323 0 2.754-.439 4.256-1.306 5.311-3.067 9.631-10.518 9.631-16.611 0-1.927-.442-3.56-1.278-4.724a.232.232 0 0 1 .323-.327c1.671 1.172 2.591 3.381 2.591 6.219 0 6.242-4.426 13.863-9.865 17.003-1.574.908-3.084 1.356-4.488 1.356zm-2.969-1.542c.813.651 1.82.877 2.968.877h.001c1.321 0 2.753-.327 4.254-1.194 5.311-3.067 9.632-10.463 9.632-16.556 0-1.979-.463-3.599-1.326-4.761.411 1.035.625 2.275.625 3.635 0 6.243-4.426 13.883-9.865 17.023-1.574.909-3.084 1.317-4.49 1.317-.641 0-1.243-.149-1.799-.341z' fill='#607D8B'/><path d='M113.097 197.23c5.384-3.108 9.748-10.636 9.748-16.814 0-2.051-.483-3.692-1.323-4.86-1.784-1.252-4.374-1.194-7.257.47-5.384 3.108-9.748 10.636-9.748 16.814 0 2.051.483 3.692 1.323 4.86 1.784 1.252 4.374 1.194 7.257-.47' fill='#FAFAFA'/><path d='M108.724 198.614c-1.142 0-2.158-.213-3.019-.817-.021-.014-.04.014-.055-.007-.894-1.244-1.367-2.948-1.367-4.973 0-6.242 4.426-13.864 9.865-17.005 1.574-.908 3.084-1.363 4.49-1.363 1.142 0 2.158.309 3.018.913a.23.23 0 0 1 .056.056c.894 1.244 1.367 2.972 1.367 4.997 0 6.243-4.426 13.783-9.865 16.923-1.574.909-3.084 1.276-4.49 1.276zm-2.718-1.109c.774.532 1.688.776 2.718.776 1.323 0 2.754-.413 4.256-1.28 5.311-3.066 9.631-10.505 9.631-16.598 0-1.909-.434-3.523-1.255-4.685-.774-.533-1.688-.799-2.718-.799-1.323 0-2.755.441-4.256 1.308-5.311 3.066-9.631 10.506-9.631 16.599 0 1.909.434 3.517 1.255 4.679z' fill='#607D8B'/><path d='M149.318 114.262l-9.984 8.878 15.893 11.031 5.589-6.112-11.498-13.797' fill='#FAFAFA'/><path d='M169.676 120.84l-9.748 5.627c-3.642 2.103-9.528 2.113-13.147.024-3.62-2.089-3.601-5.488.041-7.591l9.495-5.608-6.729-3.885-81.836 47.071 45.923 26.514 3.081-1.779c.631-.365.869-.898.618-1.39-2.357-4.632-2.593-9.546-.683-14.262 5.638-13.92 24.509-24.815 48.618-28.07 8.169-1.103 16.68-.967 24.704.394.852.145 1.776.008 2.407-.357l3.081-1.778-25.825-14.91' fill='#FAFAFA'/><path d='M113.675 183.459a.47.47 0 0 1-.233-.062l-45.924-26.515a.468.468 0 0 1 .001-.809l81.836-47.071a.467.467 0 0 1 .466 0l6.729 3.885a.467.467 0 0 1-.467.809l-6.496-3.75-80.9 46.533 44.988 25.973 2.848-1.644c.192-.111.62-.409.435-.773-2.416-4.748-2.658-9.814-.7-14.65 2.806-6.927 8.885-13.242 17.582-18.263 8.657-4.998 19.518-8.489 31.407-10.094 8.198-1.107 16.79-.97 24.844.397.739.125 1.561.007 2.095-.301l2.381-1.374-25.125-14.506a.467.467 0 0 1 .467-.809l25.825 14.91a.467.467 0 0 1 0 .809l-3.081 1.779c-.721.417-1.763.575-2.718.413-7.963-1.351-16.457-1.486-24.563-.392-11.77 1.589-22.512 5.039-31.065 9.977-8.514 4.916-14.456 11.073-17.183 17.805-1.854 4.578-1.623 9.376.666 13.875.37.725.055 1.513-.8 2.006l-3.081 1.78a.476.476 0 0 1-.234.062' fill='#455A64'/><path d='M153.316 128.279c-2.413 0-4.821-.528-6.652-1.586-1.818-1.049-2.82-2.461-2.82-3.975 0-1.527 1.016-2.955 2.861-4.02l9.493-5.607a.233.233 0 1 1 .238.402l-9.496 5.609c-1.696.979-2.628 2.263-2.628 3.616 0 1.34.918 2.608 2.585 3.571 3.549 2.049 9.343 2.038 12.914-.024l9.748-5.628a.234.234 0 0 1 .234.405l-9.748 5.628c-1.858 1.072-4.296 1.609-6.729 1.609' fill='#607D8B'/><path d='M113.675 182.992l-45.913-26.508M113.675 183.342a.346.346 0 0 1-.175-.047l-45.913-26.508a.35.35 0 1 1 .35-.607l45.913 26.508a.35.35 0 0 1-.175.654' fill='#455A64'/><path d='M67.762 156.484v54.001c0 1.09.77 2.418 1.72 2.967l42.473 24.521c.95.549 1.72.11 1.72-.98v-54.001' fill='#FAFAFA'/><path d='M112.727 238.561c-.297 0-.62-.095-.947-.285l-42.473-24.521c-1.063-.613-1.895-2.05-1.895-3.27v-54.001a.35.35 0 1 1 .701 0v54.001c0 .96.707 2.18 1.544 2.663l42.473 24.522c.344.198.661.243.87.122.206-.119.325-.411.325-.799v-54.001a.35.35 0 1 1 .7 0v54.001c0 .655-.239 1.154-.675 1.406a1.235 1.235 0 0 1-.623.162' fill='#455A64'/><path d='M112.86 147.512h-.001c-2.318 0-4.499-.522-6.142-1.471-1.705-.984-2.643-2.315-2.643-3.749 0-1.445.952-2.791 2.68-3.788l12.041-6.953c1.668-.962 3.874-1.493 6.212-1.493 2.318 0 4.499.523 6.143 1.472 1.704.984 2.643 2.315 2.643 3.748 0 1.446-.952 2.791-2.68 3.789l-12.042 6.952c-1.668.963-3.874 1.493-6.211 1.493zm12.147-16.753c-2.217 0-4.298.497-5.861 1.399l-12.042 6.952c-1.502.868-2.33 1.998-2.33 3.182 0 1.173.815 2.289 2.293 3.142 1.538.889 3.596 1.378 5.792 1.378h.001c2.216 0 4.298-.497 5.861-1.399l12.041-6.953c1.502-.867 2.33-1.997 2.33-3.182 0-1.172-.814-2.288-2.292-3.142-1.539-.888-3.596-1.377-5.793-1.377z' fill='#607D8B'/><path d='M165.63 123.219l-5.734 3.311c-3.167 1.828-8.286 1.837-11.433.02-3.147-1.817-3.131-4.772.036-6.601l5.734-3.31 11.397 6.58' fill='#FAFAFA'/><path d='M154.233 117.448l9.995 5.771-4.682 2.704c-1.434.827-3.352 1.283-5.399 1.283-2.029 0-3.923-.449-5.333-1.263-1.29-.744-2-1.694-2-2.674 0-.991.723-1.955 2.036-2.713l5.383-3.108m0-.809l-5.734 3.31c-3.167 1.829-3.183 4.784-.036 6.601 1.568.905 3.623 1.357 5.684 1.357 2.077 0 4.159-.46 5.749-1.377l5.734-3.311-11.397-6.58M145.445 179.667c-1.773 0-3.241-.85-4.243-2.245-.067-.092-.057-.275.023-.356.08-.081.207-.12.3-.055.781.548 1.706.812 2.751.811 1.322 0 2.754-.446 4.256-1.313 5.31-3.066 9.631-10.522 9.631-16.615 0-1.927-.442-3.562-1.279-4.726a.235.235 0 0 1 .024-.301.232.232 0 0 1 .3-.027c1.67 1.172 2.59 3.38 2.59 6.219 0 6.242-4.425 13.987-9.865 17.127-1.573.908-3.083 1.481-4.488 1.481zM142.476 178c.814.651 1.82 1.002 2.969 1.002 1.322 0 2.753-.452 4.255-1.32 5.31-3.065 9.631-10.523 9.631-16.617 0-1.98-.463-3.63-1.325-4.793.411 1.035.624 2.26.624 3.62 0 6.242-4.425 13.875-9.865 17.015-1.573.909-3.084 1.376-4.489 1.376a5.49 5.49 0 0 1-1.8-.283z' fill='#607D8B'/><path d='M148.648 176.704c5.384-3.108 9.748-10.636 9.748-16.813 0-2.052-.483-3.693-1.322-4.861-1.785-1.252-4.375-1.194-7.258.471-5.383 3.108-9.748 10.636-9.748 16.813 0 2.051.484 3.692 1.323 4.86 1.785 1.253 4.374 1.195 7.257-.47' fill='#FAFAFA'/><path d='M144.276 178.276c-1.143 0-2.158-.307-3.019-.911a.217.217 0 0 1-.055-.054c-.895-1.244-1.367-2.972-1.367-4.997 0-6.241 4.425-13.875 9.865-17.016 1.573-.908 3.084-1.369 4.489-1.369 1.143 0 2.158.307 3.019.91a.24.24 0 0 1 .055.055c.894 1.244 1.367 2.971 1.367 4.997 0 6.241-4.425 13.875-9.865 17.016-1.573.908-3.084 1.369-4.489 1.369zm-2.718-1.172c.773.533 1.687.901 2.718.901 1.322 0 2.754-.538 4.256-1.405 5.31-3.066 9.631-10.567 9.631-16.661 0-1.908-.434-3.554-1.256-4.716-.774-.532-1.688-.814-2.718-.814-1.322 0-2.754.433-4.256 1.3-5.31 3.066-9.631 10.564-9.631 16.657 0 1.91.434 3.576 1.256 4.738z' fill='#607D8B'/><path d='M150.72 172.361l-.363-.295a24.105 24.105 0 0 0 2.148-3.128 24.05 24.05 0 0 0 1.977-4.375l.443.149a24.54 24.54 0 0 1-2.015 4.46 24.61 24.61 0 0 1-2.19 3.189M115.917 191.514l-.363-.294a24.174 24.174 0 0 0 2.148-3.128 24.038 24.038 0 0 0 1.976-4.375l.443.148a24.48 24.48 0 0 1-2.015 4.461 24.662 24.662 0 0 1-2.189 3.188M114 237.476V182.584 237.476' fill='#607D8B'/><g><path d='M81.822 37.474c.017-.135-.075-.28-.267-.392-.327-.188-.826-.21-1.109-.045l-6.012 3.471c-.131.076-.194.178-.191.285.002.132.002.461.002.578v.043l-.007.128-6.591 3.779c-.001 0-2.077 1.046-2.787 5.192 0 0-.912 6.961-.898 19.745.015 12.57.606 17.07 1.167 21.351.22 1.684 3.001 2.125 3.001 2.125.331.04.698-.027 1.08-.248l75.273-43.551c1.808-1.069 2.667-3.719 3.056-6.284 1.213-7.99 1.675-32.978-.275-39.878-.196-.693-.51-1.083-.868-1.282l-2.086-.79c-.727.028-1.416.467-1.534.535L82.032 37.072l-.21.402' fill='#FFF'/><path d='M144.311 1.701l2.085.79c.358.199.672.589.868 1.282 1.949 6.9 1.487 31.887.275 39.878-.39 2.565-1.249 5.215-3.056 6.284L69.21 93.486a1.78 1.78 0 0 1-.896.258l-.183-.011c0 .001-2.782-.44-3.003-2.124-.56-4.282-1.151-8.781-1.165-21.351-.015-12.784.897-19.745.897-19.745.71-4.146 2.787-5.192 2.787-5.192l6.591-3.779.007-.128v-.043c0-.117 0-.446-.002-.578-.003-.107.059-.21.191-.285l6.012-3.472a.98.98 0 0 1 .481-.11c.218 0 .449.053.627.156.193.112.285.258.268.392l.211-.402 60.744-34.836c.117-.068.806-.507 1.534-.535m0-.997l-.039.001c-.618.023-1.283.244-1.974.656l-.021.012-60.519 34.706a2.358 2.358 0 0 0-.831-.15c-.365 0-.704.084-.98.244l-6.012 3.471c-.442.255-.699.69-.689 1.166l.001.15-6.08 3.487c-.373.199-2.542 1.531-3.29 5.898l-.006.039c-.009.07-.92 7.173-.906 19.875.014 12.62.603 17.116 1.172 21.465l.002.015c.308 2.355 3.475 2.923 3.836 2.98l.034.004c.101.013.204.019.305.019a2.77 2.77 0 0 0 1.396-.392l75.273-43.552c1.811-1.071 2.999-3.423 3.542-6.997 1.186-7.814 1.734-33.096-.301-40.299-.253-.893-.704-1.527-1.343-1.882l-.132-.062-2.085-.789a.973.973 0 0 0-.353-.065' fill='#455A64'/><path d='M128.267 11.565l1.495.434-56.339 32.326' fill='#FFF'/><path d='M74.202 90.545a.5.5 0 0 1-.25-.931l18.437-10.645a.499.499 0 1 1 .499.864L74.451 90.478l-.249.067M75.764 42.654l-.108-.062.046-.171 5.135-2.964.17.045-.045.171-5.135 2.964-.063.017M70.52 90.375V46.421l.063-.036L137.84 7.554v43.954l-.062.036L70.52 90.375zm.25-43.811v43.38l66.821-38.579V7.985L70.77 46.564z' fill='#607D8B'/><path d='M86.986 83.182c-.23.149-.612.384-.849.523l-11.505 6.701c-.237.139-.206.252.068.252h.565c.275 0 .693-.113.93-.252L87.7 83.705c.237-.139.428-.253.425-.256a11.29 11.29 0 0 1-.006-.503c0-.274-.188-.377-.418-.227l-.715.463' fill='#607D8B'/><path d='M75.266 90.782H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.236-.138.615-.371.844-.519l.715-.464a.488.488 0 0 1 .266-.089c.172 0 .345.13.345.421 0 .214.001.363.003.437l.006.004-.004.069c-.003.075-.003.075-.486.356l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.108.866-.234l11.505-6.702c.168-.098.294-.173.361-.214-.004-.084-.004-.218-.004-.437l-.095-.171-.131.049-.714.463c-.232.15-.616.386-.854.525l-11.505 6.702-.029.018z' fill='#607D8B'/><path d='M75.266 89.871H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.258-.151.694-.268.993-.268h.565c.2 0 .316.056.346.166.03.11-.043.217-.215.317l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.107.866-.234l11.505-6.702.03-.018-.035-.001h-.565c-.252 0-.649.108-.867.234l-11.505 6.702-.029.018zM74.37 90.801v-1.247 1.247' fill='#607D8B'/><path d='M68.13 93.901c-.751-.093-1.314-.737-1.439-1.376-.831-4.238-1.151-8.782-1.165-21.352-.015-12.784.897-19.745.897-19.745.711-4.146 2.787-5.192 2.787-5.192l74.859-43.219c.223-.129 2.487-1.584 3.195.923 1.95 6.9 1.488 31.887.275 39.878-.389 2.565-1.248 5.215-3.056 6.283L69.21 93.653c-.382.221-.749.288-1.08.248 0 0-2.781-.441-3.001-2.125-.561-4.281-1.152-8.781-1.167-21.351-.014-12.784.898-19.745.898-19.745.71-4.146 2.787-5.191 2.787-5.191l6.598-3.81.871-.119 6.599-3.83.046-.461L68.13 93.901' fill='#FAFAFA'/><path d='M68.317 94.161l-.215-.013h-.001l-.244-.047c-.719-.156-2.772-.736-2.976-2.292-.568-4.34-1.154-8.813-1.168-21.384-.014-12.654.891-19.707.9-19.777.725-4.231 2.832-5.338 2.922-5.382l6.628-3.827.87-.119 6.446-3.742.034-.334a.248.248 0 0 1 .273-.223.248.248 0 0 1 .223.272l-.059.589-6.752 3.919-.87.118-6.556 3.785c-.031.016-1.99 1.068-2.666 5.018-.007.06-.908 7.086-.894 19.702.014 12.539.597 16.996 1.161 21.305.091.691.689 1.154 1.309 1.452a1.95 1.95 0 0 1-.236-.609c-.781-3.984-1.155-8.202-1.17-21.399-.014-12.653.891-19.707.9-19.777.725-4.231 2.832-5.337 2.922-5.382-.004.001 74.444-42.98 74.846-43.212l.028-.017c.904-.538 1.72-.688 2.36-.433.555.221.949.733 1.172 1.52 2.014 7.128 1.46 32.219.281 39.983-.507 3.341-1.575 5.515-3.175 6.462L69.335 93.869a2.023 2.023 0 0 1-1.018.292zm-.147-.507c.293.036.604-.037.915-.217l75.273-43.551c1.823-1.078 2.602-3.915 2.934-6.106 1.174-7.731 1.731-32.695-.268-39.772-.178-.631-.473-1.032-.876-1.192-.484-.193-1.166-.052-1.921.397l-.034.021-74.858 43.218c-.031.017-1.989 1.069-2.666 5.019-.007.059-.908 7.085-.894 19.702.015 13.155.386 17.351 1.161 21.303.09.461.476.983 1.037 1.139.114.025.185.037.196.039h.001z' fill='#455A64'/><path d='M69.317 68.982c.489-.281.885-.056.885.505 0 .56-.396 1.243-.885 1.525-.488.282-.884.057-.884-.504 0-.56.396-1.243.884-1.526' fill='#FFF'/><path d='M68.92 71.133c-.289 0-.487-.228-.487-.625 0-.56.396-1.243.884-1.526a.812.812 0 0 1 .397-.121c.289 0 .488.229.488.626 0 .56-.396 1.243-.885 1.525a.812.812 0 0 1-.397.121m.794-2.459a.976.976 0 0 0-.49.147c-.548.317-.978 1.058-.978 1.687 0 .486.271.812.674.812a.985.985 0 0 0 .491-.146c.548-.317.978-1.057.978-1.687 0-.486-.272-.813-.675-.813' fill='#8097A2'/><path d='M68.92 70.947c-.271 0-.299-.307-.299-.439 0-.491.361-1.116.79-1.363a.632.632 0 0 1 .303-.096c.272 0 .301.306.301.438 0 .491-.363 1.116-.791 1.364a.629.629 0 0 1-.304.096m.794-2.086a.812.812 0 0 0-.397.121c-.488.283-.884.966-.884 1.526 0 .397.198.625.487.625a.812.812 0 0 0 .397-.121c.489-.282.885-.965.885-1.525 0-.397-.199-.626-.488-.626' fill='#8097A2'/><path d='M69.444 85.35c.264-.152.477-.031.477.272 0 .303-.213.67-.477.822-.263.153-.477.031-.477-.271 0-.302.214-.671.477-.823' fill='#FFF'/><path d='M69.23 86.51c-.156 0-.263-.123-.263-.337 0-.302.214-.671.477-.823a.431.431 0 0 1 .214-.066c.156 0 .263.124.263.338 0 .303-.213.67-.477.822a.431.431 0 0 1-.214.066m.428-1.412c-.1 0-.203.029-.307.09-.32.185-.57.618-.57.985 0 .309.185.524.449.524a.63.63 0 0 0 .308-.09c.32-.185.57-.618.57-.985 0-.309-.185-.524-.45-.524' fill='#8097A2'/><path d='M69.23 86.322l-.076-.149c0-.235.179-.544.384-.661l.12-.041.076.151c0 .234-.179.542-.383.66l-.121.04m.428-1.038a.431.431 0 0 0-.214.066c-.263.152-.477.521-.477.823 0 .214.107.337.263.337a.431.431 0 0 0 .214-.066c.264-.152.477-.519.477-.822 0-.214-.107-.338-.263-.338' fill='#8097A2'/><path d='M139.278 7.769v43.667L72.208 90.16V46.493l67.07-38.724' fill='#455A64'/><path d='M72.083 90.375V46.421l.063-.036 67.257-38.831v43.954l-.062.036-67.258 38.831zm.25-43.811v43.38l66.821-38.579V7.985L72.333 46.564z' fill='#607D8B'/></g><path d='M125.737 88.647l-7.639 3.334V84l-11.459 4.713v8.269L99 100.315l13.369 3.646 13.368-15.314' fill='#455A64'/></g></svg>";function At(){this.loadIcon_();var v=document.createElement("div"),G=v.style;G.position="fixed",G.top=0,G.right=0,G.bottom=0,G.left=0,G.backgroundColor="gray",G.fontFamily="sans-serif",G.zIndex=1e6;var b=document.createElement("img");b.src=this.icon;var G=b.style;G.marginLeft="25%",G.marginTop="25%",G.width="50%",v.appendChild(b);var _=document.createElement("div"),G=_.style;G.textAlign="center",G.fontSize="16px",G.lineHeight="24px",G.margin="24px 25%",G.width="50%",_.innerHTML="Place your phone into your Cardboard viewer.",v.appendChild(_);var T=document.createElement("div"),G=T.style;G.backgroundColor="#CFD8DC",G.position="fixed",G.bottom=0,G.width="100%",G.height="48px",G.padding="14px 24px",G.boxSizing="border-box",G.color="#656A6B",v.appendChild(T);var P=document.createElement("div");P.style.float="left",P.innerHTML="No Cardboard viewer?";var U=document.createElement("a");U.href="https://www.google.com/get/cardboard/get-cardboard/",U.innerHTML="get one",U.target="_blank";var G=U.style;G.float="right",G.fontWeight=600,G.textTransform="uppercase",G.borderLeft="1px solid gray",G.paddingLeft="24px",G.textDecoration="none",G.color="#656A6B",T.appendChild(P),T.appendChild(U),this.overlay=v,this.text=_,this.hide()}At.prototype.show=function(v){!v&&!this.overlay.parentElement?document.body.appendChild(this.overlay):v&&(this.overlay.parentElement&&this.overlay.parentElement!=v&&this.overlay.parentElement.removeChild(this.overlay),v.appendChild(this.overlay)),this.overlay.style.display="block";var b=this.overlay.querySelector("img"),_=b.style;g()?(_.width="20%",_.marginLeft="40%",_.marginTop="3%"):(_.width="50%",_.marginLeft="25%",_.marginTop="25%")},At.prototype.hide=function(){this.overlay.style.display="none"},At.prototype.showTemporarily=function(v,b){this.show(b),this.timer=setTimeout(this.hide.bind(this),v)},At.prototype.disableShowTemporarily=function(){clearTimeout(this.timer)},At.prototype.update=function(){this.disableShowTemporarily(),!g()&&$()?this.show():this.hide()},At.prototype.loadIcon_=function(){this.icon=o("image/svg+xml",xt)};var Wt="CardboardV1",dr="WEBVR_CARDBOARD_VIEWER",It="webvr-polyfill-viewer-selector";function Vt(v){try{this.selectedKey=localStorage.getItem(dr)}catch(b){console.error("Failed to load viewer profile: %s",b)}this.selectedKey||(this.selectedKey=v||Wt),this.dialog=this.createDialog_(ge.Viewers),this.root=null,this.onChangeCallbacks_=[]}Vt.prototype.show=function(v){this.root=v,v.appendChild(this.dialog);var b=this.dialog.querySelector("#"+this.selectedKey);b.checked=!0,this.dialog.style.display="block"},Vt.prototype.hide=function(){this.root&&this.root.contains(this.dialog)&&this.root.removeChild(this.dialog),this.dialog.style.display="none"},Vt.prototype.getCurrentViewer=function(){return ge.Viewers[this.selectedKey]},Vt.prototype.getSelectedKey_=function(){var v=this.dialog.querySelector("input[name=field]:checked");return v?v.id:null},Vt.prototype.onChange=function(v){this.onChangeCallbacks_.push(v)},Vt.prototype.fireOnChange_=function(v){for(var b=0;b<this.onChangeCallbacks_.length;b++)this.onChangeCallbacks_[b](v)},Vt.prototype.onSave_=function(){if(this.selectedKey=this.getSelectedKey_(),!this.selectedKey||!ge.Viewers[this.selectedKey]){console.error("ViewerSelector.onSave_: this should never happen!");return}this.fireOnChange_(ge.Viewers[this.selectedKey]);try{localStorage.setItem(dr,this.selectedKey)}catch(v){console.error("Failed to save viewer profile: %s",v)}this.hide()},Vt.prototype.createDialog_=function(v){var b=document.createElement("div");b.classList.add(It),b.style.display="none";var _=document.createElement("div"),U=_.style;U.position="fixed",U.left=0,U.top=0,U.width="100%",U.height="100%",U.background="rgba(0, 0, 0, 0.3)",_.addEventListener("click",this.hide.bind(this));var T=280,P=document.createElement("div"),U=P.style;U.boxSizing="border-box",U.position="fixed",U.top="24px",U.left="50%",U.marginLeft=-T/2+"px",U.width=T+"px",U.padding="24px",U.overflow="hidden",U.background="#fafafa",U.fontFamily="'Roboto', sans-serif",U.boxShadow="0px 5px 20px #666",P.appendChild(this.createH1_("Select your viewer"));for(var G in v)P.appendChild(this.createChoice_(G,v[G].label));return P.appendChild(this.createButton_("Save",this.onSave_.bind(this))),b.appendChild(_),b.appendChild(P),b},Vt.prototype.createH1_=function(v){var b=document.createElement("h1"),_=b.style;return _.color="black",_.fontSize="20px",_.fontWeight="bold",_.marginTop=0,_.marginBottom="24px",b.innerHTML=v,b},Vt.prototype.createChoice_=function(v,b){var _=document.createElement("div");_.style.marginTop="8px",_.style.color="black";var T=document.createElement("input");T.style.fontSize="30px",T.setAttribute("id",v),T.setAttribute("type","radio"),T.setAttribute("value",v),T.setAttribute("name","field");var P=document.createElement("label");return P.style.marginLeft="4px",P.setAttribute("for",v),P.innerHTML=b,_.appendChild(T),_.appendChild(P),_},Vt.prototype.createButton_=function(v,b){var _=document.createElement("button");_.innerHTML=v;var T=_.style;return T.float="right",T.textTransform="uppercase",T.color="#1094f7",T.fontSize="14px",T.letterSpacing=0,T.border=0,T.background="none",T.marginTop="16px",_.addEventListener("click",b),_};var cn=typeof window<"u"?window:typeof kr<"u"?kr:typeof self<"u"?self:{};function Vo(v){return v&&v.__esModule&&Object.prototype.hasOwnProperty.call(v,"default")?v.default:v}function Go(v,b){return b={exports:{}},v(b,b.exports),b.exports}var _u=Go(function(v,b){(function(T,P){v.exports=P()})(cn,function(){return function(_){var T={};function P(U){if(T[U])return T[U].exports;var G=T[U]={i:U,l:!1,exports:{}};return _[U].call(G.exports,G,G.exports,P),G.l=!0,G.exports}return P.m=_,P.c=T,P.d=function(U,G,he){P.o(U,G)||Object.defineProperty(U,G,{configurable:!1,enumerable:!0,get:he})},P.n=function(U){var G=U&&U.__esModule?function(){return U.default}:function(){return U};return P.d(G,"a",G),G},P.o=function(U,G){return Object.prototype.hasOwnProperty.call(U,G)},P.p="",P(P.s=0)}([function(_,T,P){var U=function(){function ae(ye,be){for(var He=0;He<be.length;He++){var Ue=be[He];Ue.enumerable=Ue.enumerable||!1,Ue.configurable=!0,"value"in Ue&&(Ue.writable=!0),Object.defineProperty(ye,Ue.key,Ue)}}return function(ye,be,He){return be&&ae(ye.prototype,be),He&&ae(ye,He),ye}}();function G(ae,ye){if(!(ae instanceof ye))throw new TypeError("Cannot call a class as a function")}var he=P(1),ue=typeof navigator<"u"&&parseFloat((""+(/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))<10&&!window.MSStream,Y=function(){function ae(){G(this,ae),ue?this.noSleepTimer=null:(this.noSleepVideo=document.createElement("video"),this.noSleepVideo.setAttribute("playsinline",""),this.noSleepVideo.setAttribute("src",he),this.noSleepVideo.addEventListener("timeupdate",function(ye){this.noSleepVideo.currentTime>.5&&(this.noSleepVideo.currentTime=Math.random())}.bind(this)))}return U(ae,[{key:"enable",value:function(){ue?(this.disable(),this.noSleepTimer=window.setInterval(function(){window.location.href="/",window.setTimeout(window.stop,0)},15e3)):this.noSleepVideo.play()}},{key:"disable",value:function(){ue?this.noSleepTimer&&(window.clearInterval(this.noSleepTimer),this.noSleepTimer=null):this.noSleepVideo.pause()}}]),ae}();_.exports=Y},function(_,T,P){_.exports="data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF///v3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTEgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MToweDExMSBtZT1oZXggc3VibWU9MiBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0wIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MCA4eDhkY3Q9MCBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0wIHRocmVhZHM9NiBsb29rYWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFjZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJhbWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdlaWdodHA9MSBrZXlpbnQ9MzAwIGtleWludF9taW49MzAgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD0xMCByYz1jcmYgbWJ0cmVlPTEgY3JmPTIwLjAgcWNvbXA9MC42MCBxcG1pbj0wIHFwbWF4PTY5IHFwc3RlcD00IHZidl9tYXhyYXRlPTIwMDAwIHZidl9idWZzaXplPTI1MDAwIGNyZl9tYXg9MC4wIG5hbF9ocmQ9bm9uZSBmaWxsZXI9MCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAOWWIhAA3//p+C7v8tDDSTjf97w55i3SbRPO4ZY+hkjD5hbkAkL3zpJ6h/LR1CAABzgB1kqqzUorlhQAAAAxBmiQYhn/+qZYADLgAAAAJQZ5CQhX/AAj5IQADQGgcIQADQGgcAAAACQGeYUQn/wALKCEAA0BoHAAAAAkBnmNEJ/8ACykhAANAaBwhAANAaBwAAAANQZpoNExDP/6plgAMuSEAA0BoHAAAAAtBnoZFESwr/wAI+SEAA0BoHCEAA0BoHAAAAAkBnqVEJ/8ACykhAANAaBwAAAAJAZ6nRCf/AAsoIQADQGgcIQADQGgcAAAADUGarDRMQz/+qZYADLghAANAaBwAAAALQZ7KRRUsK/8ACPkhAANAaBwAAAAJAZ7pRCf/AAsoIQADQGgcIQADQGgcAAAACQGe60Qn/wALKCEAA0BoHAAAAA1BmvA0TEM//qmWAAy5IQADQGgcIQADQGgcAAAAC0GfDkUVLCv/AAj5IQADQGgcAAAACQGfLUQn/wALKSEAA0BoHCEAA0BoHAAAAAkBny9EJ/8ACyghAANAaBwAAAANQZs0NExDP/6plgAMuCEAA0BoHAAAAAtBn1JFFSwr/wAI+SEAA0BoHCEAA0BoHAAAAAkBn3FEJ/8ACyghAANAaBwAAAAJAZ9zRCf/AAsoIQADQGgcIQADQGgcAAAADUGbeDRMQz/+qZYADLkhAANAaBwAAAALQZ+WRRUsK/8ACPghAANAaBwhAANAaBwAAAAJAZ+1RCf/AAspIQADQGgcAAAACQGft0Qn/wALKSEAA0BoHCEAA0BoHAAAAA1Bm7w0TEM//qmWAAy4IQADQGgcAAAAC0Gf2kUVLCv/AAj5IQADQGgcAAAACQGf+UQn/wALKCEAA0BoHCEAA0BoHAAAAAkBn/tEJ/8ACykhAANAaBwAAAANQZvgNExDP/6plgAMuSEAA0BoHCEAA0BoHAAAAAtBnh5FFSwr/wAI+CEAA0BoHAAAAAkBnj1EJ/8ACyghAANAaBwhAANAaBwAAAAJAZ4/RCf/AAspIQADQGgcAAAADUGaJDRMQz/+qZYADLghAANAaBwAAAALQZ5CRRUsK/8ACPkhAANAaBwhAANAaBwAAAAJAZ5hRCf/AAsoIQADQGgcAAAACQGeY0Qn/wALKSEAA0BoHCEAA0BoHAAAAA1Bmmg0TEM//qmWAAy5IQADQGgcAAAAC0GehkUVLCv/AAj5IQADQGgcIQADQGgcAAAACQGepUQn/wALKSEAA0BoHAAAAAkBnqdEJ/8ACyghAANAaBwAAAANQZqsNExDP/6plgAMuCEAA0BoHCEAA0BoHAAAAAtBnspFFSwr/wAI+SEAA0BoHAAAAAkBnulEJ/8ACyghAANAaBwhAANAaBwAAAAJAZ7rRCf/AAsoIQADQGgcAAAADUGa8DRMQz/+qZYADLkhAANAaBwhAANAaBwAAAALQZ8ORRUsK/8ACPkhAANAaBwAAAAJAZ8tRCf/AAspIQADQGgcIQADQGgcAAAACQGfL0Qn/wALKCEAA0BoHAAAAA1BmzQ0TEM//qmWAAy4IQADQGgcAAAAC0GfUkUVLCv/AAj5IQADQGgcIQADQGgcAAAACQGfcUQn/wALKCEAA0BoHAAAAAkBn3NEJ/8ACyghAANAaBwhAANAaBwAAAANQZt4NExC//6plgAMuSEAA0BoHAAAAAtBn5ZFFSwr/wAI+CEAA0BoHCEAA0BoHAAAAAkBn7VEJ/8ACykhAANAaBwAAAAJAZ+3RCf/AAspIQADQGgcAAAADUGbuzRMQn/+nhAAYsAhAANAaBwhAANAaBwAAAAJQZ/aQhP/AAspIQADQGgcAAAACQGf+UQn/wALKCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHAAACiFtb292AAAAbG12aGQAAAAA1YCCX9WAgl8AAAPoAAAH/AABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAGGlvZHMAAAAAEICAgAcAT////v7/AAAF+XRyYWsAAABcdGtoZAAAAAPVgIJf1YCCXwAAAAEAAAAAAAAH0AAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAygAAAMoAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAB9AAABdwAAEAAAAABXFtZGlhAAAAIG1kaGQAAAAA1YCCX9WAgl8AAV+QAAK/IFXEAAAAAAAtaGRscgAAAAAAAAAAdmlkZQAAAAAAAAAAAAAAAFZpZGVvSGFuZGxlcgAAAAUcbWluZgAAABR2bWhkAAAAAQAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAAE3HN0YmwAAACYc3RzZAAAAAAAAAABAAAAiGF2YzEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAygDKAEgAAABIAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY//8AAAAyYXZjQwFNQCj/4QAbZ01AKOyho3ySTUBAQFAAAAMAEAAr8gDxgxlgAQAEaO+G8gAAABhzdHRzAAAAAAAAAAEAAAA8AAALuAAAABRzdHNzAAAAAAAAAAEAAAABAAAB8GN0dHMAAAAAAAAAPAAAAAEAABdwAAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAAC7gAAAAAQAAF3AAAAABAAAAAAAAABxzdHNjAAAAAAAAAAEAAAABAAAAAQAAAAEAAAEEc3RzegAAAAAAAAAAAAAAPAAAAzQAAAAQAAAADQAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAANAAAADQAAAQBzdGNvAAAAAAAAADwAAAAwAAADZAAAA3QAAAONAAADoAAAA7kAAAPQAAAD6wAAA/4AAAQXAAAELgAABEMAAARcAAAEbwAABIwAAAShAAAEugAABM0AAATkAAAE/wAABRIAAAUrAAAFQgAABV0AAAVwAAAFiQAABaAAAAW1AAAFzgAABeEAAAX+AAAGEwAABiwAAAY/AAAGVgAABnEAAAaEAAAGnQAABrQAAAbPAAAG4gAABvUAAAcSAAAHJwAAB0AAAAdTAAAHcAAAB4UAAAeeAAAHsQAAB8gAAAfjAAAH9gAACA8AAAgmAAAIQQAACFQAAAhnAAAIhAAACJcAAAMsdHJhawAAAFx0a2hkAAAAA9WAgl/VgIJfAAAAAgAAAAAAAAf8AAAAAAAAAAAAAAABAQAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAACsm1kaWEAAAAgbWRoZAAAAADVgIJf1YCCXwAArEQAAWAAVcQAAAAAACdoZGxyAAAAAAAAAABzb3VuAAAAAAAAAAAAAAAAU3RlcmVvAAAAAmNtaW5mAAAAEHNtaGQAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAidzdGJsAAAAZ3N0c2QAAAAAAAAAAQAAAFdtcDRhAAAAAAAAAAEAAAAAAAAAAAACABAAAAAArEQAAAAAADNlc2RzAAAAAAOAgIAiAAIABICAgBRAFQAAAAADDUAAAAAABYCAgAISEAaAgIABAgAAABhzdHRzAAAAAAAAAAEAAABYAAAEAAAAABxzdHNjAAAAAAAAAAEAAAABAAAAAQAAAAEAAAAUc3RzegAAAAAAAAAGAAAAWAAAAXBzdGNvAAAAAAAAAFgAAAOBAAADhwAAA5oAAAOtAAADswAAA8oAAAPfAAAD5QAAA/gAAAQLAAAEEQAABCgAAAQ9AAAEUAAABFYAAARpAAAEgAAABIYAAASbAAAErgAABLQAAATHAAAE3gAABPMAAAT5AAAFDAAABR8AAAUlAAAFPAAABVEAAAVXAAAFagAABX0AAAWDAAAFmgAABa8AAAXCAAAFyAAABdsAAAXyAAAF+AAABg0AAAYgAAAGJgAABjkAAAZQAAAGZQAABmsAAAZ+AAAGkQAABpcAAAauAAAGwwAABskAAAbcAAAG7wAABwYAAAcMAAAHIQAABzQAAAc6AAAHTQAAB2QAAAdqAAAHfwAAB5IAAAeYAAAHqwAAB8IAAAfXAAAH3QAAB/AAAAgDAAAICQAACCAAAAg1AAAIOwAACE4AAAhhAAAIeAAACH4AAAiRAAAIpAAACKoAAAiwAAAItgAACLwAAAjCAAAAFnVkdGEAAAAObmFtZVN0ZXJlbwAAAHB1ZHRhAAAAaG1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAAO2lsc3QAAAAzqXRvbwAAACtkYXRhAAAAAQAAAABIYW5kQnJha2UgMC4xMC4yIDIwMTUwNjExMDA="}])})}),Ci=Vo(_u),Wo=1e3,Mi=[0,0,.5,1],Ho=[.5,0,.5,1],Eu=window.requestAnimationFrame,Tu=window.cancelAnimationFrame;function Cu(){this.leftProjectionMatrix=new Float32Array(16),this.leftViewMatrix=new Float32Array(16),this.rightProjectionMatrix=new Float32Array(16),this.rightViewMatrix=new Float32Array(16),this.pose=null}function k(v){Object.defineProperties(this,{hasPosition:{writable:!1,enumerable:!0,value:v.hasPosition},hasExternalDisplay:{writable:!1,enumerable:!0,value:v.hasExternalDisplay},canPresent:{writable:!1,enumerable:!0,value:v.canPresent},maxLayers:{writable:!1,enumerable:!0,value:v.maxLayers},hasOrientation:{enumerable:!0,get:function(){return de("VRDisplayCapabilities.prototype.hasOrientation","VRDisplay.prototype.getFrameData"),v.hasOrientation}}})}function j(v){v=v||{};var b="wakelock"in v?v.wakelock:!0;this.isPolyfilled=!0,this.displayId=Wo++,this.displayName="",this.depthNear=.01,this.depthFar=1e4,this.isPresenting=!1,Object.defineProperty(this,"isConnected",{get:function(){return de("VRDisplay.prototype.isConnected","VRDisplayCapabilities.prototype.hasExternalDisplay"),!1}}),this.capabilities=new k({hasPosition:!1,hasOrientation:!1,hasExternalDisplay:!1,canPresent:!1,maxLayers:1}),this.stageParameters=null,this.waitingForPresent_=!1,this.layer_=null,this.originalParent_=null,this.fullscreenElement_=null,this.fullscreenWrapper_=null,this.fullscreenElementCachedStyle_=null,this.fullscreenEventTarget_=null,this.fullscreenChangeHandler_=null,this.fullscreenErrorHandler_=null,b&&$()&&(this.wakelock_=new Ci)}j.prototype.getFrameData=function(v){return F(v,this._getPose(),this)},j.prototype.getPose=function(){return de("VRDisplay.prototype.getPose","VRDisplay.prototype.getFrameData"),this._getPose()},j.prototype.resetPose=function(){return de("VRDisplay.prototype.resetPose"),this._resetPose()},j.prototype.getImmediatePose=function(){return de("VRDisplay.prototype.getImmediatePose","VRDisplay.prototype.getFrameData"),this._getPose()},j.prototype.requestAnimationFrame=function(v){return Eu(v)},j.prototype.cancelAnimationFrame=function(v){return Tu(v)},j.prototype.wrapForFullscreen=function(v){if(u())return v;if(!this.fullscreenWrapper_){this.fullscreenWrapper_=document.createElement("div");var b=["height: "+Math.min(screen.height,screen.width)+"px !important","top: 0 !important","left: 0 !important","right: 0 !important","border: 0","margin: 0","padding: 0","z-index: 999999 !important","position: fixed"];this.fullscreenWrapper_.setAttribute("style",b.join("; ")+";"),this.fullscreenWrapper_.classList.add("webvr-polyfill-fullscreen-wrapper")}if(this.fullscreenElement_==v)return this.fullscreenWrapper_;if(this.fullscreenElement_&&(this.originalParent_?this.originalParent_.appendChild(this.fullscreenElement_):this.fullscreenElement_.parentElement.removeChild(this.fullscreenElement_)),this.fullscreenElement_=v,this.originalParent_=v.parentElement,this.originalParent_||document.body.appendChild(v),!this.fullscreenWrapper_.parentElement){var _=this.fullscreenElement_.parentElement;_.insertBefore(this.fullscreenWrapper_,this.fullscreenElement_),_.removeChild(this.fullscreenElement_)}this.fullscreenWrapper_.insertBefore(this.fullscreenElement_,this.fullscreenWrapper_.firstChild),this.fullscreenElementCachedStyle_=this.fullscreenElement_.getAttribute("style");var T=this;function P(){if(T.fullscreenElement_){var U=["position: absolute","top: 0","left: 0","width: "+Math.max(screen.width,screen.height)+"px","height: "+Math.min(screen.height,screen.width)+"px","border: 0","margin: 0","padding: 0"];T.fullscreenElement_.setAttribute("style",U.join("; ")+";")}}return P(),this.fullscreenWrapper_},j.prototype.removeFullscreenWrapper=function(){if(this.fullscreenElement_){var v=this.fullscreenElement_;this.fullscreenElementCachedStyle_?v.setAttribute("style",this.fullscreenElementCachedStyle_):v.removeAttribute("style"),this.fullscreenElement_=null,this.fullscreenElementCachedStyle_=null;var b=this.fullscreenWrapper_.parentElement;return this.fullscreenWrapper_.removeChild(v),this.originalParent_===b?b.insertBefore(v,this.fullscreenWrapper_):this.originalParent_&&this.originalParent_.appendChild(v),b.removeChild(this.fullscreenWrapper_),v}},j.prototype.requestPresent=function(v){var b=this.isPresenting,_=this;return v instanceof Array||(de("VRDisplay.prototype.requestPresent with non-array argument","an array of VRLayers as the first argument"),v=[v]),new Promise(function(T,P){if(!_.capabilities.canPresent){P(new Error("VRDisplay is not capable of presenting."));return}if(v.length==0||v.length>_.capabilities.maxLayers){P(new Error("Invalid number of layers."));return}var U=v[0];if(!U.source){T();return}var G=U.leftBounds||Mi,he=U.rightBounds||Ho;if(b){var ue=_.layer_;ue.source!==U.source&&(ue.source=U.source);for(var Y=0;Y<4;Y++)ue.leftBounds[Y]=G[Y],ue.rightBounds[Y]=he[Y];_.wrapForFullscreen(_.layer_.source),_.updatePresent_(),T();return}if(_.layer_={predistorted:U.predistorted,source:U.source,leftBounds:G.slice(0),rightBounds:he.slice(0)},_.waitingForPresent_=!1,_.layer_&&_.layer_.source){var ae=_.wrapForFullscreen(_.layer_.source),ye=function(){var Ue=R();_.isPresenting=ae===Ue,_.isPresenting?(screen.orientation&&screen.orientation.lock&&screen.orientation.lock("landscape-primary").catch(function(st){console.error("screen.orientation.lock() failed due to",st.message)}),_.waitingForPresent_=!1,_.beginPresent_(),T()):(screen.orientation&&screen.orientation.unlock&&screen.orientation.unlock(),_.removeFullscreenWrapper(),_.disableWakeLock(),_.endPresent_(),_.removeFullscreenListeners_()),_.fireVRDisplayPresentChange_()},be=function(){_.waitingForPresent_&&(_.removeFullscreenWrapper(),_.removeFullscreenListeners_(),_.disableWakeLock(),_.waitingForPresent_=!1,_.isPresenting=!1,P(new Error("Unable to present.")))};_.addFullscreenListeners_(ae,ye,be),E(ae)?(_.enableWakeLock(),_.waitingForPresent_=!0):(u()||c())&&(_.enableWakeLock(),_.isPresenting=!0,_.beginPresent_(),_.fireVRDisplayPresentChange_(),T())}!_.waitingForPresent_&&!u()&&(M(),P(new Error("Unable to present.")))})},j.prototype.exitPresent=function(){var v=this.isPresenting,b=this;return this.isPresenting=!1,this.layer_=null,this.disableWakeLock(),new Promise(function(_,T){v?(!M()&&u()&&(b.endPresent_(),b.fireVRDisplayPresentChange_()),c()&&(b.removeFullscreenWrapper(),b.removeFullscreenListeners_(),b.endPresent_(),b.fireVRDisplayPresentChange_()),_()):T(new Error("Was not presenting to VRDisplay."))})},j.prototype.getLayers=function(){return this.layer_?[this.layer_]:[]},j.prototype.fireVRDisplayPresentChange_=function(){var v=new CustomEvent("vrdisplaypresentchange",{detail:{display:this}});window.dispatchEvent(v)},j.prototype.fireVRDisplayConnect_=function(){var v=new CustomEvent("vrdisplayconnect",{detail:{display:this}});window.dispatchEvent(v)},j.prototype.addFullscreenListeners_=function(v,b,_){this.removeFullscreenListeners_(),this.fullscreenEventTarget_=v,this.fullscreenChangeHandler_=b,this.fullscreenErrorHandler_=_,b&&(document.fullscreenEnabled?v.addEventListener("fullscreenchange",b,!1):document.webkitFullscreenEnabled?v.addEventListener("webkitfullscreenchange",b,!1):document.mozFullScreenEnabled?document.addEventListener("mozfullscreenchange",b,!1):document.msFullscreenEnabled&&v.addEventListener("msfullscreenchange",b,!1)),_&&(document.fullscreenEnabled?v.addEventListener("fullscreenerror",_,!1):document.webkitFullscreenEnabled?v.addEventListener("webkitfullscreenerror",_,!1):document.mozFullScreenEnabled?document.addEventListener("mozfullscreenerror",_,!1):document.msFullscreenEnabled&&v.addEventListener("msfullscreenerror",_,!1))},j.prototype.removeFullscreenListeners_=function(){if(this.fullscreenEventTarget_){var v=this.fullscreenEventTarget_;if(this.fullscreenChangeHandler_){var b=this.fullscreenChangeHandler_;v.removeEventListener("fullscreenchange",b,!1),v.removeEventListener("webkitfullscreenchange",b,!1),document.removeEventListener("mozfullscreenchange",b,!1),v.removeEventListener("msfullscreenchange",b,!1)}if(this.fullscreenErrorHandler_){var _=this.fullscreenErrorHandler_;v.removeEventListener("fullscreenerror",_,!1),v.removeEventListener("webkitfullscreenerror",_,!1),document.removeEventListener("mozfullscreenerror",_,!1),v.removeEventListener("msfullscreenerror",_,!1)}this.fullscreenEventTarget_=null,this.fullscreenChangeHandler_=null,this.fullscreenErrorHandler_=null}},j.prototype.enableWakeLock=function(){this.wakelock_&&this.wakelock_.enable()},j.prototype.disableWakeLock=function(){this.wakelock_&&this.wakelock_.disable()},j.prototype.beginPresent_=function(){},j.prototype.endPresent_=function(){},j.prototype.submitFrame=function(v){},j.prototype.getEyeParameters=function(v){return null};var ce={ADDITIONAL_VIEWERS:[],DEFAULT_VIEWER:"",MOBILE_WAKE_LOCK:!0,DEBUG:!1,DPDB_URL:"https://dpdb.webvr.rocks/dpdb.json",K_FILTER:.98,PREDICTION_TIME_S:.04,CARDBOARD_UI_DISABLED:!1,ROTATE_INSTRUCTIONS_DISABLED:!1,YAW_ONLY:!1,BUFFER_SCALE:.5,DIRTY_SUBMIT_FRAME_BINDINGS:!1},ee={LEFT:"left",RIGHT:"right"};function ne(v){var b=q({},ce);v=q(b,v||{}),j.call(this,{wakelock:v.MOBILE_WAKE_LOCK}),this.config=v,this.displayName="Cardboard VRDisplay",this.capabilities=new k({hasPosition:!1,hasOrientation:!0,hasExternalDisplay:!1,canPresent:!0,maxLayers:1}),this.stageParameters=null,this.bufferScale_=this.config.BUFFER_SCALE,this.poseSensor_=new Fe(this.config),this.distorter_=null,this.cardboardUI_=null,this.dpdb_=new Ge(this.config.DPDB_URL,this.onDeviceParamsUpdated_.bind(this)),this.deviceInfo_=new ge(this.dpdb_.getDeviceParams(),v.ADDITIONAL_VIEWERS),this.viewerSelector_=new Vt(v.DEFAULT_VIEWER),this.viewerSelector_.onChange(this.onViewerChanged_.bind(this)),this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer()),this.config.ROTATE_INSTRUCTIONS_DISABLED||(this.rotateInstructions_=new At),u()&&window.addEventListener("resize",this.onResize_.bind(this))}return ne.prototype=Object.create(j.prototype),ne.prototype._getPose=function(){return{position:null,orientation:this.poseSensor_.getOrientation(),linearVelocity:null,linearAcceleration:null,angularVelocity:null,angularAcceleration:null}},ne.prototype._resetPose=function(){this.poseSensor_.resetPose&&this.poseSensor_.resetPose()},ne.prototype._getFieldOfView=function(v){var b;if(v==ee.LEFT)b=this.deviceInfo_.getFieldOfViewLeftEye();else if(v==ee.RIGHT)b=this.deviceInfo_.getFieldOfViewRightEye();else return console.error("Invalid eye provided: %s",v),null;return b},ne.prototype._getEyeOffset=function(v){var b;if(v==ee.LEFT)b=[-this.deviceInfo_.viewer.interLensDistance*.5,0,0];else if(v==ee.RIGHT)b=[this.deviceInfo_.viewer.interLensDistance*.5,0,0];else return console.error("Invalid eye provided: %s",v),null;return b},ne.prototype.getEyeParameters=function(v){var b=this._getEyeOffset(v),_=this._getFieldOfView(v),T={offset:b,renderWidth:this.deviceInfo_.device.width*.5*this.bufferScale_,renderHeight:this.deviceInfo_.device.height*this.bufferScale_};return Object.defineProperty(T,"fieldOfView",{enumerable:!0,get:function(){return de("VRFieldOfView","VRFrameData's projection matrices"),_}}),T},ne.prototype.onDeviceParamsUpdated_=function(v){this.config.DEBUG&&console.log("DPDB reported that device params were updated."),this.deviceInfo_.updateDeviceParams(v),this.distorter_&&this.distorter_.updateDeviceInfo(this.deviceInfo_)},ne.prototype.updateBounds_=function(){this.layer_&&this.distorter_&&(this.layer_.leftBounds||this.layer_.rightBounds)&&this.distorter_.setTextureBounds(this.layer_.leftBounds,this.layer_.rightBounds)},ne.prototype.beginPresent_=function(){var v=this.layer_.source.getContext("webgl");v||(v=this.layer_.source.getContext("experimental-webgl")),v||(v=this.layer_.source.getContext("webgl2")),v&&(this.layer_.predistorted?this.config.CARDBOARD_UI_DISABLED||(v.canvas.width=x()*this.bufferScale_,v.canvas.height=S()*this.bufferScale_,this.cardboardUI_=new wt(v)):(this.config.CARDBOARD_UI_DISABLED||(this.cardboardUI_=new wt(v)),this.distorter_=new xe(v,this.cardboardUI_,this.config.BUFFER_SCALE,this.config.DIRTY_SUBMIT_FRAME_BINDINGS),this.distorter_.updateDeviceInfo(this.deviceInfo_)),this.cardboardUI_&&this.cardboardUI_.listen(function(b){this.viewerSelector_.show(this.layer_.source.parentElement),b.stopPropagation(),b.preventDefault()}.bind(this),function(b){this.exitPresent(),b.stopPropagation(),b.preventDefault()}.bind(this)),this.rotateInstructions_&&(g()&&$()?this.rotateInstructions_.showTemporarily(3e3,this.layer_.source.parentElement):this.rotateInstructions_.update()),this.orientationHandler=this.onOrientationChange_.bind(this),window.addEventListener("orientationchange",this.orientationHandler),this.vrdisplaypresentchangeHandler=this.updateBounds_.bind(this),window.addEventListener("vrdisplaypresentchange",this.vrdisplaypresentchangeHandler),this.fireVRDisplayDeviceParamsChange_())},ne.prototype.endPresent_=function(){this.distorter_&&(this.distorter_.destroy(),this.distorter_=null),this.cardboardUI_&&(this.cardboardUI_.destroy(),this.cardboardUI_=null),this.rotateInstructions_&&this.rotateInstructions_.hide(),this.viewerSelector_.hide(),window.removeEventListener("orientationchange",this.orientationHandler),window.removeEventListener("vrdisplaypresentchange",this.vrdisplaypresentchangeHandler)},ne.prototype.updatePresent_=function(){this.endPresent_(),this.beginPresent_()},ne.prototype.submitFrame=function(v){if(this.distorter_)this.updateBounds_(),this.distorter_.submitFrame();else if(this.cardboardUI_&&this.layer_){var b=this.layer_.source.getContext("webgl");b||(b=this.layer_.source.getContext("experimental-webgl")),b||(b=this.layer_.source.getContext("webgl2"));var _=b.canvas;(_.width!=this.lastWidth||_.height!=this.lastHeight)&&this.cardboardUI_.onResize(),this.lastWidth=_.width,this.lastHeight=_.height,this.cardboardUI_.render()}},ne.prototype.onOrientationChange_=function(v){this.viewerSelector_.hide(),this.rotateInstructions_&&this.rotateInstructions_.update(),this.onResize_()},ne.prototype.onResize_=function(v){if(this.layer_){var b=this.layer_.source.getContext("webgl");b||(b=this.layer_.source.getContext("experimental-webgl")),b||(b=this.layer_.source.getContext("webgl2"));var _=["position: absolute","top: 0","left: 0","width: 100vw","height: 100vh","border: 0","margin: 0","padding: 0px","box-sizing: content-box"];b.canvas.setAttribute("style",_.join("; ")+";"),z(b.canvas)}},ne.prototype.onViewerChanged_=function(v){this.deviceInfo_.setViewer(v),this.distorter_&&this.distorter_.updateDeviceInfo(this.deviceInfo_),this.fireVRDisplayDeviceParamsChange_()},ne.prototype.fireVRDisplayDeviceParamsChange_=function(){var v=new CustomEvent("vrdisplaydeviceparamschange",{detail:{vrdisplay:this,deviceInfo:this.deviceInfo_}});window.dispatchEvent(v)},ne.VRFrameData=Cu,ne.VRDisplay=j,ne})})(Zv);var DG=Zv.exports;const LG=Ny(DG);class yd extends fd{constructor(e){super(),this.global=e,this.onWindowResize=this.onWindowResize.bind(this),this.global.window.addEventListener("resize",this.onWindowResize),this.environmentBlendMode="opaque"}onBaseLayerSet(e,t){throw new Error("Not implemented")}isSessionSupported(e){throw new Error("Not implemented")}isFeatureSupported(e){throw new Error("Not implemented")}async requestSession(e,t){throw new Error("Not implemented")}requestAnimationFrame(e){throw new Error("Not implemented")}onFrameStart(e){throw new Error("Not implemented")}onFrameEnd(e){throw new Error("Not implemented")}doesSessionSupportReferenceSpace(e,t){throw new Error("Not implemented")}requestStageBounds(){throw new Error("Not implemented")}async requestFrameOfReferenceTransform(e,t){}cancelAnimationFrame(e){throw new Error("Not implemented")}endSession(e){throw new Error("Not implemented")}getViewSpaces(e){}getViewport(e,t,r,s,i){throw new Error("Not implemented")}getProjectionMatrix(e,t){throw new Error("Not implemented")}getBasePoseMatrix(){throw new Error("Not implemented")}getBaseViewMatrix(e){throw new Error("Not implemented")}getInputSources(){throw new Error("Not implemented")}getInputPose(e,t,r){throw new Error("Not implemented")}onWindowResize(){this.onWindowResize()}}let kG={mapping:"",profiles:["google-daydream","generic-trigger-touchpad"],buttons:{length:3,0:null,1:null,2:0}},FG={mapping:"xr-standard",profiles:["htc-vive-focus","generic-trigger-touchpad"],buttons:{length:3,0:1,1:null,2:0}},OG={mapping:"xr-standard",profiles:["oculus-go","generic-trigger-touchpad"],buttons:{length:3,0:1,1:null,2:0},gripTransform:{orientation:[Math.PI*.11,0,0,1]}},em={mapping:"xr-standard",displayProfiles:{"Oculus Quest":["oculus-touch-v2","oculus-touch","generic-trigger-squeeze-thumbstick"]},profiles:["oculus-touch","generic-trigger-squeeze-thumbstick"],axes:{length:4,0:null,1:null,2:0,3:1},buttons:{length:7,0:1,1:2,2:null,3:0,4:3,5:4,6:null},gripTransform:{position:[0,-.02,.04,1],orientation:[Math.PI*.11,0,0,1]}},UG={mapping:"xr-standard",profiles:["htc-vive","generic-trigger-squeeze-touchpad"],displayProfiles:{"HTC Vive":["htc-vive","generic-trigger-squeeze-touchpad"],"HTC Vive DVT":["htc-vive","generic-trigger-squeeze-touchpad"],"Valve Index":["valve-index","generic-trigger-squeeze-touchpad-thumbstick"]},buttons:{length:3,0:1,1:2,2:0},gripTransform:{position:[0,0,.05,1]},targetRayTransform:{orientation:[Math.PI*-.08,0,0,1]},userAgentOverrides:{Firefox:{axes:{invert:[1,3]}}}},BG={mapping:"xr-standard",profiles:["samsung-gearvr","generic-trigger-touchpad"],buttons:{length:3,0:1,1:null,2:0},gripTransform:{orientation:[Math.PI*.11,0,0,1]}},$G={mapping:"xr-standard",profiles:["samsung-odyssey","microsoft-mixed-reality","generic-trigger-squeeze-touchpad-thumbstick"],buttons:{length:4,0:1,1:0,2:2,3:4},gripTransform:{position:[0,-.02,.04,1],orientation:[Math.PI*.11,0,0,1]}},wc={mapping:"xr-standard",profiles:["microsoft-mixed-reality","generic-trigger-squeeze-touchpad-thumbstick"],buttons:{length:4,0:1,1:0,2:2,3:4},gripTransform:{position:[0,-.02,.04,1],orientation:[Math.PI*.11,0,0,1]}},zG={"Daydream Controller":kG,"Gear VR Controller":BG,"HTC Vive Focus Controller":FG,"Oculus Go Controller":OG,"Oculus Touch (Right)":em,"Oculus Touch (Left)":em,"OpenVR Gamepad":UG,"Spatial Controller (Spatial Interaction Source) 045E-065A":wc,"Spatial Controller (Spatial Interaction Source) 045E-065D":$G,"Windows Mixed Reality (Right)":wc,"Windows Mixed Reality (Left)":wc};const tm=_r(.155,-.465,-.15),VG=_r(-.155,-.465,-.15),GG=_r(0,0,-.25),WG=_r(0,0,.05),nm=_r(-.08,.14,.08),rm=.4,HG=.4,XG=.61,qG=.175,jG=.12,KG=.87,sm=180/Math.PI;function YG(n,e,t){function r(l,u,c){return l<u?u:l>c?c:l}var s=e[0]*e[0],i=e[1]*e[1],a=e[2]*e[2],o=e[3]*e[3];if(t==="XYZ")n[0]=Math.atan2(2*(e[0]*e[3]-e[1]*e[2]),o-s-i+a),n[1]=Math.asin(r(2*(e[0]*e[2]+e[1]*e[3]),-1,1)),n[2]=Math.atan2(2*(e[2]*e[3]-e[0]*e[1]),o+s-i-a);else if(t==="YXZ")n[0]=Math.asin(r(2*(e[0]*e[3]-e[1]*e[2]),-1,1)),n[1]=Math.atan2(2*(e[0]*e[2]+e[1]*e[3]),o-s-i+a),n[2]=Math.atan2(2*(e[0]*e[1]+e[2]*e[3]),o-s+i-a);else if(t==="ZXY")n[0]=Math.asin(r(2*(e[0]*e[3]+e[1]*e[2]),-1,1)),n[1]=Math.atan2(2*(e[1]*e[3]-e[2]*e[0]),o-s-i+a),n[2]=Math.atan2(2*(e[2]*e[3]-e[0]*e[1]),o-s+i-a);else if(t==="ZYX")n[0]=Math.atan2(2*(e[0]*e[3]+e[2]*e[1]),o-s-i+a),n[1]=Math.asin(r(2*(e[1]*e[3]-e[0]*e[2]),-1,1)),n[2]=Math.atan2(2*(e[0]*e[1]+e[2]*e[3]),o+s-i-a);else if(t==="YZX")n[0]=Math.atan2(2*(e[0]*e[3]-e[2]*e[1]),o-s+i-a),n[1]=Math.atan2(2*(e[1]*e[3]-e[0]*e[2]),o+s-i-a),n[2]=Math.asin(r(2*(e[0]*e[1]+e[2]*e[3]),-1,1));else if(t==="XZY")n[0]=Math.atan2(2*(e[0]*e[3]+e[1]*e[2]),o-s+i-a),n[1]=Math.atan2(2*(e[0]*e[2]+e[1]*e[3]),o+s-i-a),n[2]=Math.asin(r(2*(e[2]*e[3]-e[0]*e[1]),-1,1));else{console.log("No order given for quaternion to euler conversion.");return}}class QG{constructor(){this.hand="right",this.headElbowOffset=tm,this.controllerQ=yr(),this.lastControllerQ=yr(),this.headQ=yr(),this.headPos=Zr(),this.elbowPos=Zr(),this.wristPos=Zr(),this.time=null,this.lastTime=null,this.rootQ=yr(),this.position=Zr()}setHandedness(e){this.hand!=e&&(this.hand=e,this.hand=="left"?this.headElbowOffset=VG:this.headElbowOffset=tm)}update(e,t){this.time=Gv(),e&&(gc(this.lastControllerQ,this.controllerQ),gc(this.controllerQ,e)),t&&(Fv(this.headPos,t),Ov(this.headQ,t));let r=this.getHeadYawOrientation_(),s=this.quatAngle_(this.lastControllerQ,this.controllerQ),i=(this.time-this.lastTime)/1e3;s/i>XG?oo(this.rootQ,this.rootQ,r,Math.min(s/qG,1)):gc(this.rootQ,r);let o=_r(0,0,-1);qi(o,o,this.controllerQ);let l=pd(o,[0,1,0]),u=this.clamp_((l-jG)/KG,0,1),c=qp(this.rootQ);Xp(c,c),Hp(c,c,this.controllerQ);let h=this.elbowPos;Gp(h,this.headPos),ja(h,h,this.headElbowOffset);let d=Vp(nm);Wp(d,d,u),ja(h,h,d);let m=this.quatAngle_(c,yr())*sm,y=1-Math.pow(m/180,4);sssss;let p=rm,g=1-rm,A=y*(p+g*u*HG),x=yr();oo(x,x,c,A);let S=Xp(yr(),x),E=qp(c);Hp(E,E,S);let M=this.wristPos;Gp(M,WG),qi(M,M,x),ja(M,M,GG),qi(M,M,E),ja(M,M,h);let R=Vp(nm);Wp(R,R,u),ja(this.position,this.wristPos,R),qi(this.position,this.position,this.rootQ),this.lastTime=this.time}getPosition(){return this.position}getHeadYawOrientation_(){let e=Zr();return YG(e,this.headQ,"YXZ"),xG(yr(),0,e[1]*sm,0)}clamp_(e,t,r){return Math.min(Math.max(e,t),r)}quatAngle_(e,t){let r=[0,0,-1],s=[0,0,-1];return qi(r,r,e),qi(s,s,t),uG(r,s)}}const bn=Symbol("@@webxr-polyfill/XRRemappedGamepad"),Jv={pressed:!1,touched:!1,value:0};Object.freeze(Jv);class ZG{constructor(e,t,r){if(r||(r={}),r.userAgentOverrides){for(let u in r.userAgentOverrides)if(navigator.userAgent.includes(u)){let c=r.userAgentOverrides[u];for(let h in c)h in r?Object.assign(r[h],c[h]):r[h]=c[h];break}}let s=new Array(r.axes&&r.axes.length?r.axes.length:e.axes.length),i=new Array(r.buttons&&r.buttons.length?r.buttons.length:e.buttons.length),a=null;if(r.gripTransform){let u=r.gripTransform.orientation||[0,0,0,1];a=xi(),So(a,Ql(u,u),r.gripTransform.position||[0,0,0])}let o=null;if(r.targetRayTransform){let u=r.targetRayTransform.orientation||[0,0,0,1];o=xi(),So(o,Ql(u,u),r.targetRayTransform.position||[0,0,0])}let l=r.profiles;r.displayProfiles&&t.displayName in r.displayProfiles&&(l=r.displayProfiles[t.displayName]),this[bn]={gamepad:e,map:r,profiles:l||[e.id],mapping:r.mapping||e.mapping,axes:s,buttons:i,gripTransform:a,targetRayTransform:o},this._update()}_update(){let e=this[bn].gamepad,t=this[bn].map,r=this[bn].axes;for(let i=0;i<r.length;++i)t.axes&&i in t.axes?t.axes[i]===null?r[i]=0:r[i]=e.axes[t.axes[i]]:r[i]=e.axes[i];if(t.axes&&t.axes.invert)for(let i of t.axes.invert)i<r.length&&(r[i]*=-1);let s=this[bn].buttons;for(let i=0;i<s.length;++i)t.buttons&&i in t.buttons?t.buttons[i]===null?s[i]=Jv:s[i]=e.buttons[t.buttons[i]]:s[i]=e.buttons[i]}get id(){return""}get _profiles(){return this[bn].profiles}get index(){return-1}get connected(){return this[bn].gamepad.connected}get timestamp(){return this[bn].gamepad.timestamp}get mapping(){return this[bn].mapping}get axes(){return this[bn].axes}get buttons(){return this[bn].buttons}get hapticActuators(){return this[bn].gamepad.hapticActuators}}class JG{constructor(e,t,r=0,s=-1){this.polyfill=e,this.display=t,this.nativeGamepad=null,this.gamepad=null,this.inputSource=new Kv(this),this.lastPosition=Zr(),this.emulatedPosition=!1,this.basePoseMatrix=xi(),this.outputMatrix=xi(),this.primaryButtonIndex=r,this.primaryActionPressed=!1,this.primarySqueezeButtonIndex=s,this.primarySqueezeActionPressed=!1,this.handedness="",this.targetRayMode="gaze",this.armModel=null}get profiles(){return this.gamepad?this.gamepad._profiles:[]}updateFromGamepad(e){this.nativeGamepad!==e&&(this.nativeGamepad=e,e?this.gamepad=new ZG(e,this.display,zG[e.id]):this.gamepad=null),this.handedness=e.hand===""?"none":e.hand,this.gamepad&&this.gamepad._update(),e.pose?(this.targetRayMode="tracked-pointer",this.emulatedPosition=!e.pose.hasPosition):e.hand===""&&(this.targetRayMode="gaze",this.emulatedPosition=!1)}updateBasePoseMatrix(){if(this.nativeGamepad&&this.nativeGamepad.pose){let e=this.nativeGamepad.pose,t=e.position,r=e.orientation;if(!t&&!r)return;t?(this.lastPosition[0]=t[0],this.lastPosition[1]=t[1],this.lastPosition[2]=t[2]):e.hasPosition?t=this.lastPosition:(this.armModel||(this.armModel=new QG),this.armModel.setHandedness(this.nativeGamepad.hand),this.armModel.update(r,this.polyfill.getBasePoseMatrix()),t=this.armModel.getPosition()),So(this.basePoseMatrix,r,t)}else oG(this.basePoseMatrix,this.polyfill.getBasePoseMatrix());return this.basePoseMatrix}getXRPose(e,t){switch(this.updateBasePoseMatrix(),t){case"target-ray":e._transformBasePoseMatrix(this.outputMatrix,this.basePoseMatrix),this.gamepad&&this.gamepad[bn].targetRayTransform&&oa(this.outputMatrix,this.outputMatrix,this.gamepad[bn].targetRayTransform);break;case"grip":if(!this.nativeGamepad||!this.nativeGamepad.pose)return null;e._transformBasePoseMatrix(this.outputMatrix,this.basePoseMatrix),this.gamepad&&this.gamepad[bn].gripTransform&&oa(this.outputMatrix,this.outputMatrix,this.gamepad[bn].gripTransform);break;default:return null}return e._adjustForOriginOffset(this.outputMatrix),new XRPose(new XRRigidTransform(this.outputMatrix),this.emulatedPosition)}}const e7=!1,im={highRefreshRate:!0},am={oculus:1,openvr:1,"spatial controller (spatial interaction source)":1};let t7=0,n7=class{constructor(e,t,r={}){if(this.mode=e,this.enabledFeatures=t,this.outputContext=null,this.immersive=e=="immersive-vr"||e=="immersive-ar",this.ended=null,this.baseLayer=null,this.id=++t7,this.modifiedCanvasLayer=!1,this.outputContext&&!e7){const s=r.renderContextType||"2d";this.renderContext=this.outputContext.canvas.getContext(s)}}};class ex extends yd{constructor(e,t){const{canPresent:r}=t.capabilities;super(e),this.display=t,this.frame=new e.VRFrameData,this.sessions=new Map,this.immersiveSession=null,this.canPresent=r,this.baseModelMatrix=xi(),this.gamepadInputSources={},this.tempVec3=new Float32Array(3),this.onVRDisplayPresentChange=this.onVRDisplayPresentChange.bind(this),e.window.addEventListener("vrdisplaypresentchange",this.onVRDisplayPresentChange),this.CAN_USE_GAMEPAD=e.navigator&&"getGamepads"in e.navigator,this.HAS_BITMAP_SUPPORT=IG(e)}get depthNear(){return this.display.depthNear}set depthNear(e){this.display.depthNear=e}get depthFar(){return this.display.depthFar}set depthFar(e){this.display.depthFar=e}onBaseLayerSet(e,t){const r=this.sessions.get(e),s=t.context.canvas;if(r.immersive){const i=this.display.getEyeParameters("left"),a=this.display.getEyeParameters("right");s.width=Math.max(i.renderWidth,a.renderWidth)*2,s.height=Math.max(i.renderHeight,a.renderHeight),this.display.requestPresent([{source:s,attributes:im}]).then(()=>{this.global.document.body.contains(s)||(r.modifiedCanvasLayer=!0,this.global.document.body.appendChild(s),PG(s)),r.baseLayer=t})}else r.baseLayer=t}isSessionSupported(e){return!(e=="immersive-ar"||e=="immersive-vr"&&this.canPresent===!1)}isFeatureSupported(e){switch(e){case"viewer":return!0;case"local":return!0;case"local-floor":return!0;case"bounded":return!1;case"unbounded":return!1;default:return!1}}async requestSession(e,t){if(!this.isSessionSupported(e))return Promise.reject();let r=e=="immersive-vr";if(r){const i=this.global.document.createElement("canvas");i.getContext("webgl"),await this.display.requestPresent([{source:i,attributes:im}])}const s=new n7(e,t,{renderContextType:this.HAS_BITMAP_SUPPORT?"bitmaprenderer":"2d"});return this.sessions.set(s.id,s),r&&(this.immersiveSession=s,this.dispatchEvent("@@webxr-polyfill/vr-present-start",s.id)),Promise.resolve(s.id)}requestAnimationFrame(e){return this.display.requestAnimationFrame(e)}getPrimaryButtonIndex(e){let t=0,r=e.id.toLowerCase();for(let s in am)if(r.includes(s)){t=am[s];break}return Math.min(t,e.buttons.length-1)}onFrameStart(e,t){this.display.depthNear=t.depthNear,this.display.depthFar=t.depthFar,this.display.getFrameData(this.frame);const r=this.sessions.get(e);if(r.immersive&&this.CAN_USE_GAMEPAD){let s=this.gamepadInputSources;this.gamepadInputSources={};let i=this.global.navigator.getGamepads();for(let a=0;a<i.length;++a){let o=i[a];if(o&&o.displayId>0){let l=s[a];if(l||(l=new JG(this,this.display,this.getPrimaryButtonIndex(o))),l.updateFromGamepad(o),this.gamepadInputSources[a]=l,l.primaryButtonIndex!=-1){let u=o.buttons[l.primaryButtonIndex].pressed;u&&!l.primaryActionPressed?this.dispatchEvent("@@webxr-polyfill/input-select-start",{sessionId:r.id,inputSource:l.inputSource}):!u&&l.primaryActionPressed&&this.dispatchEvent("@@webxr-polyfill/input-select-end",{sessionId:r.id,inputSource:l.inputSource}),l.primaryActionPressed=u}if(l.primarySqueezeButtonIndex!=-1){let u=o.buttons[l.primarySqueezeButtonIndex].pressed;u&&!l.primarySqueezeActionPressed?this.dispatchEvent("@@webxr-polyfill/input-squeeze-start",{sessionId:r.id,inputSource:l.inputSource}):!u&&l.primarySqueezeActionPressed&&this.dispatchEvent("@@webxr-polyfill/input-squeeze-end",{sessionId:r.id,inputSource:l.inputSource}),l.primarySqueezeActionPressed=u}}}}if(!r.immersive&&r.baseLayer){const s=r.baseLayer.context.canvas;Uv(this.frame.leftProjectionMatrix,t.inlineVerticalFieldOfView,s.width/s.height,t.depthNear,t.depthFar)}}onFrameEnd(e){const t=this.sessions.get(e);if(!(t.ended||!t.baseLayer)){if(t.outputContext&&!(t.immersive&&!this.display.capabilities.hasExternalDisplay)){const r=t.immersive&&this.display.capabilities.hasExternalDisplay,s=t.baseLayer.context.canvas,i=r?s.width/2:s.width,a=s.height;{const o=t.outputContext.canvas,l=o.width,u=o.height,c=t.renderContext;this.HAS_BITMAP_SUPPORT?s.transferToImageBitmap?c.transferFromImageBitmap(s.transferToImageBitmap()):this.global.createImageBitmap(s,0,0,i,a,{resizeWidth:l,resizeHeight:u}).then(h=>c.transferFromImageBitmap(h)):c.drawImage(s,0,0,i,a,0,0,l,u)}}t.immersive&&t.baseLayer&&this.display.submitFrame()}}cancelAnimationFrame(e){this.display.cancelAnimationFrame(e)}async endSession(e){const t=this.sessions.get(e);if(!t.ended){if(t.immersive)return this.display.exitPresent();t.ended=!0}}doesSessionSupportReferenceSpace(e,t){const r=this.sessions.get(e);return r.ended?!1:r.enabledFeatures.has(t)}requestStageBounds(){if(this.display.stageParameters){const e=this.display.stageParameters.sizeX,t=this.display.stageParameters.sizeZ,r=[];return r.push(-e/2),r.push(-t/2),r.push(e/2),r.push(-t/2),r.push(e/2),r.push(t/2),r.push(-e/2),r.push(t/2),r}return null}async requestFrameOfReferenceTransform(e,t){return(e==="local-floor"||e==="bounded-floor")&&this.display.stageParameters&&this.display.stageParameters.sittingToStandingTransform?this.display.stageParameters.sittingToStandingTransform:null}getProjectionMatrix(e){if(e==="left")return this.frame.leftProjectionMatrix;if(e==="right")return this.frame.rightProjectionMatrix;if(e==="none")return this.frame.leftProjectionMatrix;throw new Error("eye must be of type 'left' or 'right'")}getViewport(e,t,r,s){const i=this.sessions.get(e),{width:a,height:o}=r.context.canvas;if(!i.immersive)return s.x=s.y=0,s.width=a,s.height=o,!0;if(t==="left"||t==="none")s.x=0;else if(t==="right")s.x=a/2;else return!1;return s.y=0,s.width=a/2,s.height=o,!0}getBasePoseMatrix(){let{position:e,orientation:t}=this.frame.pose;return!e&&!t?this.baseModelMatrix:(e||(e=this.tempVec3,e[0]=e[1]=e[2]=0),So(this.baseModelMatrix,t,e),this.baseModelMatrix)}getBaseViewMatrix(e){if(e==="left"||e==="none")return this.frame.leftViewMatrix;if(e==="right")return this.frame.rightViewMatrix;throw new Error("eye must be of type 'left' or 'right'")}getInputSources(){let e=[];for(let t in this.gamepadInputSources)e.push(this.gamepadInputSources[t].inputSource);return e}getInputPose(e,t,r){if(!t)return null;for(let s in this.gamepadInputSources){let i=this.gamepadInputSources[s];if(i.inputSource===e)return i.getXRPose(t,r)}return null}onWindowResize(){}onVRDisplayPresentChange(e){this.display.isPresenting||this.sessions.forEach(t=>{if(t.immersive&&!t.ended){if(t.modifiedCanvasLayer){const r=t.baseLayer.context.canvas;document.body.removeChild(r),r.setAttribute("style","")}this.immersiveSession===t&&(this.immersiveSession=null),this.dispatchEvent("@@webxr-polyfill/vr-present-end",t.id)}})}}class r7 extends ex{constructor(e,t){const r=new LG(t||{});super(e,r),this.display=r,this.frame={rightViewMatrix:new Float32Array(16),leftViewMatrix:new Float32Array(16),rightProjectionMatrix:new Float32Array(16),leftProjectionMatrix:new Float32Array(16),pose:null,timestamp:null}}}let s7=0;class i7{constructor(e,t){this.mode=e,this.enabledFeatures=t,this.ended=null,this.baseLayer=null,this.id=++s7}}class a7 extends yd{constructor(e){super(e),this.sessions=new Map,this.projectionMatrix=xi(),this.identityMatrix=xi()}onBaseLayerSet(e,t){const r=this.sessions.get(e);r.baseLayer=t}isSessionSupported(e){return e=="inline"}isFeatureSupported(e){switch(e){case"viewer":return!0;default:return!1}}async requestSession(e,t){if(!this.isSessionSupported(e))return Promise.reject();const r=new i7(e,t);return this.sessions.set(r.id,r),Promise.resolve(r.id)}requestAnimationFrame(e){return window.requestAnimationFrame(e)}cancelAnimationFrame(e){window.cancelAnimationFrame(e)}onFrameStart(e,t){const r=this.sessions.get(e);if(r.baseLayer){const s=r.baseLayer.context.canvas;Uv(this.projectionMatrix,t.inlineVerticalFieldOfView,s.width/s.height,t.depthNear,t.depthFar)}}onFrameEnd(e){}async endSession(e){const t=this.sessions.get(e);t.ended=!0}doesSessionSupportReferenceSpace(e,t){const r=this.sessions.get(e);return r.ended?!1:r.enabledFeatures.has(t)}requestStageBounds(){return null}async requestFrameOfReferenceTransform(e,t){return null}getProjectionMatrix(e){return this.projectionMatrix}getViewport(e,t,r,s){this.sessions.get(e);const{width:i,height:a}=r.context.canvas;return s.x=s.y=0,s.width=i,s.height=a,!0}getBasePoseMatrix(){return this.identityMatrix}getBaseViewMatrix(e){return this.identityMatrix}getInputSources(){return[]}getInputPose(e,t,r){return null}onWindowResize(){}}const o7=async function(n){let e=null;if("getVRDisplays"in n.navigator)try{const t=await n.navigator.getVRDisplays();t&&t.length&&(e=new ex(n,t[0]))}catch{}return e},l7=async function(n,e){if(e.webvr){let r=await o7(n);if(r)return r}let t=NG(n);return t&&e.cardboard||!t&&e.allowCardboardOnDesktop?(n.VRFrameData||(n.VRFrameData=function(){this.rightViewMatrix=new Float32Array(16),this.leftViewMatrix=new Float32Array(16),this.rightProjectionMatrix=new Float32Array(16),this.leftProjectionMatrix=new Float32Array(16),this.pose=null}),new r7(n,e.cardboardConfig)):new a7(n)},u7={global:Vv,webvr:!0,cardboard:!0,cardboardConfig:null,allowCardboardOnDesktop:!1},vl=["navigator","HTMLCanvasElement","WebGLRenderingContext"];class c7{constructor(e={}){this.config=Object.freeze(Object.assign({},u7,e)),this.global=this.config.global,this.nativeWebXR="xr"in this.global.navigator,this.injected=!1,this._injectPolyfill(this.global)}_injectPolyfill(e){if(!vl.every(t=>!!e[t]))throw new Error(`Global must have the following attributes : ${vl}`);for(const t of Object.keys(lo))e[t]!==void 0?console.warn(`${t} already defined on global.`):e[t]=lo[t];Zp(e.WebGLRenderingContext),Jp(e.HTMLCanvasElement),e.OffscreenCanvas&&Jp(e.OffscreenCanvas),e.WebGL2RenderingContext&&Zp(e.WebGL2RenderingContext),window.isSecureContext||console.warn(`WebXR Polyfill Warning:
This page is not running in a secure context (https:// or localhost)!
This means that although the page may be able to use the WebXR Polyfill it will
not be able to use native WebXR implementations, and as such will not be able to
access dedicated VR or AR hardware, and will not be able to take advantage of
any performance improvements a native WebXR implementation may offer. Please
host this content on a secure origin for the best user experience.
`),this.injected=!0,this._patchNavigatorXR()}_patchNavigatorXR(){let e=l7(this.global,this.config);this.xr=new lo.XRSystem(e),Object.defineProperty(this.global.navigator,"xr",{value:this.xr,configurable:!0})}_injectCompatibilityShims(e){if(!vl.every(t=>!!e[t]))throw new Error(`Global must have the following attributes : ${vl}`);if(e.navigator.xr&&"supportsSession"in e.navigator.xr&&!("isSessionSupported"in e.navigator.xr)){let t=e.navigator.xr.supportsSession;e.navigator.xr.isSessionSupported=function(r){return t.call(this,r).then(()=>!0).catch(()=>!1)},e.navigator.xr.supportsSession=function(r){return console.warn("navigator.xr.supportsSession() is deprecated. Please call navigator.xr.isSessionSupported() instead and check the boolean value returned when the promise resolves."),t.call(this,r)}}}}var h7=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function d7(n,e){return e={exports:{}},n(e,e.exports),e.exports}var tx=d7(function(n){(function(e,t){var r=Math.pow(2,-24),s=Math.pow(2,32),i=Math.pow(2,53);function a(u){var c=new ArrayBuffer(256),h=new DataView(c),d,f=0;function m($){for(var q=c.byteLength,z=f+$;q<z;)q*=2;if(q!==c.byteLength){var F=h;c=new ArrayBuffer(q),h=new DataView(c);for(var X=f+3>>2,Q=0;Q<X;++Q)h.setUint32(Q*4,F.getUint32(Q*4))}return d=$,h}function y(){f+=d}function p($){y(m(8).setFloat64(f,$))}function g($){y(m(1).setUint8(f,$))}function A($){for(var q=m($.length),z=0;z<$.length;++z)q.setUint8(f+z,$[z]);y()}function x($){y(m(2).setUint16(f,$))}function S($){y(m(4).setUint32(f,$))}function E($){var q=$%s,z=($-q)/s,F=m(8);F.setUint32(f,z),F.setUint32(f+4,q),y()}function M($,q){q<24?g($<<5|q):q<256?(g($<<5|24),g(q)):q<65536?(g($<<5|25),x(q)):q<4294967296?(g($<<5|26),S(q)):(g($<<5|27),E(q))}function R($){var q;if($===!1)return g(244);if($===!0)return g(245);if($===null)return g(246);if($===t)return g(247);switch(typeof $){case"number":if(Math.floor($)===$){if(0<=$&&$<=i)return M(0,$);if(-i<=$&&$<0)return M(1,-($+1))}return g(251),p($);case"string":var z=[];for(q=0;q<$.length;++q){var F=$.charCodeAt(q);F<128?z.push(F):F<2048?(z.push(192|F>>6),z.push(128|F&63)):F<55296?(z.push(224|F>>12),z.push(128|F>>6&63),z.push(128|F&63)):(F=(F&1023)<<10,F|=$.charCodeAt(++q)&1023,F+=65536,z.push(240|F>>18),z.push(128|F>>12&63),z.push(128|F>>6&63),z.push(128|F&63))}return M(3,z.length),A(z);default:var X;if(Array.isArray($))for(X=$.length,M(4,X),q=0;q<X;++q)R($[q]);else if($ instanceof Uint8Array)M(2,$.length),A($);else{var Q=Object.keys($);for(X=Q.length,M(5,X),q=0;q<X;++q){var Z=Q[q];R(Z),R($[Z])}}}}if(R(u),"slice"in c)return c.slice(0,f);for(var O=new ArrayBuffer(f),C=new DataView(O),N=0;N<f;++N)C.setUint8(N,h.getUint8(N));return O}function o(u,c,h){var d=new DataView(u),f=0;typeof c!="function"&&(c=function(z){return z}),typeof h!="function"&&(h=function(){return t});function m(z,F){return f+=F,z}function y(z){return m(new Uint8Array(u,f,z),z)}function p(){var z=new ArrayBuffer(4),F=new DataView(z),X=S(),Q=X&32768,Z=X&31744,ie=X&1023;if(Z===31744)Z=261120;else if(Z!==0)Z+=127-15<<10;else if(ie!==0)return ie*r;return F.setUint32(0,Q<<16|Z<<13|ie<<13),F.getFloat32(0)}function g(){return m(d.getFloat32(f),4)}function A(){return m(d.getFloat64(f),8)}function x(){return m(d.getUint8(f),1)}function S(){return m(d.getUint16(f),2)}function E(){return m(d.getUint32(f),4)}function M(){return E()*s+E()}function R(){return d.getUint8(f)!==255?!1:(f+=1,!0)}function O(z){if(z<24)return z;if(z===24)return x();if(z===25)return S();if(z===26)return E();if(z===27)return M();if(z===31)return-1;throw"Invalid length encoding"}function C(z){var F=x();if(F===255)return-1;var X=O(F&31);if(X<0||F>>5!==z)throw"Invalid indefinite length element";return X}function N(z,F){for(var X=0;X<F;++X){var Q=x();Q&128&&(Q<224?(Q=(Q&31)<<6|x()&63,F-=1):Q<240?(Q=(Q&15)<<12|(x()&63)<<6|x()&63,F-=2):(Q=(Q&15)<<18|(x()&63)<<12|(x()&63)<<6|x()&63,F-=3)),Q<65536?z.push(Q):(Q-=65536,z.push(55296|Q>>10),z.push(56320|Q&1023))}}function $(){var z=x(),F=z>>5,X=z&31,Q,Z;if(F===7)switch(X){case 25:return p();case 26:return g();case 27:return A()}if(Z=O(X),Z<0&&(F<2||6<F))throw"Invalid length";switch(F){case 0:return Z;case 1:return-1-Z;case 2:if(Z<0){for(var ie=[],de=0;(Z=C(F))>=0;)de+=Z,ie.push(y(Z));var ve=new Uint8Array(de),J=0;for(Q=0;Q<ie.length;++Q)ve.set(ie[Q],J),J+=ie[Q].length;return ve}return y(Z);case 3:var fe=[];if(Z<0)for(;(Z=C(F))>=0;)N(fe,Z);else N(fe,Z);return String.fromCharCode.apply(null,fe);case 4:var K;if(Z<0)for(K=[];!R();)K.push($());else for(K=new Array(Z),Q=0;Q<Z;++Q)K[Q]=$();return K;case 5:var xe={};for(Q=0;Q<Z||Z<0&&!R();++Q){var Me=$();xe[Me]=$()}return xe;case 6:return c($(),Z);case 7:switch(Z){case 20:return!1;case 21:return!0;case 22:return null;case 23:return t;default:return h(Z)}}}var q=$();if(f!==u.byteLength)throw"Remaining bytes";return q}var l={encode:a,decode:o};typeof t=="function"&&t.amd?t("cbor/cbor",l):n.exports?n.exports=l:e.CBOR||(e.CBOR=l)})(h7)});/**
 * This files defines the HoloPlayClient class and Message class.
 *
 * Copyright (c) [2019] [Looking Glass Factory]
 *
 * @link    https://lookingglassfactory.com/
 * @file    This files defines the HoloPlayClient class and Message class.
 * @author  Looking Glass Factory.
 * @version 0.0.8
 * @license SEE LICENSE IN LICENSE.md
 */const f7=typeof window>"u"?require("ws"):window.WebSocket;class p7{constructor(e,t,r,s=!1,i,a,o){this.reqs=[],this.reps=[],this.requestId=this.getRequestId(),this.debug=s,this.isGreedy=a,this.errCallback=t,this.closeCallback=r,this.alwaysdebug=!1,this.isConnected=!1;let l=null;i||a||o?l=new m7(i,a,o,this.debug):(s&&(this.alwaysdebug=!0),typeof e=="function"&&(l=new g7)),this.openWebsocket(l,e)}sendMessage(e,t=60){this.alwaysdebug&&(e.cmd.debug=!0);let r=e.toCbor();return this.sendRequestObj(r,t)}disconnect(){this.ws.close()}openWebsocket(e=null,t=null){this.ws=new f7("ws://localhost:11222/driver",["rep.sp.nanomsg.org"]),this.ws.parent=this,this.ws.binaryType="arraybuffer",this.ws.onmessage=this.messageHandler,this.ws.onopen=()=>{this.isConnected=!0,this.debug&&console.log("socket open"),e!=null&&this.sendMessage(e).then(t)},this.ws.onerror=this.onSocketError,this.ws.onclose=this.onClose}sendRequestObj(e,t){return new Promise((r,s)=>{let i={id:this.requestId++,parent:this,payload:e,success:r,error:s,send:function(){this.debug&&console.log("attemtping to send request with ID "+this.id),this.timeout=setTimeout(i.send.bind(this),t*1e3);let a=new Uint8Array(e.byteLength+4);new DataView(a.buffer).setUint32(0,this.id),a.set(new Uint8Array(this.payload),4),this.parent.ws.send(a.buffer)}};this.reqs.push(i),i.send()})}messageHandler(e){console.log("message");let t=e.data;if(t.byteLength<4)return;let s=new DataView(t).getUint32(0);if(s<2147483648){this.parent.err("bad nng header");return}let i=this.parent.findReqIndex(s);if(i==-1){this.parent.err("got reply that doesn't match known request!");return}let a={id:s,payload:tx.decode(t.slice(4))};a.payload.error==0?this.parent.reqs[i].success(a.payload):this.parent.reqs[i].error(a.payload),clearTimeout(this.parent.reqs[i].timeout),this.parent.reqs.splice(i,1),this.parent.reps.push(a),this.debug&&console.log(a.payload)}getRequestId(){return Math.floor(this.prng()*2147483647)+2147483648}onClose(e){this.parent.isConnected=!1,this.parent.debug&&console.log("socket closed"),typeof this.parent.closeCallback=="function"&&this.parent.closeCallback(e)}onSocketError(e){this.parent.debug&&console.log(e),typeof this.parent.errCallback=="function"&&this.parent.errCallback(e)}err(e){this.debug&&console.log("[DRIVER ERROR]"+e)}findReqIndex(e){let t=0;for(;t<this.reqs.length;t++)if(this.reqs[t].id==e)return t;return-1}prng(){return this.rng==null&&(this.rng=y7()),this.rng()}}class nx{constructor(e,t){this.cmd=e,this.bin=t}toCbor(){return tx.encode(this)}}class m7 extends nx{constructor(e="",t=!1,r="",s=!1){let i={init:{}};e!=""&&(i.init.appid=e),r!=""&&(i.init.onclose=r),t&&(i.init.greedy=!0),s&&(i.init.debug=!0),super(i,null)}}class g7 extends nx{constructor(){let e={info:{}};super(e,null)}}function y7(){function n(s){for(var i=0,a=1779033703^s.length;i<s.length;i++)a=Math.imul(a^s.charCodeAt(i),3432918353),a=a<<13|a>>>19;return function(){return a=Math.imul(a^a>>>16,2246822507),a=Math.imul(a^a>>>13,3266489909),(a^=a>>>16)>>>0}}function e(s,i,a,o){return()=>{var l=i<<9,u=s*5;return u=(u<<7|u>>>25)*9,a^=s,o^=i,i^=a,s^=o,a^=l,o=o<<11|o>>>21,(u>>>0)/4294967296}}var t=Date.now(),r=n(t.toString());return e(r(),r(),r(),r())}function v7(n,...e){let t=n[0];for(let r=1;r<n.length;++r){const s=e[r-1];t+=typeof s=="number"?s.toPrecision(10):s,t+=n[r]}return t}function Ac(n){return v7`
  precision mediump float;
  uniform int u_viewType;
  uniform sampler2D u_texture;
  varying vec2 v_texcoord;
  const float pitch    = ${n.pitch};
  const float tilt     = ${n.tilt};
  const float center   = ${n.calibration.center.value};
  const float invView  = ${n.calibration.invView.value};
  const float flipX    = ${n.calibration.flipImageX.value};
  const float flipY    = ${n.calibration.flipImageY.value};
  const float subp     = ${n.subp};
  const float numViews = ${n.numViews};
  const float tilesX   = ${n.quiltWidth};
  const float tilesY   = ${n.quiltHeight};
  const vec2 quiltViewPortion = vec2(
    ${n.quiltWidth*n.tileWidth/n.framebufferWidth},
    ${n.quiltHeight*n.tileHeight/n.framebufferHeight});
  vec2 texArr(vec3 uvz) {
    float z = floor(uvz.z * numViews);
    float x = (mod(z, tilesX) + uvz.x) / tilesX;
    float y = (floor(z / tilesX) + uvz.y) / tilesY;
    return vec2(x, y) * quiltViewPortion;
  }
  float remap(float value, float from1, float to1, float from2, float to2) {
    return (value - from1) / (to1 - from1) * (to2 - from2) + from2;
  }
  void main() {
    if (u_viewType == 2) { // "quilt" view
      gl_FragColor = texture2D(u_texture, v_texcoord);
      return;
    }
    if (u_viewType == 1) { // middle view
      gl_FragColor = texture2D(u_texture, texArr(vec3(v_texcoord.x, v_texcoord.y, 0.5)));
      return;
    }
    vec4 rgb[3];
    vec3 nuv = vec3(v_texcoord.xy, 0.0);
    // Flip UVs if necessary
    nuv.x = (1.0 - flipX) * nuv.x + flipX * (1.0 - nuv.x);
    nuv.y = (1.0 - flipY) * nuv.y + flipY * (1.0 - nuv.y);
    for (int i = 0; i < 3; i++) {
      nuv.z = (v_texcoord.x + float(i) * subp + v_texcoord.y * tilt) * pitch - center;
      nuv.z = mod(nuv.z + ceil(abs(nuv.z)), 1.0);
      nuv.z = (1.0 - invView) * nuv.z + invView * (1.0 - nuv.z);
      rgb[i] = texture2D(u_texture, texArr(vec3(v_texcoord.x, v_texcoord.y, nuv.z)));
    }
    gl_FragColor = vec4(rgb[0].r, rgb[1].g, rgb[2].b, 1);
  }
`}var x7=1e-6,om=typeof Float32Array<"u"?Float32Array:Array;function vs(){var n=new om(16);return om!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0),n[0]=1,n[5]=1,n[10]=1,n[15]=1,n}function b7(n,e,t,r,s,i,a,o,l,u,c,h,d,f,m,y,p){return n[0]=e,n[1]=t,n[2]=r,n[3]=s,n[4]=i,n[5]=a,n[6]=o,n[7]=l,n[8]=u,n[9]=c,n[10]=h,n[11]=d,n[12]=f,n[13]=m,n[14]=y,n[15]=p,n}function lm(n,e){var t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],m=e[12],y=e[13],p=e[14],g=e[15],A=t*o-r*a,x=t*l-s*a,S=t*u-i*a,E=r*l-s*o,M=r*u-i*o,R=s*u-i*l,O=c*y-h*m,C=c*p-d*m,N=c*g-f*m,$=h*p-d*y,q=h*g-f*y,z=d*g-f*p,F=A*z-x*q+S*$+E*N-M*C+R*O;return F?(F=1/F,n[0]=(o*z-l*q+u*$)*F,n[1]=(s*q-r*z-i*$)*F,n[2]=(y*R-p*M+g*E)*F,n[3]=(d*M-h*R-f*E)*F,n[4]=(l*N-a*z-u*C)*F,n[5]=(t*z-s*N+i*C)*F,n[6]=(p*S-m*R-g*x)*F,n[7]=(c*R-d*S+f*x)*F,n[8]=(a*q-o*N+u*O)*F,n[9]=(r*N-t*q-i*O)*F,n[10]=(m*M-y*S+g*A)*F,n[11]=(h*S-c*M-f*A)*F,n[12]=(o*C-a*$-l*O)*F,n[13]=(t*$-r*C+s*O)*F,n[14]=(y*x-m*E-p*A)*F,n[15]=(c*E-h*x+d*A)*F,n):null}function um(n,e,t){var r=t[0],s=t[1],i=t[2],a=void 0,o=void 0,l=void 0,u=void 0,c=void 0,h=void 0,d=void 0,f=void 0,m=void 0,y=void 0,p=void 0,g=void 0;return e===n?(n[12]=e[0]*r+e[4]*s+e[8]*i+e[12],n[13]=e[1]*r+e[5]*s+e[9]*i+e[13],n[14]=e[2]*r+e[6]*s+e[10]*i+e[14],n[15]=e[3]*r+e[7]*s+e[11]*i+e[15]):(a=e[0],o=e[1],l=e[2],u=e[3],c=e[4],h=e[5],d=e[6],f=e[7],m=e[8],y=e[9],p=e[10],g=e[11],n[0]=a,n[1]=o,n[2]=l,n[3]=u,n[4]=c,n[5]=h,n[6]=d,n[7]=f,n[8]=m,n[9]=y,n[10]=p,n[11]=g,n[12]=a*r+c*s+m*i+e[12],n[13]=o*r+h*s+y*i+e[13],n[14]=l*r+d*s+p*i+e[14],n[15]=u*r+f*s+g*i+e[15]),n}function cm(n,e,t,r){var s=r[0],i=r[1],a=r[2],o=Math.sqrt(s*s+i*i+a*a),l=void 0,u=void 0,c=void 0,h=void 0,d=void 0,f=void 0,m=void 0,y=void 0,p=void 0,g=void 0,A=void 0,x=void 0,S=void 0,E=void 0,M=void 0,R=void 0,O=void 0,C=void 0,N=void 0,$=void 0,q=void 0,z=void 0,F=void 0,X=void 0;return o<x7?null:(o=1/o,s*=o,i*=o,a*=o,l=Math.sin(t),u=Math.cos(t),c=1-u,h=e[0],d=e[1],f=e[2],m=e[3],y=e[4],p=e[5],g=e[6],A=e[7],x=e[8],S=e[9],E=e[10],M=e[11],R=s*s*c+u,O=i*s*c+a*l,C=a*s*c-i*l,N=s*i*c-a*l,$=i*i*c+u,q=a*i*c+s*l,z=s*a*c+i*l,F=i*a*c-s*l,X=a*a*c+u,n[0]=h*R+y*O+x*C,n[1]=d*R+p*O+S*C,n[2]=f*R+g*O+E*C,n[3]=m*R+A*O+M*C,n[4]=h*N+y*$+x*q,n[5]=d*N+p*$+S*q,n[6]=f*N+g*$+E*q,n[7]=m*N+A*$+M*q,n[8]=h*z+y*F+x*X,n[9]=d*z+p*F+S*X,n[10]=f*z+g*F+E*X,n[11]=m*z+A*F+M*X,e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n)}function Sc(n,e){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=e[0],n[13]=e[1],n[14]=e[2],n[15]=1,n}function w7(n,e,t,r,s){var i=1/Math.tan(e/2),a=void 0;return n[0]=i/t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=i,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=-1,n[12]=0,n[13]=0,n[15]=0,s!=null&&s!==1/0?(a=1/(r-s),n[10]=(s+r)*a,n[14]=2*s*r*a):(n[10]=-1,n[14]=-2*r),n}var A7=Object.defineProperty,S7=(n,e,t)=>e in n?A7(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Cn=(n,e,t)=>(S7(n,typeof e!="symbol"?e+"":e,t),t);const Sh=1.6;var _h;(function(n){n[n.Swizzled=0]="Swizzled",n[n.Center=1]="Center",n[n.Quilt=2]="Quilt"})(_h||(_h={}));class _7 extends EventTarget{constructor(e){super(),Cn(this,"_calibration",{configVersion:"1.0",pitch:{value:45},slope:{value:-5},center:{value:-.5},viewCone:{value:40},invView:{value:1},verticalAngle:{value:0},DPI:{value:338},screenW:{value:250},screenH:{value:250},flipImageX:{value:0},flipImageY:{value:0},flipSubp:{value:0},serial:"LKG-DEFAULT-#####"}),Cn(this,"_viewControls",{tileHeight:512,numViews:48,trackballX:0,trackballY:0,targetX:0,targetY:Sh,targetZ:-.5,targetDiam:2,fovy:13/180*Math.PI,depthiness:1.25,inlineView:_h.Center,capturing:!1,quiltResolution:3840,popup:null,XRSession:null,lkgCanvas:null,appCanvas:null}),Cn(this,"LookingGlassDetected"),this._viewControls={...this._viewControls,...e},this.syncCalibration()}syncCalibration(){new p7(e=>{if(e.devices.length<1){console.log("No Looking Glass devices found");return}e.devices.length>1&&console.log("More than one Looking Glass device found... using the first one"),this.calibration=e.devices[0].calibration})}addEventListener(e,t,r){super.addEventListener(e,t,r)}onConfigChange(){this.dispatchEvent(new Event("on-config-changed"))}get calibration(){return this._calibration}set calibration(e){this._calibration={...this._calibration,...e},this.onConfigChange()}updateViewControls(e){e!=null&&(this._viewControls={...this._viewControls,...e},this.onConfigChange())}get tileHeight(){return Math.round(this.framebufferHeight/this.quiltHeight)}get quiltResolution(){return this._viewControls.quiltResolution}set quiltResolution(e){this.updateViewControls({quiltResolution:e})}get numViews(){return this.quiltWidth*this.quiltHeight}get targetX(){return this._viewControls.targetX}set targetX(e){this.updateViewControls({targetX:e})}get targetY(){return this._viewControls.targetY}set targetY(e){this.updateViewControls({targetY:e})}get targetZ(){return this._viewControls.targetZ}set targetZ(e){this.updateViewControls({targetZ:e})}get trackballX(){return this._viewControls.trackballX}set trackballX(e){this.updateViewControls({trackballX:e})}get trackballY(){return this._viewControls.trackballY}set trackballY(e){this.updateViewControls({trackballY:e})}get targetDiam(){return this._viewControls.targetDiam}set targetDiam(e){this.updateViewControls({targetDiam:e})}get fovy(){return this._viewControls.fovy}set fovy(e){this.updateViewControls({fovy:e})}get depthiness(){return this._viewControls.depthiness}set depthiness(e){this.updateViewControls({depthiness:e})}get inlineView(){return this._viewControls.inlineView}set inlineView(e){this.updateViewControls({inlineView:e})}get capturing(){return this._viewControls.capturing}set capturing(e){this.updateViewControls({capturing:e})}get popup(){return this._viewControls.popup}set popup(e){this.updateViewControls({popup:e})}get XRSession(){return this._viewControls.XRSession}set XRSession(e){this.updateViewControls({XRSession:e})}get lkgCanvas(){return this._viewControls.lkgCanvas}set lkgCanvas(e){this.updateViewControls({lkgCanvas:e})}get appCanvas(){return this._viewControls.appCanvas}set appCanvas(e){this.updateViewControls({appCanvas:e})}get aspect(){return this._calibration.screenW.value/this._calibration.screenH.value}get tileWidth(){return Math.round(this.framebufferWidth/this.quiltWidth)}get framebufferWidth(){return this._calibration.screenW.value<7e3?this._viewControls.quiltResolution:7680}get quiltWidth(){return this.calibration.screenW.value==1536?8:this.calibration.screenW.value==3840||this.calibration.screenW.value>7e3?5:8}get quiltHeight(){return this.calibration.screenW.value==1536?6:this.calibration.screenW.value==3840||this.calibration.screenW.value>7e3?9:6}get framebufferHeight(){return this._calibration.screenW.value<7e3?this._viewControls.quiltResolution:4320}get viewCone(){return this._calibration.viewCone.value*this.depthiness/180*Math.PI}get tilt(){return this._calibration.screenH.value/(this._calibration.screenW.value*this._calibration.slope.value)*(this._calibration.flipImageX.value?-1:1)}set tilt(e){}get subp(){return 1/(this._calibration.screenW.value*3)}get pitch(){const e=this._calibration.screenW.value/this._calibration.DPI.value;return this._calibration.pitch.value*e*Math.cos(Math.atan(1/this._calibration.slope.value))}}let _c=null;function lr(){return _c==null&&(_c=new _7),_c}function hm(n){const e=lr();n!=null&&e.updateViewControls(n)}async function E7(){const n=lr();let e=2;function t(){if(n.appCanvas!=null)try{let s=n.appCanvas.toDataURL();const i=document.createElement("a");i.style.display="none",i.href=s,i.download=`hologram_qs${n.quiltWidth}x${n.quiltHeight}a${n.aspect}.png`,document.body.appendChild(i),i.click(),document.body.removeChild(i),window.URL.revokeObjectURL(s)}catch(s){console.error("Error while capturing canvas data:",s)}finally{n.inlineView=e}}const r=document.getElementById("screenshotbutton");r&&r.addEventListener("click",()=>{e=n.inlineView;const s=vd.getInstance();if(!s){console.warn("LookingGlassXRDevice not initialized");return}n.inlineView=2,s.captureScreenshot=!0,setTimeout(()=>{s.screenshotCallback=t},100)})}function T7(){var n;const e=lr();if(console.log(e,"for debugging purposes"),e.lkgCanvas==null)console.warn("window placement called without a valid XR Session!");else{let t=function(){let d=h.d-h.a,f=h.w-h.s;d&&f&&(d*=Math.sqrt(.5),f*=Math.sqrt(.5));const m=e.trackballX,y=e.trackballY,p=Math.cos(m)*d-Math.sin(m)*Math.cos(y)*f,g=-Math.sin(y)*f,A=-Math.sin(m)*d-Math.cos(m)*Math.cos(y)*f;e.targetX=e.targetX+p*e.targetDiam*.03,e.targetY=e.targetY+g*e.targetDiam*.03,e.targetZ=e.targetZ+A*e.targetDiam*.03,requestAnimationFrame(t)};const r=document.createElement("style");document.head.appendChild(r),(n=r.sheet)==null||n.insertRule("#LookingGlassWebXRControls * { all: revert; font-family: sans-serif }");const s=document.createElement("div");s.id="LookingGlassWebXRControls",s.style.position="fixed",s.style.zIndex="1000",s.style.padding="15px",s.style.width="320px",s.style.maxWidth="calc(100vw - 18px)",s.style.maxHeight="calc(100vh - 18px)",s.style.whiteSpace="nowrap",s.style.background="rgba(0, 0, 0, 0.6)",s.style.color="white",s.style.borderRadius="10px",s.style.right="15px",s.style.bottom="15px",s.style.flex="row";const i=document.createElement("div");s.appendChild(i),i.style.width="100%",i.style.textAlign="center",i.style.fontWeight="bold",i.style.marginBottom="8px",i.innerText="Looking Glass Controls";const a=document.createElement("button");a.style.display="block",a.style.margin="auto",a.style.width="100%",a.style.height="35px",a.style.padding="4px",a.style.marginBottom="8px",a.style.borderRadius="8px",a.id="screenshotbutton",s.appendChild(a),a.innerText="Save Hologram";const o=document.createElement("button");o.style.display="block",o.style.margin="auto",o.style.width="100%",o.style.height="35px",o.style.padding="4px",o.style.marginBottom="8px",o.style.borderRadius="8px",o.id="copybutton",s.appendChild(o),o.innerText="Copy Config",o.addEventListener("click",()=>{C7(e)});const l=document.createElement("div");s.appendChild(l),l.style.width="290px",l.style.whiteSpace="normal",l.style.color="rgba(255,255,255,0.7)",l.style.fontSize="14px",l.style.margin="5px 0",l.innerHTML="Click the popup and use WASD, mouse left/right drag, and scroll.";const u=document.createElement("div");s.appendChild(u);const c=(d,f,m)=>{const y=m.stringify,p=document.createElement("div");p.style.marginBottom="8px",u.appendChild(p);const g=d,A=e[d],x=document.createElement("label");p.appendChild(x),x.innerText=m.label,x.setAttribute("for",g),x.style.width="100px",x.style.display="inline-block",x.style.textDecoration="dotted underline 1px",x.style.fontFamily='"Courier New"',x.style.fontSize="13px",x.style.fontWeight="bold",x.title=m.title;const S=document.createElement("input");p.appendChild(S),Object.assign(S,f),S.id=g,S.title=m.title,S.value=f.value!==void 0?f.value:A;const E=O=>{e[d]=O,R(O)};S.oninput=()=>{const O=f.type==="range"?parseFloat(S.value):f.type==="checkbox"?S.checked:S.value;E(O)};const M=O=>{let C=O(e[d]);m.fixRange&&(C=m.fixRange(C),S.max=Math.max(parseFloat(S.max),C).toString(),S.min=Math.min(parseFloat(S.min),C).toString()),S.value=C,E(C)};f.type==="range"&&(S.style.width="110px",S.style.height="8px",S.onwheel=O=>{M(C=>C+Math.sign(O.deltaX-O.deltaY)*f.step)});let R=O=>{};if(y){const O=document.createElement("span");O.style.fontFamily='"Courier New"',O.style.fontSize="13px",O.style.marginLeft="3px",p.appendChild(O),R=C=>{O.innerHTML=y(C)},R(A)}return M};c("fovy",{type:"range",min:1/180*Math.PI,max:120.1/180*Math.PI,step:1/180*Math.PI},{label:"fov",title:"perspective fov (degrades stereo effect)",fixRange:d=>Math.max(1/180*Math.PI,Math.min(d,120.1/180*Math.PI)),stringify:d=>{const f=d/Math.PI*180,m=Math.atan(Math.tan(d/2)*e.aspect)*2/Math.PI*180;return`${f.toFixed()}&deg;&times;${m.toFixed()}&deg;`}}),c("depthiness",{type:"range",min:0,max:2,step:.01},{label:"depthiness",title:"exaggerates depth by multiplying the width of the view cone (as reported by the firmware) - can somewhat compensate for depthiness lost using higher fov.",fixRange:d=>Math.max(0,d),stringify:d=>`${d.toFixed(2)}x`}),c("inlineView",{type:"range",min:0,max:2,step:1},{label:"inline view",title:"what to show inline on the original canvas (swizzled = no overwrite)",fixRange:d=>Math.max(0,Math.min(d,2)),stringify:d=>d===0?"swizzled":d===1?"center":d===2?"quilt":"?"}),e.lkgCanvas.oncontextmenu=d=>{d.preventDefault()},e.lkgCanvas.addEventListener("wheel",d=>{const f=e.targetDiam,m=1.1,y=Math.log(f)/Math.log(m);return e.targetDiam=Math.pow(m,y+d.deltaY*.01)}),e.lkgCanvas.addEventListener("mousemove",d=>{const f=d.movementX,m=-d.movementY;if(d.buttons&2||d.buttons&1&&(d.shiftKey||d.ctrlKey)){const y=e.trackballX,p=e.trackballY,g=-Math.cos(y)*f+Math.sin(y)*Math.sin(p)*m,A=-Math.cos(p)*m,x=Math.sin(y)*f+Math.cos(y)*Math.sin(p)*m;e.targetX=e.targetX+g*e.targetDiam*.001,e.targetY=e.targetY+A*e.targetDiam*.001,e.targetZ=e.targetZ+x*e.targetDiam*.001}else d.buttons&1&&(e.trackballX=e.trackballX-f*.01,e.trackballY=e.trackballY-m*.01)});const h={w:0,a:0,s:0,d:0};return e.lkgCanvas.addEventListener("keydown",d=>{switch(d.code){case"KeyW":h.w=1;break;case"KeyA":h.a=1;break;case"KeyS":h.s=1;break;case"KeyD":h.d=1;break}}),e.lkgCanvas.addEventListener("keyup",d=>{switch(d.code){case"KeyW":h.w=0;break;case"KeyA":h.a=0;break;case"KeyS":h.s=0;break;case"KeyD":h.d=0;break}}),requestAnimationFrame(t),setTimeout(()=>{E7()},1e3),s}}function C7(n){const e={targetX:n.targetX,targetY:n.targetY,targetZ:n.targetZ,fovy:`${Math.round(n.fovy/Math.PI*180)} * Math.PI / 180`,targetDiam:n.targetDiam,trackballX:n.trackballX,trackballY:n.trackballY,depthiness:n.depthiness};let t=JSON.stringify(e,null,4).replace(/"/g,"").replace(/{/g,"").replace(/}/g,"");navigator.clipboard.writeText(t)}let xl;const M7=(n,e)=>{const t=lr();if(t.lkgCanvas==null){console.warn("window placement called without a valid XR Session!");return}else if(n==!1)I7(t,xl);else{xl==null&&(xl=T7()),t.lkgCanvas.style.position="fixed",t.lkgCanvas.style.bottom="0",t.lkgCanvas.style.left="0",t.lkgCanvas.width=t.calibration.screenW.value,t.lkgCanvas.height=t.calibration.screenH.value,document.body.appendChild(xl);const r="getScreenDetails"in window;console.log(r,"Screen placement API exists"),r?R7(t.lkgCanvas,t,e):rx(t,t.lkgCanvas,e)}};async function R7(n,e,t){const r=await window.getScreenDetails();console.log(r);const s=r.screens.filter(i=>i.label.includes("LKG"))[0];if(console.log(s,"monitors"),s===void 0){console.log("no Looking Glass monitor detected - manually opening popup window"),rx(e,n,t);return}else{console.log("monitor ID",s.label,"serial number",e.calibration);const i=[`left=${s.left}`,`top=${s.top}`,`width=${s.width}`,`height=${s.height}`,"menubar=no","toolbar=no","location=no","status=no","resizable=yes","scrollbars=no","fullscreenEnabled=true"].join(",");e.popup=window.open("","new",i),e.popup&&(e.popup.document.body.style.background="black",e.popup.document.body.style.transform="1.0",sx(e),e.popup.document.body.appendChild(n),console.assert(t),e.popup.onbeforeunload=t)}}function rx(n,e,t){n.popup=window.open("",void 0,"width=640,height=360"),n.popup&&(n.popup.document.title="Looking Glass Window (fullscreen me on Looking Glass!)",n.popup.document.body.style.background="black",n.popup.document.body.style.transform="1.0",sx(n),n.popup.document.body.appendChild(e),console.assert(t),n.popup.onbeforeunload=t)}function I7(n,e){var t;(t=e.parentElement)==null||t.removeChild(e),n.popup&&(n.popup.onbeforeunload=null,n.popup.close(),n.popup=null)}function sx(n){n.popup&&n.popup.document.addEventListener("keydown",e=>{e.ctrlKey&&(e.key==="="||e.key==="-"||e.key==="+")&&e.preventDefault()})}const ws=Symbol("LookingGlassXRWebGLLayer");class N7 extends Qv{constructor(e,t,r){super(e,t,r);const s=lr();s.appCanvas=t.canvas,s.lkgCanvas=document.createElement("canvas"),s.lkgCanvas.tabIndex=0;const i=s.lkgCanvas.getContext("2d",{alpha:!1});s.lkgCanvas.addEventListener("dblclick",function(){this.requestFullscreen()});const a=this[qs].config,o=t.createTexture();let l,u;const c=t.createFramebuffer(),h=t.getExtension("OES_vertex_array_object"),d=34229,f=h?h.bindVertexArrayOES.bind(h):t.bindVertexArray.bind(t);(a.depth||a.stencil)&&(a.depth&&a.stencil?u={format:t.DEPTH_STENCIL,attachment:t.DEPTH_STENCIL_ATTACHMENT}:a.depth?u={format:t.DEPTH_COMPONENT16,attachment:t.DEPTH_ATTACHMENT}:a.stencil&&(u={format:t.STENCIL_INDEX8,attachment:t.STENCIL_ATTACHMENT}),l=t.createRenderbuffer());const m=(K,xe,Me,De,Ve)=>{y(K,xe,Ve.framebufferWidth,Ve.framebufferHeight),Me&&p(K,Me,De,Ve.framebufferWidth,Ve.framebufferHeight)},y=(K,xe,Me,De)=>{const Ve=K.getParameter(K.TEXTURE_BINDING_2D);K.bindTexture(K.TEXTURE_2D,xe),K.texImage2D(K.TEXTURE_2D,0,K.RGBA,Me,De,0,K.RGBA,K.UNSIGNED_BYTE,null),K.texParameteri(K.TEXTURE_2D,K.TEXTURE_MIN_FILTER,K.LINEAR),K.bindTexture(K.TEXTURE_2D,Ve)},p=(K,xe,Me,De,Ve)=>{const Be=K.getParameter(K.RENDERBUFFER_BINDING);K.bindRenderbuffer(K.RENDERBUFFER,xe),K.renderbufferStorage(K.RENDERBUFFER,Me.format,De,Ve),K.bindRenderbuffer(K.RENDERBUFFER,Be)},g=(K,xe,Me,De,Ve,Be)=>{const mt=K.getParameter(K.FRAMEBUFFER_BINDING);K.bindFramebuffer(K.FRAMEBUFFER,xe),K.framebufferTexture2D(K.FRAMEBUFFER,K.COLOR_ATTACHMENT0,K.TEXTURE_2D,Me,0),(Be.depth||Be.stencil)&&K.framebufferRenderbuffer(K.FRAMEBUFFER,De.attachment,K.RENDERBUFFER,Ve),K.bindFramebuffer(K.FRAMEBUFFER,mt)};m(t,o,l,u,s),s.addEventListener("on-config-changed",()=>m(t,o,l,u,s)),g(t,c,o,u,l,a);const A=`
		attribute vec2 a_position;
		varying vec2 v_texcoord;
		void main() {
		  gl_Position = vec4(a_position * 2.0 - 1.0, 0.0, 1.0);
		  v_texcoord = a_position;
		}
	  `;function x(K,xe,Me){const De=K.createShader(xe);return K.shaderSource(De,Me),K.compileShader(De),K.getShaderParameter(De,K.COMPILE_STATUS)?De:(console.warn(K.getShaderInfoLog(De)),null)}function S(K,xe,Me){let De=K.createProgram();const Ve=x(K,K.VERTEX_SHADER,xe),Be=x(K,K.FRAGMENT_SHADER,Me);return Ve===null||Be===null?(console.error("There was a problem with shader construction"),null):(K.attachShader(De,Ve),K.attachShader(De,Be),K.linkProgram(De),K.getProgramParameter(De,K.LINK_STATUS)?De:(console.warn(K.getProgramInfoLog(De)),null))}let E,M,R,O;const C=(K,xe,Me)=>{const De=Me(xe);if(De===M)return;M=De;const Ve=x(K,K.FRAGMENT_SHADER,De);if(Ve===null)return;E&&K.deleteShader(E),E=Ve;const Be=S(K,A,De);if(Be===null){console.warn("There was a problem with shader construction");return}R=K.getAttribLocation(Be,"a_position"),O=K.getUniformLocation(Be,"u_viewType");const mt=K.getUniformLocation(Be,"u_texture"),Kt=K.getParameter(K.CURRENT_PROGRAM);K.useProgram(Be),K.uniform1i(mt,0),K.useProgram(Kt),N&&K.deleteProgram(N),N=Be};console.log(Ac(s));let N=S(t,A,Ac(s));N===null&&console.warn("There was a problem with shader construction"),s.addEventListener("on-config-changed",()=>{C(t,s,Ac)});const $=h?h.createVertexArrayOES():t.createVertexArray(),q=t.createBuffer(),z=t.getParameter(t.ARRAY_BUFFER_BINDING),F=t.getParameter(d);f($),t.bindBuffer(t.ARRAY_BUFFER,q),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),t.STATIC_DRAW),t.enableVertexAttribArray(R),t.vertexAttribPointer(R,2,t.FLOAT,!1,0,0),f(F),t.bindBuffer(t.ARRAY_BUFFER,z);const X=()=>{console.assert(this[ws].LookingGlassEnabled),t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer);const K=t.getParameter(t.COLOR_CLEAR_VALUE),xe=t.getParameter(t.DEPTH_CLEAR_VALUE),Me=t.getParameter(t.STENCIL_CLEAR_VALUE);t.clearColor(0,0,0,0),t.clearDepth(1),t.clearStencil(0),t.clear(t.DEPTH_BUFFER_BIT|t.COLOR_BUFFER_BIT|t.STENCIL_BUFFER_BIT),t.clearColor(K[0],K[1],K[2],K[3]),t.clearDepth(xe),t.clearStencil(Me)};function Q(){if(!s.appCanvas||!s.lkgCanvas)return;(s.appCanvas.width!==s.framebufferWidth||s.appCanvas.height!==s.framebufferHeight)&&(s.appCanvas.width,s.appCanvas.height,s.appCanvas.width=s.framebufferWidth,s.appCanvas.height=s.framebufferHeight);const K=ie();de(),ve(),J(),fe(),Z(K)}function Z(K){t.activeTexture(K.activeTexture),t.bindTexture(t.TEXTURE_2D,K.textureBinding),t.useProgram(K.program),t.bindRenderbuffer(t.RENDERBUFFER,K.renderbufferBinding),t.bindFramebuffer(t.FRAMEBUFFER,K.framebufferBinding),K.scissorTest?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),K.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),K.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),K.blend?t.enable(t.BLEND):t.disable(t.BLEND),K.cullFace?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),f(K.VAO)}function ie(){return{VAO:t.getParameter(t.VERTEX_ARRAY_BINDING),cullFace:t.getParameter(t.CULL_FACE),blend:t.getParameter(t.BLEND),depthTest:t.getParameter(t.DEPTH_TEST),stencilTest:t.getParameter(t.STENCIL_TEST),scissorTest:t.getParameter(t.SCISSOR_TEST),viewport:t.getParameter(t.VIEWPORT),framebufferBinding:t.getParameter(t.FRAMEBUFFER_BINDING),renderbufferBinding:t.getParameter(t.RENDERBUFFER_BINDING),program:t.getParameter(t.CURRENT_PROGRAM),activeTexture:t.getParameter(t.ACTIVE_TEXTURE),textureBinding:t.getParameter(t.TEXTURE_BINDING_2D)}}function de(){t.bindFramebuffer(t.FRAMEBUFFER,null),t.useProgram(N),f($),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,o),t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)}function ve(){t.uniform1i(O,0),t.drawArrays(t.TRIANGLES,0,6)}function J(){if(!s.lkgCanvas||!s.appCanvas){console.warn("Looking Glass Canvas is not defined");return}i?.clearRect(0,0,s.lkgCanvas.width,s.lkgCanvas.height),i?.drawImage(s.appCanvas,0,0,s.framebufferWidth,s.framebufferHeight,0,0,s.calibration.screenW.value,s.calibration.screenH.value)}function fe(){if(!s.appCanvas){console.warn("Looking Glass Canvas is not defined");return}s.inlineView!==0&&(s.capturing&&s.appCanvas.width!==s.framebufferWidth&&(s.appCanvas.width=s.framebufferWidth,s.appCanvas.height=s.framebufferHeight,t.viewport(0,0,s.framebufferHeight,s.framebufferWidth)),t.uniform1i(O,s.inlineView),t.drawArrays(t.TRIANGLES,0,6))}window.addEventListener("unload",()=>{s.popup&&s.popup.close(),s.popup=null}),this[ws]={LookingGlassEnabled:!1,framebuffer:c,clearFramebuffer:X,blitTextureToDefaultFramebufferIfNeeded:Q,moveCanvasToWindow:M7}}get framebuffer(){return this[ws].LookingGlassEnabled?this[ws].framebuffer:null}get framebufferWidth(){return lr().framebufferWidth}get framebufferHeight(){return lr().framebufferHeight}}const Cl=class extends yd{constructor(n){super(n),this.sessions=new Map,this.viewSpaces=[],this.basePoseMatrix=vs(),this.inlineProjectionMatrix=vs(),this.inlineInverseViewMatrix=vs(),this.LookingGlassProjectionMatrices=[],this.LookingGlassInverseViewMatrices=[],this.captureScreenshot=!1,this.screenshotCallback=null,Cl.instance||(Cl.instance=this)}static getInstance(){return Cl.instance}onBaseLayerSet(n,e){const t=this.sessions.get(n);t.baseLayer=e;const r=lr(),s=e[ws];s.LookingGlassEnabled=t.immersive,t.immersive&&(r.XRSession=this.sessions.get(n),r.popup==null?s.moveCanvasToWindow(!0,()=>{this.endSession(n)}):console.warn("attempted to assign baselayer twice?"))}isSessionSupported(n){return n==="inline"||n==="immersive-vr"}isFeatureSupported(n){switch(n){case"viewer":return!0;case"local":return!0;case"local-floor":return!0;case"bounded-floor":return!1;case"unbounded":return!1;default:return console.warn("LookingGlassXRDevice.isFeatureSupported: feature not understood:",n),!1}}async requestSession(n,e){if(!this.isSessionSupported(n))return Promise.reject();const t=n!=="inline",r=new D7(n,e);return this.sessions.set(r.id,r),t&&this.dispatchEvent("@@webxr-polyfill/vr-present-start",r.id),Promise.resolve(r.id)}requestAnimationFrame(n){return this.global.requestAnimationFrame(n)}cancelAnimationFrame(n){this.global.cancelAnimationFrame(n)}onFrameStart(n,e){const t=this.sessions.get(n),r=lr();if(t.immersive){const s=Math.tan(.5*r.fovy),i=.5*r.targetDiam/s,a=i-r.targetDiam,o=this.basePoseMatrix;Sc(o,[r.targetX,r.targetY,r.targetZ]),cm(o,o,r.trackballX,[0,1,0]),cm(o,o,-r.trackballY,[1,0,0]),um(o,o,[0,0,i]);for(let l=0;l<r.numViews;++l){const u=(l+.5)/r.numViews-.5,c=Math.tan(r.viewCone*u),h=i*c,d=this.LookingGlassInverseViewMatrices[l]=this.LookingGlassInverseViewMatrices[l]||vs();um(d,o,[h,0,0]),lm(d,d);const f=Math.max(a+e.depthNear,.01),m=a+e.depthFar,y=f*s,p=y,g=-y,A=f*-c,x=r.aspect*y,S=A+x,E=A-x,M=this.LookingGlassProjectionMatrices[l]=this.LookingGlassProjectionMatrices[l]||vs();b7(M,2*f/(S-E),0,0,0,0,2*f/(p-g),0,0,(S+E)/(S-E),(p+g)/(p-g),-(m+f)/(m-f),-1,0,0,-2*m*f/(m-f),0)}t.baseLayer[ws].clearFramebuffer()}else{const s=t.baseLayer.context,i=s.drawingBufferWidth/s.drawingBufferHeight;w7(this.inlineProjectionMatrix,e.inlineVerticalFieldOfView,i,e.depthNear,e.depthFar),Sc(this.basePoseMatrix,[0,Sh,0]),lm(this.inlineInverseViewMatrix,this.basePoseMatrix)}}onFrameEnd(n){this.sessions.get(n).baseLayer[ws].blitTextureToDefaultFramebufferIfNeeded(),this.captureScreenshot&&this.screenshotCallback&&(this.screenshotCallback(),this.captureScreenshot=!1)}async requestFrameOfReferenceTransform(n,e){const t=vs();switch(n){case"viewer":case"local":return Sc(t,[0,-Sh,0]),t;case"local-floor":return t;default:throw new Error("XRReferenceSpaceType not understood")}}endSession(n){const e=this.sessions.get(n);e.immersive&&e.baseLayer&&(e.baseLayer[ws].moveCanvasToWindow(!1),this.dispatchEvent("@@webxr-polyfill/vr-present-end",n)),e.ended=!0}doesSessionSupportReferenceSpace(n,e){const t=this.sessions.get(n);return t.ended?!1:t.enabledFeatures.has(e)}getViewSpaces(n){if(n==="immersive-vr"){const e=lr();for(let t=this.viewSpaces.length;t<e.numViews;++t)this.viewSpaces[t]=new L7(t);return this.viewSpaces.length=e.numViews,this.viewSpaces}}getViewport(n,e,t,r,s){if(s===void 0){const i=this.sessions.get(n).baseLayer.context;r.x=0,r.y=0,r.width=i.drawingBufferWidth,r.height=i.drawingBufferHeight}else{const i=lr(),a=s%i.quiltWidth,o=Math.floor(s/i.quiltWidth);r.x=i.framebufferWidth/i.quiltWidth*a,r.y=i.framebufferHeight/i.quiltHeight*o,r.width=i.framebufferWidth/i.quiltWidth,r.height=i.framebufferHeight/i.quiltHeight}return!0}getProjectionMatrix(n,e){return e===void 0?this.inlineProjectionMatrix:this.LookingGlassProjectionMatrices[e]||vs()}getBasePoseMatrix(){return this.basePoseMatrix}getBaseViewMatrix(){return this.inlineInverseViewMatrix}_getViewMatrixByIndex(n){return this.LookingGlassInverseViewMatrices[n]=this.LookingGlassInverseViewMatrices[n]||vs()}getInputSources(){return[]}getInputPose(n,e,t){return null}onWindowResize(){}};let vd=Cl;Cn(vd,"instance",null);let P7=0;class D7{constructor(e,t){Cn(this,"mode"),Cn(this,"immersive"),Cn(this,"id"),Cn(this,"baseLayer"),Cn(this,"inlineVerticalFieldOfView"),Cn(this,"ended"),Cn(this,"enabledFeatures"),this.mode=e,this.immersive=e==="immersive-vr"||e==="immersive-ar",this.id=++P7,this.baseLayer=null,this.inlineVerticalFieldOfView=Math.PI*.5,this.ended=!1,this.enabledFeatures=t}}class L7 extends va{constructor(e){super(),Cn(this,"viewIndex"),this.viewIndex=e}get eye(){return"none"}_onPoseUpdate(e){this._inverseBaseMatrix=e._getViewMatrixByIndex(this.viewIndex)}}class xd extends c7{constructor(e){super(),Cn(this,"vrButton"),Cn(this,"device"),Cn(this,"isPresenting",!1),hm(e),this.loadPolyfill()}static async init(e){new xd(e)}async loadPolyfill(){this.overrideDefaultVRButton(),console.warn('Looking Glass WebXR "polyfill" overriding native WebXR API.');for(const e in lo)this.global[e]=lo[e];this.global.XRWebGLLayer=N7,this.injected=!0,this.device=new vd(this.global),this.xr=new zv(Promise.resolve(this.device)),Object.defineProperty(this.global.navigator,"xr",{value:this.xr,configurable:!0})}async overrideDefaultVRButton(){this.vrButton=await k7("VRButton"),this.vrButton&&this.device?(this.device.addEventListener("@@webxr-polyfill/vr-present-start",()=>{this.isPresenting=!0,this.updateVRButtonUI()}),this.device.addEventListener("@@webxr-polyfill/vr-present-end",()=>{this.isPresenting=!1,this.updateVRButtonUI()}),this.vrButton.addEventListener("click",e=>{this.updateVRButtonUI()}),this.updateVRButtonUI()):console.warn("Unable to find VRButton")}async updateVRButtonUI(){if(this.vrButton){await F7(100),this.isPresenting?this.vrButton.innerHTML="EXIT LOOKING GLASS":this.vrButton.innerHTML="ENTER LOOKING GLASS";const e=220;this.vrButton.style.width=`${e}px`,this.vrButton.style.left=`calc(50% - ${e/2}px)`}}update(e){hm(e)}}async function k7(n){return new Promise(e=>{const t=new MutationObserver(function(r){r.forEach(function(s){s.addedNodes.forEach(function(i){const a=i;a.id===n&&(e(a),t.disconnect())})})});t.observe(document.body,{subtree:!1,childList:!0}),setTimeout(()=>{t.disconnect(),e(null)},5e3)})}function F7(n){return new Promise(e=>setTimeout(e,n))}lr();class xa{static createButton(e){const t=document.createElement("button");function r(){let l=null;async function u(h){h.addEventListener("end",c),await e.xr.setSession(h),t.textContent="EXIT VR",l=h}function c(){l.removeEventListener("end",c),t.textContent="ENTER VR",l=null}t.style.display="",t.style.cursor="pointer",t.style.left="calc(50% - 50px)",t.style.width="100px",t.textContent="ENTER VR",t.onmouseenter=function(){t.style.opacity="1.0"},t.onmouseleave=function(){t.style.opacity="0.5"},t.onclick=function(){if(l===null){const h={optionalFeatures:["local-floor","bounded-floor","hand-tracking","layers"]};navigator.xr.requestSession("immersive-vr",h).then(u)}else l.end()}}function s(){t.style.display="",t.style.cursor="auto",t.style.left="calc(50% - 75px)",t.style.width="150px",t.onmouseenter=null,t.onmouseleave=null,t.onclick=null}function i(){s(),t.textContent="VR NOT SUPPORTED"}function a(l){s(),console.warn("Exception when trying to call xr.isSessionSupported",l),t.textContent="VR NOT ALLOWED"}function o(l){l.style.position="absolute",l.style.bottom="20px",l.style.padding="12px 6px",l.style.border="1px solid #fff",l.style.borderRadius="4px",l.style.background="rgba(0,0,0,0.1)",l.style.color="#fff",l.style.font="normal 13px sans-serif",l.style.textAlign="center",l.style.opacity="0.5",l.style.outline="none",l.style.zIndex="999"}if("xr"in navigator)return t.id="VRButton",t.style.display="none",o(t),navigator.xr.isSessionSupported("immersive-vr").then(function(l){l?r():i(),l&&xa.xrSessionIsGranted&&t.click()}).catch(a),t;{const l=document.createElement("a");return window.isSecureContext===!1?(l.href=document.location.href.replace(/^http:/,"https:"),l.innerHTML="WEBXR NEEDS HTTPS"):(l.href="https://immersiveweb.dev/",l.innerHTML="WEBXR NOT AVAILABLE"),l.style.left="calc(50% - 90px)",l.style.width="180px",l.style.textDecoration="none",o(l),l}}static registerSessionGrantedListener(){if("xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",()=>{xa.xrSessionIsGranted=!0})}}}xa.xrSessionIsGranted=!1;xa.registerSessionGrantedListener();new xd({targetX:.023710900360862243,targetY:-.010309250276921724,targetZ:.6353649044950787,fovy:1*Math.PI/180,targetDiam:.9869841960442293,trackballX:-.04000000000000008,trackballY:26020852139652106e-32,depthiness:.85});await A3();const ix=document.getElementById("root"),Ls=new Wm({antialias:!0,canvas:ix});Ls.xr.enabled=!0;document.body.appendChild(xa.createButton(Ls));const O7=await sG("./pydnet.json"),To=new rr(90,window.innerWidth/window.innerHeight,.01,10);To.position.z=5;const zo=new g_;zo.add(new w_);zo.background=new Ct("red");const U7=new ru(1,1,400,200),Ms=new Is({uniforms:{depthMap:{value:new mn},colorMap:{value:new mn}},vertexShader:`
  varying vec3 vUv;
  uniform sampler2D depthMap;

  void main() {
    vUv = position; 

    float depth = texture2D(depthMap, vUv.xy * vec2(1.0, -1.0) + vec2(0.5)).r;

    vec4 modelViewPosition = modelViewMatrix * vec4(position.xy, depth * 1.0, 1.0);
    gl_Position = projectionMatrix * modelViewPosition;
  }`,fragmentShader:`
  varying vec3 vUv;
  uniform sampler2D colorMap;

  void main() {
    gl_FragColor = texture2D(colorMap, vUv.xy * vec2(1.0) + vec2(0.5));
  }`});Ms.side=Pr;Ms.transparent=!0;const ax=new ts(U7,Ms);zo.add(ax);Ls.setSize(window.innerWidth,window.innerHeight);window.addEventListener("resize",()=>{Ls.setSize(window.innerWidth,window.innerHeight),To.aspect=window.innerWidth/window.innerHeight,To.updateProjectionMatrix()});ix.addEventListener("click",async()=>{const n=await navigator.mediaDevices.getDisplayMedia({video:!0}),e=document.createElement("video");e.srcObject=n,e.play(),Ms.uniforms.colorMap.value=new b_(e),Ms.needsUpdate=!0,Ls.setAnimationLoop(()=>B7(e))});Ls.setAnimationLoop(()=>Ls.render(zo,To));async function B7(n){ax.scale.x=n.videoWidth/n.videoHeight,Ls.render(zo,To),$7(n)}async function $7(n){const e=tL(n),t=q1.resizeBilinear(e,[384,640]),r=jr(t),s=Mt(r,255),i=O7.predict(s),a=z7(i,n.videoWidth,n.videoHeight),o=await a.data();s.dispose(),t.dispose(),r.dispose(),e.dispose(),i.dispose(),a.dispose();const l=new y_(o,640,384,bm,Jr);Ms.uniforms.depthMap.value.dispose(),Ms.uniforms.depthMap.value=l,l.needsUpdate=!0,Ms.needsUpdate=!0}function z7(n,e,t){return bt(()=>{n=Bo(n),n=gu(n);var r=Ul(n),s=oi(n);return n=Mt(ot(n,r),ot(s,r)),n})}
